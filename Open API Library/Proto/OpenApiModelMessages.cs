// Generated by ProtoGen, Version=2.4.1.555, Culture=neutral, PublicKeyToken=55f7125234beb589.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public static partial class OpenApiModelMessages {

  #region Extension registration
  public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
  }
  #endregion
  #region Static variables
  internal static pbd::MessageDescriptor internal__static_ProtoOAAsset__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::ProtoOAAsset, global::ProtoOAAsset.Builder> internal__static_ProtoOAAsset__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_ProtoOASymbol__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::ProtoOASymbol, global::ProtoOASymbol.Builder> internal__static_ProtoOASymbol__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_ProtoOALightSymbol__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::ProtoOALightSymbol, global::ProtoOALightSymbol.Builder> internal__static_ProtoOALightSymbol__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_ProtoOASymbolCategory__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::ProtoOASymbolCategory, global::ProtoOASymbolCategory.Builder> internal__static_ProtoOASymbolCategory__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_ProtoOAInterval__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::ProtoOAInterval, global::ProtoOAInterval.Builder> internal__static_ProtoOAInterval__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_ProtoOATrader__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::ProtoOATrader, global::ProtoOATrader.Builder> internal__static_ProtoOATrader__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_ProtoOAPosition__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::ProtoOAPosition, global::ProtoOAPosition.Builder> internal__static_ProtoOAPosition__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_ProtoOATradeData__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::ProtoOATradeData, global::ProtoOATradeData.Builder> internal__static_ProtoOATradeData__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_ProtoOAOrder__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::ProtoOAOrder, global::ProtoOAOrder.Builder> internal__static_ProtoOAOrder__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_ProtoOABonusDepositWithdraw__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::ProtoOABonusDepositWithdraw, global::ProtoOABonusDepositWithdraw.Builder> internal__static_ProtoOABonusDepositWithdraw__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_ProtoOADepositWithdraw__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::ProtoOADepositWithdraw, global::ProtoOADepositWithdraw.Builder> internal__static_ProtoOADepositWithdraw__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_ProtoOADeal__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::ProtoOADeal, global::ProtoOADeal.Builder> internal__static_ProtoOADeal__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_ProtoOAClosePositionDetail__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::ProtoOAClosePositionDetail, global::ProtoOAClosePositionDetail.Builder> internal__static_ProtoOAClosePositionDetail__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_ProtoOATrendbar__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::ProtoOATrendbar, global::ProtoOATrendbar.Builder> internal__static_ProtoOATrendbar__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_ProtoOAExpectedMargin__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::ProtoOAExpectedMargin, global::ProtoOAExpectedMargin.Builder> internal__static_ProtoOAExpectedMargin__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_ProtoOATickData__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::ProtoOATickData, global::ProtoOATickData.Builder> internal__static_ProtoOATickData__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_ProtoOACtidProfile__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::ProtoOACtidProfile, global::ProtoOACtidProfile.Builder> internal__static_ProtoOACtidProfile__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_ProtoOACtidTraderAccount__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::ProtoOACtidTraderAccount, global::ProtoOACtidTraderAccount.Builder> internal__static_ProtoOACtidTraderAccount__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_ProtoOAAssetClass__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::ProtoOAAssetClass, global::ProtoOAAssetClass.Builder> internal__static_ProtoOAAssetClass__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_ProtoOADepthQuote__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::ProtoOADepthQuote, global::ProtoOADepthQuote.Builder> internal__static_ProtoOADepthQuote__FieldAccessorTable;
  internal static pbd::MessageDescriptor internal__static_ProtoOAMarginCall__Descriptor;
  internal static pb::FieldAccess.FieldAccessorTable<global::ProtoOAMarginCall, global::ProtoOAMarginCall.Builder> internal__static_ProtoOAMarginCall__FieldAccessorTable;
  #endregion
  #region Descriptor
  public static pbd::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbd::FileDescriptor descriptor;
  
  static OpenApiModelMessages() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChpPcGVuQXBpTW9kZWxNZXNzYWdlcy5wcm90byJCCgxQcm90b09BQXNzZXQS", 
          "DwoHYXNzZXRJZBgBIAIoAxIMCgRuYW1lGAIgAigJEhMKC2Rpc3BsYXlOYW1l", 
          "GAMgASgJIskHCg1Qcm90b09BU3ltYm9sEhAKCHN5bWJvbElkGAEgAigDEg4K", 
          "BmRpZ2l0cxgCIAIoBRITCgtwaXBQb3NpdGlvbhgDIAIoBRIaChJlbmFibGVT", 
          "aG9ydFNlbGxpbmcYBCABKAgSGgoSZ3VhcmFudGVlZFN0b3BMb3NzGAUgASgI", 
          "EjQKEXN3YXBSb2xsb3ZlcjNEYXlzGAYgASgOMhEuUHJvdG9PQURheU9mV2Vl", 
          "azoGTU9OREFZEhAKCHN3YXBMb25nGAcgASgBEhEKCXN3YXBTaG9ydBgIIAEo", 
          "ARIRCgltYXhWb2x1bWUYCSABKAMSEQoJbWluVm9sdW1lGAogASgDEhIKCnN0", 
          "ZXBWb2x1bWUYCyABKAMSEwoLbWF4RXhwb3N1cmUYDCABKAQSIgoIc2NoZWR1", 
          "bGUYDSADKAsyEC5Qcm90b09BSW50ZXJ2YWwSEgoKY29tbWlzc2lvbhgOIAIo", 
          "AxI/Cg5jb21taXNzaW9uVHlwZRgPIAEoDjIWLlByb3RvT0FDb21taXNzaW9u", 
          "VHlwZToPVVNEX1BFUl9NSUxfVVNEEhIKCnNsRGlzdGFuY2UYECABKA0SEgoK", 
          "dHBEaXN0YW5jZRgRIAEoDRITCgtnc2xEaXN0YW5jZRgSIAEoDRIRCglnc2xD", 
          "aGFyZ2UYEyABKAMSTAoNZGlzdGFuY2VTZXRJbhgUIAEoDjIaLlByb3RvT0FT", 
          "eW1ib2xEaXN0YW5jZVR5cGU6GVNZTUJPTF9ESVNUQU5DRV9JTl9QT0lOVFMS", 
          "FQoNbWluQ29tbWlzc2lvbhgVIAEoAxI+ChFtaW5Db21taXNzaW9uVHlwZRgW", 
          "IAEoDjIZLlByb3RvT0FNaW5Db21taXNzaW9uVHlwZToIQ1VSUkVOQ1kSHwoS", 
          "bWluQ29tbWlzc2lvbkFzc2V0GBcgASgJOgNVU0QSGgoScm9sbG92ZXJDb21t", 
          "aXNzaW9uGBggASgDEhgKEHNraXBSb2xsb3ZlckRheXMYGSABKAUSGAoQc2No", 
          "ZWR1bGVUaW1lWm9uZRgaIAEoCRIxCgt0cmFkaW5nTW9kZRgbIAEoDjITLlBy", 
          "b3RvT0FUcmFkaW5nTW9kZToHRU5BQkxFRBI6Chdyb2xsb3ZlckNvbW1pc3Np", 
          "b24zRGF5cxgcIAEoDjIRLlByb3RvT0FEYXlPZldlZWs6Bk1PTkRBWRJAChNz", 
          "d2FwQ2FsY3VsYXRpb25UeXBlGB0gASgOMhsuUHJvdG9PQVN3YXBDYWxjdWxh", 
          "dGlvblR5cGU6BlBPSU5UUxIPCgdsb3RTaXplGB4gASgDIqUBChJQcm90b09B", 
          "TGlnaHRTeW1ib2wSEAoIc3ltYm9sSWQYASACKAMSEgoKc3ltYm9sTmFtZRgC", 
          "IAEoCRIPCgdlbmFibGVkGAMgASgIEhMKC2Jhc2VBc3NldElkGAQgASgDEhQK", 
          "DHF1b3RlQXNzZXRJZBgFIAEoAxIYChBzeW1ib2xDYXRlZ29yeUlkGAYgASgD", 
          "EhMKC2Rlc2NyaXB0aW9uGAcgASgJIkcKFVByb3RvT0FTeW1ib2xDYXRlZ29y", 
          "eRIKCgJpZBgBIAIoAxIUCgxhc3NldENsYXNzSWQYAiACKAMSDAoEbmFtZRgD", 
          "IAIoCSI5Cg9Qcm90b09BSW50ZXJ2YWwSEwoLc3RhcnRTZWNvbmQYAyACKA0S", 
          "EQoJZW5kU2Vjb25kGAQgAigNIo8FCg1Qcm90b09BVHJhZGVyEhsKE2N0aWRU", 
          "cmFkZXJBY2NvdW50SWQYASACKAMSDwoHYmFsYW5jZRgCIAIoAxIWCg5iYWxh", 
          "bmNlVmVyc2lvbhgDIAEoAxIUCgxtYW5hZ2VyQm9udXMYBCABKAMSDwoHaWJC", 
          "b251cxgFIAEoAxIcChRub25XaXRoZHJhd2FibGVCb251cxgGIAEoAxI3Cgxh", 
          "Y2Nlc3NSaWdodHMYByABKA4yFC5Qcm90b09BQWNjZXNzUmlnaHRzOgtGVUxM", 
          "X0FDQ0VTUxIWCg5kZXBvc2l0QXNzZXRJZBgIIAIoAxIQCghzd2FwRnJlZRgJ", 
          "IAEoCBIXCg9sZXZlcmFnZUluQ2VudHMYCiABKA0SRgoadG90YWxNYXJnaW5D", 
          "YWxjdWxhdGlvblR5cGUYCyABKA4yIi5Qcm90b09BVG90YWxNYXJnaW5DYWxj", 
          "dWxhdGlvblR5cGUSEwoLbWF4TGV2ZXJhZ2UYDCABKA0SFgoKZnJlbmNoUmlz", 
          "axgNIAEoCEICGAESEwoLdHJhZGVyTG9naW4YDiABKAMSMAoLYWNjb3VudFR5", 
          "cGUYDyABKA4yEy5Qcm90b09BQWNjb3VudFR5cGU6BkhFREdFRBISCgpicm9r", 
          "ZXJOYW1lGBAgASgJEh0KFXJlZ2lzdHJhdGlvblRpbWVzdGFtcBgRIAEoAxIV", 
          "Cg1pc0xpbWl0ZWRSaXNrGBIgASgIEnEKJGxpbWl0ZWRSaXNrTWFyZ2luQ2Fs", 
          "Y3VsYXRpb25TdHJhdGVneRgTIAEoDjIsLlByb3RvT0FMaW1pdGVkUmlza01h", 
          "cmdpbkNhbGN1bGF0aW9uU3RyYXRlZ3k6FUFDQ09SRElOR19UT19MRVZFUkFH", 
          "RSKVAwoPUHJvdG9PQVBvc2l0aW9uEhIKCnBvc2l0aW9uSWQYASACKAMSJAoJ", 
          "dHJhZGVEYXRhGAIgAigLMhEuUHJvdG9PQVRyYWRlRGF0YRIuCg5wb3NpdGlv", 
          "blN0YXR1cxgDIAIoDjIWLlByb3RvT0FQb3NpdGlvblN0YXR1cxIMCgRzd2Fw", 
          "GAQgAigDEg0KBXByaWNlGAUgASgBEhAKCHN0b3BMb3NzGAYgASgBEhIKCnRh", 
          "a2VQcm9maXQYByABKAESHgoWdXRjTGFzdFVwZGF0ZVRpbWVzdGFtcBgIIAEo", 
          "AxISCgpjb21taXNzaW9uGAkgASgDEhIKCm1hcmdpblJhdGUYCiABKAESGwoT", 
          "bWlycm9yaW5nQ29tbWlzc2lvbhgLIAEoAxIaChJndWFyYW50ZWVkU3RvcExv", 
          "c3MYDCABKAgSEgoKdXNlZE1hcmdpbhgNIAEoBBJAChVzdG9wTG9zc1RyaWdn", 
          "ZXJNZXRob2QYDiABKA4yGi5Qcm90b09BT3JkZXJUcmlnZ2VyTWV0aG9kOgVU", 
          "UkFERSKcAQoQUHJvdG9PQVRyYWRlRGF0YRIQCghzeW1ib2xJZBgBIAIoAxIO", 
          "CgZ2b2x1bWUYAiACKAMSJAoJdHJhZGVTaWRlGAMgAigOMhEuUHJvdG9PQVRy", 
          "YWRlU2lkZRIVCg1vcGVuVGltZXN0YW1wGAQgASgDEg0KBWxhYmVsGAUgASgJ", 
          "EhoKEmd1YXJhbnRlZWRTdG9wTG9zcxgGIAEoCCKlBQoMUHJvdG9PQU9yZGVy", 
          "Eg8KB29yZGVySWQYASACKAMSJAoJdHJhZGVEYXRhGAIgAigLMhEuUHJvdG9P", 
          "QVRyYWRlRGF0YRIkCglvcmRlclR5cGUYAyACKA4yES5Qcm90b09BT3JkZXJU", 
          "eXBlEigKC29yZGVyU3RhdHVzGAQgAigOMhMuUHJvdG9PQU9yZGVyU3RhdHVz", 
          "EhsKE2V4cGlyYXRpb25UaW1lc3RhbXAYBiABKAMSFgoOZXhlY3V0aW9uUHJp", 
          "Y2UYByABKAESFgoOZXhlY3V0ZWRWb2x1bWUYCCABKAMSHgoWdXRjTGFzdFVw", 
          "ZGF0ZVRpbWVzdGFtcBgJIAEoAxIZChFiYXNlU2xpcHBhZ2VQcmljZRgKIAEo", 
          "ARIYChBzbGlwcGFnZUluUG9pbnRzGAsgASgDEhQKDGNsb3NpbmdPcmRlchgM", 
          "IAEoCBISCgpsaW1pdFByaWNlGA0gASgBEhEKCXN0b3BQcmljZRgOIAEoARIQ", 
          "CghzdG9wTG9zcxgPIAEoARISCgp0YWtlUHJvZml0GBAgASgBEhUKDWNsaWVu", 
          "dE9yZGVySWQYESABKAkSPQoLdGltZUluRm9yY2UYEiABKA4yEy5Qcm90b09B", 
          "VGltZUluRm9yY2U6E0lNTUVESUFURV9PUl9DQU5DRUwSEgoKcG9zaXRpb25J", 
          "ZBgTIAEoAxIYChByZWxhdGl2ZVN0b3BMb3NzGBQgASgDEhoKEnJlbGF0aXZl", 
          "VGFrZVByb2ZpdBgVIAEoAxIRCglpc1N0b3BPdXQYFiABKAgSGAoQdHJhaWxp", 
          "bmdTdG9wTG9zcxgXIAEoCBI8ChFzdG9wVHJpZ2dlck1ldGhvZBgYIAEoDjIa", 
          "LlByb3RvT0FPcmRlclRyaWdnZXJNZXRob2Q6BVRSQURFIoQCChtQcm90b09B", 
          "Qm9udXNEZXBvc2l0V2l0aGRyYXcSLgoNb3BlcmF0aW9uVHlwZRgBIAIoDjIX", 
          "LlByb3RvT0FDaGFuZ2VCb251c1R5cGUSFgoOYm9udXNIaXN0b3J5SWQYAiAC", 
          "KAMSFAoMbWFuYWdlckJvbnVzGAMgAigDEhQKDG1hbmFnZXJEZWx0YRgEIAIo", 
          "AxIPCgdpYkJvbnVzGAUgAigDEg8KB2liRGVsdGEYBiACKAMSHAoUY2hhbmdl", 
          "Qm9udXNUaW1lc3RhbXAYByACKAMSFAoMZXh0ZXJuYWxOb3RlGAggASgJEhsK", 
          "E2ludHJvZHVjaW5nQnJva2VySWQYCSABKAMi4gEKFlByb3RvT0FEZXBvc2l0", 
          "V2l0aGRyYXcSMAoNb3BlcmF0aW9uVHlwZRgBIAIoDjIZLlByb3RvT0FDaGFu", 
          "Z2VCYWxhbmNlVHlwZRIYChBiYWxhbmNlSGlzdG9yeUlkGAIgAigDEg8KB2Jh", 
          "bGFuY2UYAyACKAMSDQoFZGVsdGEYBCACKAMSHgoWY2hhbmdlQmFsYW5jZVRp", 
          "bWVzdGFtcBgFIAIoAxIUCgxleHRlcm5hbE5vdGUYBiABKAkSFgoOYmFsYW5j", 
          "ZVZlcnNpb24YByABKAMSDgoGZXF1aXR5GAggASgDIrgDCgtQcm90b09BRGVh", 
          "bBIOCgZkZWFsSWQYASACKAMSDwoHb3JkZXJJZBgCIAIoAxISCgpwb3NpdGlv", 
          "bklkGAMgAigDEg4KBnZvbHVtZRgEIAIoAxIUCgxmaWxsZWRWb2x1bWUYBSAC", 
          "KAMSEAoIc3ltYm9sSWQYBiACKAMSFwoPY3JlYXRlVGltZXN0YW1wGAcgAigD", 
          "EhoKEmV4ZWN1dGlvblRpbWVzdGFtcBgIIAIoAxIeChZ1dGNMYXN0VXBkYXRl", 
          "VGltZXN0YW1wGAkgASgDEhYKDmV4ZWN1dGlvblByaWNlGAogASgBEiQKCXRy", 
          "YWRlU2lkZRgLIAIoDjIRLlByb3RvT0FUcmFkZVNpZGUSJgoKZGVhbFN0YXR1", 
          "cxgMIAIoDjISLlByb3RvT0FEZWFsU3RhdHVzEhIKCm1hcmdpblJhdGUYDSAB", 
          "KAESEgoKY29tbWlzc2lvbhgOIAEoAxIfChdiYXNlVG9Vc2RDb252ZXJzaW9u", 
          "UmF0ZRgPIAEoARI4ChNjbG9zZVBvc2l0aW9uRGV0YWlsGBAgASgLMhsuUHJv", 
          "dG9PQUNsb3NlUG9zaXRpb25EZXRhaWwizAEKGlByb3RvT0FDbG9zZVBvc2l0", 
          "aW9uRGV0YWlsEhIKCmVudHJ5UHJpY2UYASACKAESEwoLZ3Jvc3NQcm9maXQY", 
          "AiACKAMSDAoEc3dhcBgDIAIoAxISCgpjb21taXNzaW9uGAQgAigDEg8KB2Jh", 
          "bGFuY2UYBSACKAMSJAoccXVvdGVUb0RlcG9zaXRDb252ZXJzaW9uUmF0ZRgG", 
          "IAEoARIUCgxjbG9zZWRWb2x1bWUYByABKAMSFgoOYmFsYW5jZVZlcnNpb24Y", 
          "CCABKAMiswEKD1Byb3RvT0FUcmVuZGJhchIOCgZ2b2x1bWUYAyACKAMSKgoG", 
          "cGVyaW9kGAQgASgOMhYuUHJvdG9PQVRyZW5kYmFyUGVyaW9kOgJNMRILCgNs", 
          "b3cYBSABKAMSEQoJZGVsdGFPcGVuGAYgASgEEhIKCmRlbHRhQ2xvc2UYByAB", 
          "KAQSEQoJZGVsdGFIaWdoGAggASgEEh0KFXV0Y1RpbWVzdGFtcEluTWludXRl", 
          "cxgJIAEoDSJOChVQcm90b09BRXhwZWN0ZWRNYXJnaW4SDgoGdm9sdW1lGAEg", 
          "AigDEhEKCWJ1eU1hcmdpbhgCIAIoAxISCgpzZWxsTWFyZ2luGAMgAigDIjIK", 
          "D1Byb3RvT0FUaWNrRGF0YRIRCgl0aW1lc3RhbXAYASACKAMSDAoEdGljaxgC", 
          "IAIoAyIkChJQcm90b09BQ3RpZFByb2ZpbGUSDgoGdXNlcklkGAEgAigDIlwK", 
          "GFByb3RvT0FDdGlkVHJhZGVyQWNjb3VudBIbChNjdGlkVHJhZGVyQWNjb3Vu", 
          "dElkGAEgAigEEg4KBmlzTGl2ZRgCIAEoCBITCgt0cmFkZXJMb2dpbhgDIAEo", 
          "AyItChFQcm90b09BQXNzZXRDbGFzcxIKCgJpZBgBIAEoAxIMCgRuYW1lGAIg", 
          "ASgJIkcKEVByb3RvT0FEZXB0aFF1b3RlEgoKAmlkGAEgAigEEgwKBHNpemUY", 
          "AyACKAQSCwoDYmlkGAQgASgEEgsKA2FzaxgFIAEoBCKDAQoRUHJvdG9PQU1h", 
          "cmdpbkNhbGwSMAoObWFyZ2luQ2FsbFR5cGUYASACKA4yGC5Qcm90b09BTm90", 
          "aWZpY2F0aW9uVHlwZRIcChRtYXJnaW5MZXZlbFRocmVzaG9sZBgCIAIoARIe", 
          "ChZ1dGNMYXN0VXBkYXRlVGltZXN0YW1wGAMgASgDKosVChJQcm90b09BUGF5", 
          "bG9hZFR5cGUSIgodUFJPVE9fT0FfQVBQTElDQVRJT05fQVVUSF9SRVEQtBAS", 
          "IgodUFJPVE9fT0FfQVBQTElDQVRJT05fQVVUSF9SRVMQtRASHgoZUFJPVE9f", 
          "T0FfQUNDT1VOVF9BVVRIX1JFURC2EBIeChlQUk9UT19PQV9BQ0NPVU5UX0FV", 
          "VEhfUkVTELcQEhkKFFBST1RPX09BX1ZFUlNJT05fUkVRELgQEhkKFFBST1RP", 
          "X09BX1ZFUlNJT05fUkVTELkQEhsKFlBST1RPX09BX05FV19PUkRFUl9SRVEQ", 
          "uhASJwoiUFJPVE9fT0FfVFJBSUxJTkdfU0xfQ0hBTkdFRF9FVkVOVBC7EBIe", 
          "ChlQUk9UT19PQV9DQU5DRUxfT1JERVJfUkVRELwQEh0KGFBST1RPX09BX0FN", 
          "RU5EX09SREVSX1JFURC9EBIlCiBQUk9UT19PQV9BTUVORF9QT1NJVElPTl9T", 
          "TFRQX1JFURC+EBIgChtQUk9UT19PQV9DTE9TRV9QT1NJVElPTl9SRVEQvxAS", 
          "HAoXUFJPVE9fT0FfQVNTRVRfTElTVF9SRVEQwBASHAoXUFJPVE9fT0FfQVNT", 
          "RVRfTElTVF9SRVMQwRASHgoZUFJPVE9fT0FfU1lNQk9MU19MSVNUX1JFURDC", 
          "EBIeChlQUk9UT19PQV9TWU1CT0xTX0xJU1RfUkVTEMMQEh4KGVBST1RPX09B", 
          "X1NZTUJPTF9CWV9JRF9SRVEQxBASHgoZUFJPVE9fT0FfU1lNQk9MX0JZX0lE", 
          "X1JFUxDFEBIoCiNQUk9UT19PQV9TWU1CT0xTX0ZPUl9DT05WRVJTSU9OX1JF", 
          "URDGEBIoCiNQUk9UT19PQV9TWU1CT0xTX0ZPUl9DT05WRVJTSU9OX1JFUxDH", 
          "EBIiCh1QUk9UT19PQV9TWU1CT0xfQ0hBTkdFRF9FVkVOVBDIEBIYChNQUk9U", 
          "T19PQV9UUkFERVJfUkVREMkQEhgKE1BST1RPX09BX1RSQURFUl9SRVMQyhAS", 
          "IQocUFJPVE9fT0FfVFJBREVSX1VQREFURV9FVkVOVBDLEBIbChZQUk9UT19P", 
          "QV9SRUNPTkNJTEVfUkVREMwQEhsKFlBST1RPX09BX1JFQ09OQ0lMRV9SRVMQ", 
          "zRASHQoYUFJPVE9fT0FfRVhFQ1VUSU9OX0VWRU5UEM4QEiEKHFBST1RPX09B", 
          "X1NVQlNDUklCRV9TUE9UU19SRVEQzxASIQocUFJPVE9fT0FfU1VCU0NSSUJF", 
          "X1NQT1RTX1JFUxDQEBIjCh5QUk9UT19PQV9VTlNVQlNDUklCRV9TUE9UU19S", 
          "RVEQ0RASIwoeUFJPVE9fT0FfVU5TVUJTQ1JJQkVfU1BPVFNfUkVTENIQEhgK", 
          "E1BST1RPX09BX1NQT1RfRVZFTlQQ0xASHwoaUFJPVE9fT0FfT1JERVJfRVJS", 
          "T1JfRVZFTlQQ1BASGwoWUFJPVE9fT0FfREVBTF9MSVNUX1JFURDVEBIbChZQ", 
          "Uk9UT19PQV9ERUFMX0xJU1RfUkVTENYQEikKJFBST1RPX09BX1NVQlNDUklC", 
          "RV9MSVZFX1RSRU5EQkFSX1JFURDXEBIrCiZQUk9UT19PQV9VTlNVQlNDUklC", 
          "RV9MSVZFX1RSRU5EQkFSX1JFURDYEBIfChpQUk9UT19PQV9HRVRfVFJFTkRC", 
          "QVJTX1JFURDZEBIfChpQUk9UT19PQV9HRVRfVFJFTkRCQVJTX1JFUxDaEBIh", 
          "ChxQUk9UT19PQV9FWFBFQ1RFRF9NQVJHSU5fUkVRENsQEiEKHFBST1RPX09B", 
          "X0VYUEVDVEVEX01BUkdJTl9SRVMQ3BASIgodUFJPVE9fT0FfTUFSR0lOX0NI", 
          "QU5HRURfRVZFTlQQ3RASFwoSUFJPVE9fT0FfRVJST1JfUkVTEN4QEigKI1BS", 
          "T1RPX09BX0NBU0hfRkxPV19ISVNUT1JZX0xJU1RfUkVREN8QEigKI1BST1RP", 
          "X09BX0NBU0hfRkxPV19ISVNUT1JZX0xJU1RfUkVTEOAQEh4KGVBST1RPX09B", 
          "X0dFVF9USUNLREFUQV9SRVEQ4RASHgoZUFJPVE9fT0FfR0VUX1RJQ0tEQVRB", 
          "X1JFUxDiEBIuCilQUk9UT19PQV9BQ0NPVU5UU19UT0tFTl9JTlZBTElEQVRF", 
          "RF9FVkVOVBDjEBIlCiBQUk9UT19PQV9DTElFTlRfRElTQ09OTkVDVF9FVkVO", 
          "VBDkEBIuCilQUk9UT19PQV9HRVRfQUNDT1VOVFNfQllfQUNDRVNTX1RPS0VO", 
          "X1JFURDlEBIuCilQUk9UT19PQV9HRVRfQUNDT1VOVFNfQllfQUNDRVNTX1RP", 
          "S0VOX1JFUxDmEBIrCiZQUk9UT19PQV9HRVRfQ1RJRF9QUk9GSUxFX0JZX1RP", 
          "S0VOX1JFURDnEBIrCiZQUk9UT19PQV9HRVRfQ1RJRF9QUk9GSUxFX0JZX1RP", 
          "S0VOX1JFUxDoEBIiCh1QUk9UT19PQV9BU1NFVF9DTEFTU19MSVNUX1JFURDp", 
          "EBIiCh1QUk9UT19PQV9BU1NFVF9DTEFTU19MSVNUX1JFUxDqEBIZChRQUk9U", 
          "T19PQV9ERVBUSF9FVkVOVBDrEBIoCiNQUk9UT19PQV9TVUJTQ1JJQkVfREVQ", 
          "VEhfUVVPVEVTX1JFURDsEBIoCiNQUk9UT19PQV9TVUJTQ1JJQkVfREVQVEhf", 
          "UVVPVEVTX1JFUxDtEBIqCiVQUk9UT19PQV9VTlNVQlNDUklCRV9ERVBUSF9R", 
          "VU9URVNfUkVREO4QEioKJVBST1RPX09BX1VOU1VCU0NSSUJFX0RFUFRIX1FV", 
          "T1RFU19SRVMQ7xASIQocUFJPVE9fT0FfU1lNQk9MX0NBVEVHT1JZX1JFURDw", 
          "EBIhChxQUk9UT19PQV9TWU1CT0xfQ0FURUdPUllfUkVTEPEQEiAKG1BST1RP", 
          "X09BX0FDQ09VTlRfTE9HT1VUX1JFURDyEBIgChtQUk9UT19PQV9BQ0NPVU5U", 
          "X0xPR09VVF9SRVMQ8xASJgohUFJPVE9fT0FfQUNDT1VOVF9ESVNDT05ORUNU", 
          "X0VWRU5UEPQQEikKJFBST1RPX09BX1NVQlNDUklCRV9MSVZFX1RSRU5EQkFS", 
          "X1JFUxD1EBIrCiZQUk9UT19PQV9VTlNVQlNDUklCRV9MSVZFX1RSRU5EQkFS", 
          "X1JFUxD2EBIiCh1QUk9UT19PQV9NQVJHSU5fQ0FMTF9MSVNUX1JFURD3EBIi", 
          "Ch1QUk9UT19PQV9NQVJHSU5fQ0FMTF9MSVNUX1JFUxD4EBIkCh9QUk9UT19P", 
          "QV9NQVJHSU5fQ0FMTF9VUERBVEVfUkVREPkQEiQKH1BST1RPX09BX01BUkdJ", 
          "Tl9DQUxMX1VQREFURV9SRVMQ+hASJgohUFJPVE9fT0FfTUFSR0lOX0NBTExf", 
          "VVBEQVRFX0VWRU5UEPsQEicKIlBST1RPX09BX01BUkdJTl9DQUxMX1RSSUdH", 
          "RVJfRVZFTlQQ/BASHwoaUFJPVE9fT0FfUkVGUkVTSF9UT0tFTl9SRVEQ/RAS", 
          "HwoaUFJPVE9fT0FfUkVGUkVTSF9UT0tFTl9SRVMQ/hAqeAoQUHJvdG9PQURh", 
          "eU9mV2VlaxIICgROT05FEAASCgoGTU9OREFZEAESCwoHVFVFU0RBWRACEg0K", 
          "CVdFRE5FU0RBWRADEgwKCFRIVVJTREFZEAQSCgoGRlJJREFZEAUSDAoIU0FU", 
          "VVJEQVkQBhIKCgZTVU5EQVkQBypkChVQcm90b09BQ29tbWlzc2lvblR5cGUS", 
          "EwoPVVNEX1BFUl9NSUxfVVNEEAESDwoLVVNEX1BFUl9MT1QQAhIOCgpQRVJD", 
          "RU5UQUdFEAMSFQoRUVVPVEVfQ0NZX1BFUl9MT1QQBCpdChlQcm90b09BU3lt", 
          "Ym9sRGlzdGFuY2VUeXBlEh0KGVNZTUJPTF9ESVNUQU5DRV9JTl9QT0lOVFMQ", 
          "ARIhCh1TWU1CT0xfRElTVEFOQ0VfSU5fUEVSQ0VOVEFHRRACKjwKGFByb3Rv", 
          "T0FNaW5Db21taXNzaW9uVHlwZRIMCghDVVJSRU5DWRABEhIKDlFVT1RFX0NV", 
          "UlJFTkNZEAIqhQEKElByb3RvT0FUcmFkaW5nTW9kZRILCgdFTkFCTEVEEAAS", 
          "JwojRElTQUJMRURfV0lUSE9VVF9QRU5ESU5HU19FWEVDVVRJT04QARIkCiBE", 
          "SVNBQkxFRF9XSVRIX1BFTkRJTkdTX0VYRUNVVElPThACEhMKD0NMT1NFX09O", 
          "TFlfTU9ERRADKjYKGlByb3RvT0FTd2FwQ2FsY3VsYXRpb25UeXBlEgoKBlBP", 
          "SU5UUxAAEgwKCElOVEVSRVNUEAEqVAoTUHJvdG9PQUFjY2Vzc1JpZ2h0cxIP", 
          "CgtGVUxMX0FDQ0VTUxAAEg4KCkNMT1NFX09OTFkQARIOCgpOT19UUkFESU5H", 
          "EAISDAoITk9fTE9HSU4QAyo+CiFQcm90b09BVG90YWxNYXJnaW5DYWxjdWxh", 
          "dGlvblR5cGUSBwoDTUFYEAASBwoDU1VNEAESBwoDTkVUEAIqQAoSUHJvdG9P", 
          "QUFjY291bnRUeXBlEgoKBkhFREdFRBAAEgoKBk5FVFRFRBABEhIKDlNQUkVB", 
          "RF9CRVRUSU5HEAIqhQEKFVByb3RvT0FQb3NpdGlvblN0YXR1cxIYChRQT1NJ", 
          "VElPTl9TVEFUVVNfT1BFThABEhoKFlBPU0lUSU9OX1NUQVRVU19DTE9TRUQQ", 
          "AhIbChdQT1NJVElPTl9TVEFUVVNfQ1JFQVRFRBADEhkKFVBPU0lUSU9OX1NU", 
          "QVRVU19FUlJPUhAEKiUKEFByb3RvT0FUcmFkZVNpZGUSBwoDQlVZEAESCAoE", 
          "U0VMTBACKnAKEFByb3RvT0FPcmRlclR5cGUSCgoGTUFSS0VUEAESCQoFTElN", 
          "SVQQAhIICgRTVE9QEAMSGQoVU1RPUF9MT1NTX1RBS0VfUFJPRklUEAQSEAoM", 
          "TUFSS0VUX1JBTkdFEAUSDgoKU1RPUF9MSU1JVBAGKn0KElByb3RvT0FUaW1l", 
          "SW5Gb3JjZRISCg5HT09EX1RJTExfREFURRABEhQKEEdPT0RfVElMTF9DQU5D", 
          "RUwQAhIXChNJTU1FRElBVEVfT1JfQ0FOQ0VMEAMSEAoMRklMTF9PUl9LSUxM", 
          "EAQSEgoOTUFSS0VUX09OX09QRU4QBSqZAQoSUHJvdG9PQU9yZGVyU3RhdHVz", 
          "EhkKFU9SREVSX1NUQVRVU19BQ0NFUFRFRBABEhcKE09SREVSX1NUQVRVU19G", 
          "SUxMRUQQAhIZChVPUkRFUl9TVEFUVVNfUkVKRUNURUQQAxIYChRPUkRFUl9T", 
          "VEFUVVNfRVhQSVJFRBAEEhoKFk9SREVSX1NUQVRVU19DQU5DRUxMRUQQBSpb", 
          "ChlQcm90b09BT3JkZXJUcmlnZ2VyTWV0aG9kEgkKBVRSQURFEAESDAoIT1BQ", 
          "T1NJVEUQAhIQCgxET1VCTEVfVFJBREUQAxITCg9ET1VCTEVfT1BQT1NJVEUQ", 
          "BCr7AQoUUHJvdG9PQUV4ZWN1dGlvblR5cGUSEgoOT1JERVJfQUNDRVBURUQQ", 
          "AhIQCgxPUkRFUl9GSUxMRUQQAxISCg5PUkRFUl9SRVBMQUNFRBAEEhMKD09S", 
          "REVSX0NBTkNFTExFRBAFEhEKDU9SREVSX0VYUElSRUQQBhISCg5PUkRFUl9S", 
          "RUpFQ1RFRBAHEhkKFU9SREVSX0NBTkNFTF9SRUpFQ1RFRBAIEggKBFNXQVAQ", 
          "CRIUChBERVBPU0lUX1dJVEhEUkFXEAoSFgoST1JERVJfUEFSVElBTF9GSUxM", 
          "EAsSGgoWQk9OVVNfREVQT1NJVF9XSVRIRFJBVxAMKj8KFlByb3RvT0FDaGFu", 
          "Z2VCb251c1R5cGUSEQoNQk9OVVNfREVQT1NJVBAAEhIKDkJPTlVTX1dJVEhE", 
          "UkFXEAEq6AkKGFByb3RvT0FDaGFuZ2VCYWxhbmNlVHlwZRITCg9CQUxBTkNF", 
          "X0RFUE9TSVQQABIUChBCQUxBTkNFX1dJVEhEUkFXEAESLQopQkFMQU5DRV9E", 
          "RVBPU0lUX1NUUkFURUdZX0NPTU1JU1NJT05fSU5ORVIQAxIuCipCQUxBTkNF", 
          "X1dJVEhEUkFXX1NUUkFURUdZX0NPTU1JU1NJT05fSU5ORVIQBBIiCh5CQUxB", 
          "TkNFX0RFUE9TSVRfSUJfQ09NTUlTU0lPTlMQBRIpCiVCQUxBTkNFX1dJVEhE", 
          "UkFXX0lCX1NIQVJFRF9QRVJDRU5UQUdFEAYSNAowQkFMQU5DRV9ERVBPU0lU", 
          "X0lCX1NIQVJFRF9QRVJDRU5UQUdFX0ZST01fU1VCX0lCEAcSNAowQkFMQU5D", 
          "RV9ERVBPU0lUX0lCX1NIQVJFRF9QRVJDRU5UQUdFX0ZST01fQlJPS0VSEAgS", 
          "GgoWQkFMQU5DRV9ERVBPU0lUX1JFQkFURRAJEhsKF0JBTEFOQ0VfV0lUSERS", 
          "QVdfUkVCQVRFEAoSLQopQkFMQU5DRV9ERVBPU0lUX1NUUkFURUdZX0NPTU1J", 
          "U1NJT05fT1VURVIQCxIuCipCQUxBTkNFX1dJVEhEUkFXX1NUUkFURUdZX0NP", 
          "TU1JU1NJT05fT1VURVIQDBInCiNCQUxBTkNFX1dJVEhEUkFXX0JPTlVTX0NP", 
          "TVBFTlNBVElPThANEjMKL0JBTEFOQ0VfV0lUSERSQVdfSUJfU0hBUkVEX1BF", 
          "UkNFTlRBR0VfVE9fQlJPS0VSEA4SHQoZQkFMQU5DRV9ERVBPU0lUX0RJVklE", 
          "RU5EUxAPEh4KGkJBTEFOQ0VfV0lUSERSQVdfRElWSURFTkRTEBASHwobQkFM", 
          "QU5DRV9XSVRIRFJBV19HU0xfQ0hBUkdFEBESHQoZQkFMQU5DRV9XSVRIRFJB", 
          "V19ST0xMT1ZFUhASEikKJUJBTEFOQ0VfREVQT1NJVF9OT05XSVRIRFJBV0FC", 
          "TEVfQk9OVVMQExIqCiZCQUxBTkNFX1dJVEhEUkFXX05PTldJVEhEUkFXQUJM", 
          "RV9CT05VUxAUEhgKFEJBTEFOQ0VfREVQT1NJVF9TV0FQEBUSGQoVQkFMQU5D", 
          "RV9XSVRIRFJBV19TV0FQEBYSIgoeQkFMQU5DRV9ERVBPU0lUX01BTkFHRU1F", 
          "TlRfRkVFEBsSIwofQkFMQU5DRV9XSVRIRFJBV19NQU5BR0VNRU5UX0ZFRRAc", 
          "EiMKH0JBTEFOQ0VfREVQT1NJVF9QRVJGT1JNQU5DRV9GRUUQHRIjCh9CQUxB", 
          "TkNFX1dJVEhEUkFXX0ZPUl9TVUJBQ0NPVU5UEB4SIQodQkFMQU5DRV9ERVBP", 
          "U0lUX1RPX1NVQkFDQ09VTlQQHxIkCiBCQUxBTkNFX1dJVEhEUkFXX0ZST01f", 
          "U1VCQUNDT1VOVBAgEiMKH0JBTEFOQ0VfREVQT1NJVF9GUk9NX1NVQkFDQ09V", 
          "TlQQIRIjCh9CQUxBTkNFX1dJVEhEUkFXX0lOQUNUSVZJVFlfRkVFECMSHAoY", 
          "QkFMQU5DRV9ERVBPU0lUX1RSQU5TRkVSECQSHQoZQkFMQU5DRV9XSVRIRFJB", 
          "V19UUkFOU0ZFUhAlEiMKH0JBTEFOQ0VfREVQT1NJVF9DT05WRVJURURfQk9O", 
          "VVMQJipzChFQcm90b09BRGVhbFN0YXR1cxIKCgZGSUxMRUQQAhIUChBQQVJU", 
          "SUFMTFlfRklMTEVEEAMSDAoIUkVKRUNURUQQBBIXChNJTlRFUk5BTExZX1JF", 
          "SkVDVEVEEAUSCQoFRVJST1IQBhIKCgZNSVNTRUQQByqMAQoVUHJvdG9PQVRy", 
          "ZW5kYmFyUGVyaW9kEgYKAk0xEAESBgoCTTIQAhIGCgJNMxADEgYKAk00EAQS", 
          "BgoCTTUQBRIHCgNNMTAQBhIHCgNNMTUQBxIHCgNNMzAQCBIGCgJIMRAJEgYK", 
          "Akg0EAoSBwoDSDEyEAsSBgoCRDEQDBIGCgJXMRANEgcKA01OMRAOKiQKEFBy", 
          "b3RvT0FRdW90ZVR5cGUSBwoDQklEEAESBwoDQVNLEAIqPwocUHJvdG9PQUNs", 
          "aWVudFBlcm1pc3Npb25TY29wZRIOCgpTQ09QRV9WSUVXEAASDwoLU0NPUEVf", 
          "VFJBREUQASpzChdQcm90b09BTm90aWZpY2F0aW9uVHlwZRIcChhNQVJHSU5f", 
          "TEVWRUxfVEhSRVNIT0xEXzEQPRIcChhNQVJHSU5fTEVWRUxfVEhSRVNIT0xE", 
          "XzIQPhIcChhNQVJHSU5fTEVWRUxfVEhSRVNIT0xEXzMQPyreCAoQUHJvdG9P", 
          "QUVycm9yQ29kZRIZChVPQV9BVVRIX1RPS0VOX0VYUElSRUQQARIaChZBQ0NP", 
          "VU5UX05PVF9BVVRIT1JJWkVEEAISFQoRQUxSRUFEWV9MT0dHRURfSU4QDhIa", 
          "ChZDSF9DTElFTlRfQVVUSF9GQUlMVVJFEGUSHwobQ0hfQ0xJRU5UX05PVF9B", 
          "VVRIRU5USUNBVEVEEGYSIwofQ0hfQ0xJRU5UX0FMUkVBRFlfQVVUSEVOVElD", 
          "QVRFRBBnEhsKF0NIX0FDQ0VTU19UT0tFTl9JTlZBTElEEGgSGwoXQ0hfU0VS", 
          "VkVSX05PVF9SRUFDSEFCTEUQaRIkCiBDSF9DVElEX1RSQURFUl9BQ0NPVU5U", 
          "X05PVF9GT1VORBBqEhoKFkNIX09BX0NMSUVOVF9OT1RfRk9VTkQQaxIeChpS", 
          "RVFVRVNUX0ZSRVFVRU5DWV9FWENFRURFRBBsEh8KG1NFUlZFUl9JU19VTkRF", 
          "Ul9NQUlOVEVOQU5DRRBtEhYKEkNIQU5ORUxfSVNfQkxPQ0tFRBBuEh4KGkNP", 
          "Tk5FQ1RJT05TX0xJTUlUX0VYQ0VFREVEEEMSGQoVV09SU0VfR1NMX05PVF9B", 
          "TExPV0VEEEQSFgoSU1lNQk9MX0hBU19IT0xJREFZEEUSGwoXTk9UX1NVQlND", 
          "UklCRURfVE9fU1BPVFMQcBIWChJBTFJFQURZX1NVQlNDUklCRUQQcRIUChBT", 
          "WU1CT0xfTk9UX0ZPVU5EEHISEgoOVU5LTk9XTl9TWU1CT0wQcxIYChRJTkNP", 
          "UlJFQ1RfQk9VTkRBUklFUxAjEg0KCU5PX1FVT1RFUxB1EhQKEE5PVF9FTk9V", 
          "R0hfTU9ORVkQdhIYChRNQVhfRVhQT1NVUkVfUkVBQ0hFRBB3EhYKElBPU0lU", 
          "SU9OX05PVF9GT1VORBB4EhMKD09SREVSX05PVF9GT1VORBB5EhUKEVBPU0lU", 
          "SU9OX05PVF9PUEVOEHoSEwoPUE9TSVRJT05fTE9DS0VEEHsSFgoSVE9PX01B", 
          "TllfUE9TSVRJT05TEHwSFgoSVFJBRElOR19CQURfVk9MVU1FEH0SFQoRVFJB", 
          "RElOR19CQURfU1RPUFMQfhIWChJUUkFESU5HX0JBRF9QUklDRVMQfxIWChFU", 
          "UkFESU5HX0JBRF9TVEFLRRCAARImCiFQUk9URUNUSU9OX0lTX1RPT19DTE9T", 
          "RV9UT19NQVJLRVQQgQESIAobVFJBRElOR19CQURfRVhQSVJBVElPTl9EQVRF", 
          "EIIBEhYKEVBFTkRJTkdfRVhFQ1VUSU9OEIMBEhUKEFRSQURJTkdfRElTQUJM", 
          "RUQQhAESGAoTVFJBRElOR19OT1RfQUxMT1dFRBCFARIbChZVTkFCTEVfVE9f", 
          "Q0FOQ0VMX09SREVSEIYBEhoKFVVOQUJMRV9UT19BTUVORF9PUkRFUhCHARIe", 
          "ChlTSE9SVF9TRUxMSU5HX05PVF9BTExPV0VEEIgBKoEBCitQcm90b09BTGlt", 
          "aXRlZFJpc2tNYXJnaW5DYWxjdWxhdGlvblN0cmF0ZWd5EhkKFUFDQ09SRElO", 
          "R19UT19MRVZFUkFHRRAAEhQKEEFDQ09SRElOR19UT19HU0wQARIhCh1BQ0NP", 
          "UkRJTkdfVE9fR1NMX0FORF9MRVZFUkFHRRACQk0KJWNvbS54dHJhZGVyLnBy", 
          "b3RvY29sLm9wZW5hcGkudjIubW9kZWxCH0NvbnRhaW5lck9wZW5BcGlWMk1v", 
        "ZGVsTWVzc2FnZXNQAaABAQ=="));
    pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
      descriptor = root;
      internal__static_ProtoOAAsset__Descriptor = Descriptor.MessageTypes[0];
      internal__static_ProtoOAAsset__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::ProtoOAAsset, global::ProtoOAAsset.Builder>(internal__static_ProtoOAAsset__Descriptor,
              new string[] { "AssetId", "Name", "DisplayName", });
      internal__static_ProtoOASymbol__Descriptor = Descriptor.MessageTypes[1];
      internal__static_ProtoOASymbol__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::ProtoOASymbol, global::ProtoOASymbol.Builder>(internal__static_ProtoOASymbol__Descriptor,
              new string[] { "SymbolId", "Digits", "PipPosition", "EnableShortSelling", "GuaranteedStopLoss", "SwapRollover3Days", "SwapLong", "SwapShort", "MaxVolume", "MinVolume", "StepVolume", "MaxExposure", "Schedule", "Commission", "CommissionType", "SlDistance", "TpDistance", "GslDistance", "GslCharge", "DistanceSetIn", "MinCommission", "MinCommissionType", "MinCommissionAsset", "RolloverCommission", "SkipRolloverDays", "ScheduleTimeZone", "TradingMode", "RolloverCommission3Days", "SwapCalculationType", "LotSize", });
      internal__static_ProtoOALightSymbol__Descriptor = Descriptor.MessageTypes[2];
      internal__static_ProtoOALightSymbol__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::ProtoOALightSymbol, global::ProtoOALightSymbol.Builder>(internal__static_ProtoOALightSymbol__Descriptor,
              new string[] { "SymbolId", "SymbolName", "Enabled", "BaseAssetId", "QuoteAssetId", "SymbolCategoryId", "Description", });
      internal__static_ProtoOASymbolCategory__Descriptor = Descriptor.MessageTypes[3];
      internal__static_ProtoOASymbolCategory__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::ProtoOASymbolCategory, global::ProtoOASymbolCategory.Builder>(internal__static_ProtoOASymbolCategory__Descriptor,
              new string[] { "Id", "AssetClassId", "Name", });
      internal__static_ProtoOAInterval__Descriptor = Descriptor.MessageTypes[4];
      internal__static_ProtoOAInterval__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::ProtoOAInterval, global::ProtoOAInterval.Builder>(internal__static_ProtoOAInterval__Descriptor,
              new string[] { "StartSecond", "EndSecond", });
      internal__static_ProtoOATrader__Descriptor = Descriptor.MessageTypes[5];
      internal__static_ProtoOATrader__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::ProtoOATrader, global::ProtoOATrader.Builder>(internal__static_ProtoOATrader__Descriptor,
              new string[] { "CtidTraderAccountId", "Balance", "BalanceVersion", "ManagerBonus", "IbBonus", "NonWithdrawableBonus", "AccessRights", "DepositAssetId", "SwapFree", "LeverageInCents", "TotalMarginCalculationType", "MaxLeverage", "FrenchRisk", "TraderLogin", "AccountType", "BrokerName", "RegistrationTimestamp", "IsLimitedRisk", "LimitedRiskMarginCalculationStrategy", });
      internal__static_ProtoOAPosition__Descriptor = Descriptor.MessageTypes[6];
      internal__static_ProtoOAPosition__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::ProtoOAPosition, global::ProtoOAPosition.Builder>(internal__static_ProtoOAPosition__Descriptor,
              new string[] { "PositionId", "TradeData", "PositionStatus", "Swap", "Price", "StopLoss", "TakeProfit", "UtcLastUpdateTimestamp", "Commission", "MarginRate", "MirroringCommission", "GuaranteedStopLoss", "UsedMargin", "StopLossTriggerMethod", });
      internal__static_ProtoOATradeData__Descriptor = Descriptor.MessageTypes[7];
      internal__static_ProtoOATradeData__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::ProtoOATradeData, global::ProtoOATradeData.Builder>(internal__static_ProtoOATradeData__Descriptor,
              new string[] { "SymbolId", "Volume", "TradeSide", "OpenTimestamp", "Label", "GuaranteedStopLoss", });
      internal__static_ProtoOAOrder__Descriptor = Descriptor.MessageTypes[8];
      internal__static_ProtoOAOrder__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::ProtoOAOrder, global::ProtoOAOrder.Builder>(internal__static_ProtoOAOrder__Descriptor,
              new string[] { "OrderId", "TradeData", "OrderType", "OrderStatus", "ExpirationTimestamp", "ExecutionPrice", "ExecutedVolume", "UtcLastUpdateTimestamp", "BaseSlippagePrice", "SlippageInPoints", "ClosingOrder", "LimitPrice", "StopPrice", "StopLoss", "TakeProfit", "ClientOrderId", "TimeInForce", "PositionId", "RelativeStopLoss", "RelativeTakeProfit", "IsStopOut", "TrailingStopLoss", "StopTriggerMethod", });
      internal__static_ProtoOABonusDepositWithdraw__Descriptor = Descriptor.MessageTypes[9];
      internal__static_ProtoOABonusDepositWithdraw__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::ProtoOABonusDepositWithdraw, global::ProtoOABonusDepositWithdraw.Builder>(internal__static_ProtoOABonusDepositWithdraw__Descriptor,
              new string[] { "OperationType", "BonusHistoryId", "ManagerBonus", "ManagerDelta", "IbBonus", "IbDelta", "ChangeBonusTimestamp", "ExternalNote", "IntroducingBrokerId", });
      internal__static_ProtoOADepositWithdraw__Descriptor = Descriptor.MessageTypes[10];
      internal__static_ProtoOADepositWithdraw__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::ProtoOADepositWithdraw, global::ProtoOADepositWithdraw.Builder>(internal__static_ProtoOADepositWithdraw__Descriptor,
              new string[] { "OperationType", "BalanceHistoryId", "Balance", "Delta", "ChangeBalanceTimestamp", "ExternalNote", "BalanceVersion", "Equity", });
      internal__static_ProtoOADeal__Descriptor = Descriptor.MessageTypes[11];
      internal__static_ProtoOADeal__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::ProtoOADeal, global::ProtoOADeal.Builder>(internal__static_ProtoOADeal__Descriptor,
              new string[] { "DealId", "OrderId", "PositionId", "Volume", "FilledVolume", "SymbolId", "CreateTimestamp", "ExecutionTimestamp", "UtcLastUpdateTimestamp", "ExecutionPrice", "TradeSide", "DealStatus", "MarginRate", "Commission", "BaseToUsdConversionRate", "ClosePositionDetail", });
      internal__static_ProtoOAClosePositionDetail__Descriptor = Descriptor.MessageTypes[12];
      internal__static_ProtoOAClosePositionDetail__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::ProtoOAClosePositionDetail, global::ProtoOAClosePositionDetail.Builder>(internal__static_ProtoOAClosePositionDetail__Descriptor,
              new string[] { "EntryPrice", "GrossProfit", "Swap", "Commission", "Balance", "QuoteToDepositConversionRate", "ClosedVolume", "BalanceVersion", });
      internal__static_ProtoOATrendbar__Descriptor = Descriptor.MessageTypes[13];
      internal__static_ProtoOATrendbar__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::ProtoOATrendbar, global::ProtoOATrendbar.Builder>(internal__static_ProtoOATrendbar__Descriptor,
              new string[] { "Volume", "Period", "Low", "DeltaOpen", "DeltaClose", "DeltaHigh", "UtcTimestampInMinutes", });
      internal__static_ProtoOAExpectedMargin__Descriptor = Descriptor.MessageTypes[14];
      internal__static_ProtoOAExpectedMargin__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::ProtoOAExpectedMargin, global::ProtoOAExpectedMargin.Builder>(internal__static_ProtoOAExpectedMargin__Descriptor,
              new string[] { "Volume", "BuyMargin", "SellMargin", });
      internal__static_ProtoOATickData__Descriptor = Descriptor.MessageTypes[15];
      internal__static_ProtoOATickData__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::ProtoOATickData, global::ProtoOATickData.Builder>(internal__static_ProtoOATickData__Descriptor,
              new string[] { "Timestamp", "Tick", });
      internal__static_ProtoOACtidProfile__Descriptor = Descriptor.MessageTypes[16];
      internal__static_ProtoOACtidProfile__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::ProtoOACtidProfile, global::ProtoOACtidProfile.Builder>(internal__static_ProtoOACtidProfile__Descriptor,
              new string[] { "UserId", });
      internal__static_ProtoOACtidTraderAccount__Descriptor = Descriptor.MessageTypes[17];
      internal__static_ProtoOACtidTraderAccount__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::ProtoOACtidTraderAccount, global::ProtoOACtidTraderAccount.Builder>(internal__static_ProtoOACtidTraderAccount__Descriptor,
              new string[] { "CtidTraderAccountId", "IsLive", "TraderLogin", });
      internal__static_ProtoOAAssetClass__Descriptor = Descriptor.MessageTypes[18];
      internal__static_ProtoOAAssetClass__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::ProtoOAAssetClass, global::ProtoOAAssetClass.Builder>(internal__static_ProtoOAAssetClass__Descriptor,
              new string[] { "Id", "Name", });
      internal__static_ProtoOADepthQuote__Descriptor = Descriptor.MessageTypes[19];
      internal__static_ProtoOADepthQuote__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::ProtoOADepthQuote, global::ProtoOADepthQuote.Builder>(internal__static_ProtoOADepthQuote__Descriptor,
              new string[] { "Id", "Size", "Bid", "Ask", });
      internal__static_ProtoOAMarginCall__Descriptor = Descriptor.MessageTypes[20];
      internal__static_ProtoOAMarginCall__FieldAccessorTable = 
          new pb::FieldAccess.FieldAccessorTable<global::ProtoOAMarginCall, global::ProtoOAMarginCall.Builder>(internal__static_ProtoOAMarginCall__Descriptor,
              new string[] { "MarginCallType", "MarginLevelThreshold", "UtcLastUpdateTimestamp", });
      return null;
    };
    pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
        new pbd::FileDescriptor[] {
        }, assigner);
  }
  #endregion
  
}
#region Enums
public enum ProtoOAPayloadType {
  PROTO_OA_APPLICATION_AUTH_REQ = 2100,
  PROTO_OA_APPLICATION_AUTH_RES = 2101,
  PROTO_OA_ACCOUNT_AUTH_REQ = 2102,
  PROTO_OA_ACCOUNT_AUTH_RES = 2103,
  PROTO_OA_VERSION_REQ = 2104,
  PROTO_OA_VERSION_RES = 2105,
  PROTO_OA_NEW_ORDER_REQ = 2106,
  PROTO_OA_TRAILING_SL_CHANGED_EVENT = 2107,
  PROTO_OA_CANCEL_ORDER_REQ = 2108,
  PROTO_OA_AMEND_ORDER_REQ = 2109,
  PROTO_OA_AMEND_POSITION_SLTP_REQ = 2110,
  PROTO_OA_CLOSE_POSITION_REQ = 2111,
  PROTO_OA_ASSET_LIST_REQ = 2112,
  PROTO_OA_ASSET_LIST_RES = 2113,
  PROTO_OA_SYMBOLS_LIST_REQ = 2114,
  PROTO_OA_SYMBOLS_LIST_RES = 2115,
  PROTO_OA_SYMBOL_BY_ID_REQ = 2116,
  PROTO_OA_SYMBOL_BY_ID_RES = 2117,
  PROTO_OA_SYMBOLS_FOR_CONVERSION_REQ = 2118,
  PROTO_OA_SYMBOLS_FOR_CONVERSION_RES = 2119,
  PROTO_OA_SYMBOL_CHANGED_EVENT = 2120,
  PROTO_OA_TRADER_REQ = 2121,
  PROTO_OA_TRADER_RES = 2122,
  PROTO_OA_TRADER_UPDATE_EVENT = 2123,
  PROTO_OA_RECONCILE_REQ = 2124,
  PROTO_OA_RECONCILE_RES = 2125,
  PROTO_OA_EXECUTION_EVENT = 2126,
  PROTO_OA_SUBSCRIBE_SPOTS_REQ = 2127,
  PROTO_OA_SUBSCRIBE_SPOTS_RES = 2128,
  PROTO_OA_UNSUBSCRIBE_SPOTS_REQ = 2129,
  PROTO_OA_UNSUBSCRIBE_SPOTS_RES = 2130,
  PROTO_OA_SPOT_EVENT = 2131,
  PROTO_OA_ORDER_ERROR_EVENT = 2132,
  PROTO_OA_DEAL_LIST_REQ = 2133,
  PROTO_OA_DEAL_LIST_RES = 2134,
  PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_REQ = 2135,
  PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_REQ = 2136,
  PROTO_OA_GET_TRENDBARS_REQ = 2137,
  PROTO_OA_GET_TRENDBARS_RES = 2138,
  PROTO_OA_EXPECTED_MARGIN_REQ = 2139,
  PROTO_OA_EXPECTED_MARGIN_RES = 2140,
  PROTO_OA_MARGIN_CHANGED_EVENT = 2141,
  PROTO_OA_ERROR_RES = 2142,
  PROTO_OA_CASH_FLOW_HISTORY_LIST_REQ = 2143,
  PROTO_OA_CASH_FLOW_HISTORY_LIST_RES = 2144,
  PROTO_OA_GET_TICKDATA_REQ = 2145,
  PROTO_OA_GET_TICKDATA_RES = 2146,
  PROTO_OA_ACCOUNTS_TOKEN_INVALIDATED_EVENT = 2147,
  PROTO_OA_CLIENT_DISCONNECT_EVENT = 2148,
  PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_REQ = 2149,
  PROTO_OA_GET_ACCOUNTS_BY_ACCESS_TOKEN_RES = 2150,
  PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_REQ = 2151,
  PROTO_OA_GET_CTID_PROFILE_BY_TOKEN_RES = 2152,
  PROTO_OA_ASSET_CLASS_LIST_REQ = 2153,
  PROTO_OA_ASSET_CLASS_LIST_RES = 2154,
  PROTO_OA_DEPTH_EVENT = 2155,
  PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_REQ = 2156,
  PROTO_OA_SUBSCRIBE_DEPTH_QUOTES_RES = 2157,
  PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_REQ = 2158,
  PROTO_OA_UNSUBSCRIBE_DEPTH_QUOTES_RES = 2159,
  PROTO_OA_SYMBOL_CATEGORY_REQ = 2160,
  PROTO_OA_SYMBOL_CATEGORY_RES = 2161,
  PROTO_OA_ACCOUNT_LOGOUT_REQ = 2162,
  PROTO_OA_ACCOUNT_LOGOUT_RES = 2163,
  PROTO_OA_ACCOUNT_DISCONNECT_EVENT = 2164,
  PROTO_OA_SUBSCRIBE_LIVE_TRENDBAR_RES = 2165,
  PROTO_OA_UNSUBSCRIBE_LIVE_TRENDBAR_RES = 2166,
  PROTO_OA_MARGIN_CALL_LIST_REQ = 2167,
  PROTO_OA_MARGIN_CALL_LIST_RES = 2168,
  PROTO_OA_MARGIN_CALL_UPDATE_REQ = 2169,
  PROTO_OA_MARGIN_CALL_UPDATE_RES = 2170,
  PROTO_OA_MARGIN_CALL_UPDATE_EVENT = 2171,
  PROTO_OA_MARGIN_CALL_TRIGGER_EVENT = 2172,
  PROTO_OA_REFRESH_TOKEN_REQ = 2173,
  PROTO_OA_REFRESH_TOKEN_RES = 2174,
}

public enum ProtoOADayOfWeek {
  NONE = 0,
  MONDAY = 1,
  TUESDAY = 2,
  WEDNESDAY = 3,
  THURSDAY = 4,
  FRIDAY = 5,
  SATURDAY = 6,
  SUNDAY = 7,
}

public enum ProtoOACommissionType {
  USD_PER_MIL_USD = 1,
  USD_PER_LOT = 2,
  PERCENTAGE = 3,
  QUOTE_CCY_PER_LOT = 4,
}

public enum ProtoOASymbolDistanceType {
  SYMBOL_DISTANCE_IN_POINTS = 1,
  SYMBOL_DISTANCE_IN_PERCENTAGE = 2,
}

public enum ProtoOAMinCommissionType {
  CURRENCY = 1,
  QUOTE_CURRENCY = 2,
}

public enum ProtoOATradingMode {
  ENABLED = 0,
  DISABLED_WITHOUT_PENDINGS_EXECUTION = 1,
  DISABLED_WITH_PENDINGS_EXECUTION = 2,
  CLOSE_ONLY_MODE = 3,
}

public enum ProtoOASwapCalculationType {
  POINTS = 0,
  INTEREST = 1,
}

public enum ProtoOAAccessRights {
  FULL_ACCESS = 0,
  CLOSE_ONLY = 1,
  NO_TRADING = 2,
  NO_LOGIN = 3,
}

public enum ProtoOATotalMarginCalculationType {
  MAX = 0,
  SUM = 1,
  NET = 2,
}

public enum ProtoOAAccountType {
  HEDGED = 0,
  NETTED = 1,
  SPREAD_BETTING = 2,
}

public enum ProtoOAPositionStatus {
  POSITION_STATUS_OPEN = 1,
  POSITION_STATUS_CLOSED = 2,
  POSITION_STATUS_CREATED = 3,
  POSITION_STATUS_ERROR = 4,
}

public enum ProtoOATradeSide {
  BUY = 1,
  SELL = 2,
}

public enum ProtoOAOrderType {
  MARKET = 1,
  LIMIT = 2,
  STOP = 3,
  STOP_LOSS_TAKE_PROFIT = 4,
  MARKET_RANGE = 5,
  STOP_LIMIT = 6,
}

public enum ProtoOATimeInForce {
  GOOD_TILL_DATE = 1,
  GOOD_TILL_CANCEL = 2,
  IMMEDIATE_OR_CANCEL = 3,
  FILL_OR_KILL = 4,
  MARKET_ON_OPEN = 5,
}

public enum ProtoOAOrderStatus {
  ORDER_STATUS_ACCEPTED = 1,
  ORDER_STATUS_FILLED = 2,
  ORDER_STATUS_REJECTED = 3,
  ORDER_STATUS_EXPIRED = 4,
  ORDER_STATUS_CANCELLED = 5,
}

public enum ProtoOAOrderTriggerMethod {
  TRADE = 1,
  OPPOSITE = 2,
  DOUBLE_TRADE = 3,
  DOUBLE_OPPOSITE = 4,
}

public enum ProtoOAExecutionType {
  ORDER_ACCEPTED = 2,
  ORDER_FILLED = 3,
  ORDER_REPLACED = 4,
  ORDER_CANCELLED = 5,
  ORDER_EXPIRED = 6,
  ORDER_REJECTED = 7,
  ORDER_CANCEL_REJECTED = 8,
  SWAP = 9,
  DEPOSIT_WITHDRAW = 10,
  ORDER_PARTIAL_FILL = 11,
  BONUS_DEPOSIT_WITHDRAW = 12,
}

public enum ProtoOAChangeBonusType {
  BONUS_DEPOSIT = 0,
  BONUS_WITHDRAW = 1,
}

public enum ProtoOAChangeBalanceType {
  BALANCE_DEPOSIT = 0,
  BALANCE_WITHDRAW = 1,
  BALANCE_DEPOSIT_STRATEGY_COMMISSION_INNER = 3,
  BALANCE_WITHDRAW_STRATEGY_COMMISSION_INNER = 4,
  BALANCE_DEPOSIT_IB_COMMISSIONS = 5,
  BALANCE_WITHDRAW_IB_SHARED_PERCENTAGE = 6,
  BALANCE_DEPOSIT_IB_SHARED_PERCENTAGE_FROM_SUB_IB = 7,
  BALANCE_DEPOSIT_IB_SHARED_PERCENTAGE_FROM_BROKER = 8,
  BALANCE_DEPOSIT_REBATE = 9,
  BALANCE_WITHDRAW_REBATE = 10,
  BALANCE_DEPOSIT_STRATEGY_COMMISSION_OUTER = 11,
  BALANCE_WITHDRAW_STRATEGY_COMMISSION_OUTER = 12,
  BALANCE_WITHDRAW_BONUS_COMPENSATION = 13,
  BALANCE_WITHDRAW_IB_SHARED_PERCENTAGE_TO_BROKER = 14,
  BALANCE_DEPOSIT_DIVIDENDS = 15,
  BALANCE_WITHDRAW_DIVIDENDS = 16,
  BALANCE_WITHDRAW_GSL_CHARGE = 17,
  BALANCE_WITHDRAW_ROLLOVER = 18,
  BALANCE_DEPOSIT_NONWITHDRAWABLE_BONUS = 19,
  BALANCE_WITHDRAW_NONWITHDRAWABLE_BONUS = 20,
  BALANCE_DEPOSIT_SWAP = 21,
  BALANCE_WITHDRAW_SWAP = 22,
  BALANCE_DEPOSIT_MANAGEMENT_FEE = 27,
  BALANCE_WITHDRAW_MANAGEMENT_FEE = 28,
  BALANCE_DEPOSIT_PERFORMANCE_FEE = 29,
  BALANCE_WITHDRAW_FOR_SUBACCOUNT = 30,
  BALANCE_DEPOSIT_TO_SUBACCOUNT = 31,
  BALANCE_WITHDRAW_FROM_SUBACCOUNT = 32,
  BALANCE_DEPOSIT_FROM_SUBACCOUNT = 33,
  BALANCE_WITHDRAW_INACTIVITY_FEE = 35,
  BALANCE_DEPOSIT_TRANSFER = 36,
  BALANCE_WITHDRAW_TRANSFER = 37,
  BALANCE_DEPOSIT_CONVERTED_BONUS = 38,
}

public enum ProtoOADealStatus {
  FILLED = 2,
  PARTIALLY_FILLED = 3,
  REJECTED = 4,
  INTERNALLY_REJECTED = 5,
  ERROR = 6,
  MISSED = 7,
}

public enum ProtoOATrendbarPeriod {
  M1 = 1,
  M2 = 2,
  M3 = 3,
  M4 = 4,
  M5 = 5,
  M10 = 6,
  M15 = 7,
  M30 = 8,
  H1 = 9,
  H4 = 10,
  H12 = 11,
  D1 = 12,
  W1 = 13,
  MN1 = 14,
}

public enum ProtoOAQuoteType {
  BID = 1,
  ASK = 2,
}

public enum ProtoOAClientPermissionScope {
  SCOPE_VIEW = 0,
  SCOPE_TRADE = 1,
}

public enum ProtoOANotificationType {
  MARGIN_LEVEL_THRESHOLD_1 = 61,
  MARGIN_LEVEL_THRESHOLD_2 = 62,
  MARGIN_LEVEL_THRESHOLD_3 = 63,
}

public enum ProtoOAErrorCode {
  OA_AUTH_TOKEN_EXPIRED = 1,
  ACCOUNT_NOT_AUTHORIZED = 2,
  ALREADY_LOGGED_IN = 14,
  CH_CLIENT_AUTH_FAILURE = 101,
  CH_CLIENT_NOT_AUTHENTICATED = 102,
  CH_CLIENT_ALREADY_AUTHENTICATED = 103,
  CH_ACCESS_TOKEN_INVALID = 104,
  CH_SERVER_NOT_REACHABLE = 105,
  CH_CTID_TRADER_ACCOUNT_NOT_FOUND = 106,
  CH_OA_CLIENT_NOT_FOUND = 107,
  REQUEST_FREQUENCY_EXCEEDED = 108,
  SERVER_IS_UNDER_MAINTENANCE = 109,
  CHANNEL_IS_BLOCKED = 110,
  CONNECTIONS_LIMIT_EXCEEDED = 67,
  WORSE_GSL_NOT_ALLOWED = 68,
  SYMBOL_HAS_HOLIDAY = 69,
  NOT_SUBSCRIBED_TO_SPOTS = 112,
  ALREADY_SUBSCRIBED = 113,
  SYMBOL_NOT_FOUND = 114,
  UNKNOWN_SYMBOL = 115,
  INCORRECT_BOUNDARIES = 35,
  NO_QUOTES = 117,
  NOT_ENOUGH_MONEY = 118,
  MAX_EXPOSURE_REACHED = 119,
  POSITION_NOT_FOUND = 120,
  ORDER_NOT_FOUND = 121,
  POSITION_NOT_OPEN = 122,
  POSITION_LOCKED = 123,
  TOO_MANY_POSITIONS = 124,
  TRADING_BAD_VOLUME = 125,
  TRADING_BAD_STOPS = 126,
  TRADING_BAD_PRICES = 127,
  TRADING_BAD_STAKE = 128,
  PROTECTION_IS_TOO_CLOSE_TO_MARKET = 129,
  TRADING_BAD_EXPIRATION_DATE = 130,
  PENDING_EXECUTION = 131,
  TRADING_DISABLED = 132,
  TRADING_NOT_ALLOWED = 133,
  UNABLE_TO_CANCEL_ORDER = 134,
  UNABLE_TO_AMEND_ORDER = 135,
  SHORT_SELLING_NOT_ALLOWED = 136,
}

public enum ProtoOALimitedRiskMarginCalculationStrategy {
  ACCORDING_TO_LEVERAGE = 0,
  ACCORDING_TO_GSL = 1,
  ACCORDING_TO_GSL_AND_LEVERAGE = 2,
}

#endregion

#region Messages
[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class ProtoOAAsset : pb::GeneratedMessage<ProtoOAAsset, ProtoOAAsset.Builder> {
  private ProtoOAAsset() { }
  private static readonly ProtoOAAsset defaultInstance = new ProtoOAAsset().MakeReadOnly();
  private static readonly string[] _protoOAAssetFieldNames = new string[] { "assetId", "displayName", "name" };
  private static readonly uint[] _protoOAAssetFieldTags = new uint[] { 8, 26, 18 };
  public static ProtoOAAsset DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override ProtoOAAsset DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override ProtoOAAsset ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::OpenApiModelMessages.internal__static_ProtoOAAsset__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<ProtoOAAsset, ProtoOAAsset.Builder> InternalFieldAccessors {
    get { return global::OpenApiModelMessages.internal__static_ProtoOAAsset__FieldAccessorTable; }
  }
  
  public const int AssetIdFieldNumber = 1;
  private bool hasAssetId;
  private long assetId_;
  public bool HasAssetId {
    get { return hasAssetId; }
  }
  public long AssetId {
    get { return assetId_; }
  }
  
  public const int NameFieldNumber = 2;
  private bool hasName;
  private string name_ = "";
  public bool HasName {
    get { return hasName; }
  }
  public string Name {
    get { return name_; }
  }
  
  public const int DisplayNameFieldNumber = 3;
  private bool hasDisplayName;
  private string displayName_ = "";
  public bool HasDisplayName {
    get { return hasDisplayName; }
  }
  public string DisplayName {
    get { return displayName_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasAssetId) return false;
      if (!hasName) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _protoOAAssetFieldNames;
    if (hasAssetId) {
      output.WriteInt64(1, field_names[0], AssetId);
    }
    if (hasName) {
      output.WriteString(2, field_names[2], Name);
    }
    if (hasDisplayName) {
      output.WriteString(3, field_names[1], DisplayName);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasAssetId) {
      size += pb::CodedOutputStream.ComputeInt64Size(1, AssetId);
    }
    if (hasName) {
      size += pb::CodedOutputStream.ComputeStringSize(2, Name);
    }
    if (hasDisplayName) {
      size += pb::CodedOutputStream.ComputeStringSize(3, DisplayName);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static ProtoOAAsset ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOAAsset ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOAAsset ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOAAsset ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOAAsset ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOAAsset ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static ProtoOAAsset ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static ProtoOAAsset ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static ProtoOAAsset ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOAAsset ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private ProtoOAAsset MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(ProtoOAAsset prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<ProtoOAAsset, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(ProtoOAAsset cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private ProtoOAAsset result;
    
    private ProtoOAAsset PrepareBuilder() {
      if (resultIsReadOnly) {
        ProtoOAAsset original = result;
        result = new ProtoOAAsset();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override ProtoOAAsset MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::ProtoOAAsset.Descriptor; }
    }
    
    public override ProtoOAAsset DefaultInstanceForType {
      get { return global::ProtoOAAsset.DefaultInstance; }
    }
    
    public override ProtoOAAsset BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is ProtoOAAsset) {
        return MergeFrom((ProtoOAAsset) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(ProtoOAAsset other) {
      if (other == global::ProtoOAAsset.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasAssetId) {
        AssetId = other.AssetId;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      if (other.HasDisplayName) {
        DisplayName = other.DisplayName;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_protoOAAssetFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _protoOAAssetFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasAssetId = input.ReadInt64(ref result.assetId_);
            break;
          }
          case 18: {
            result.hasName = input.ReadString(ref result.name_);
            break;
          }
          case 26: {
            result.hasDisplayName = input.ReadString(ref result.displayName_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasAssetId {
      get { return result.hasAssetId; }
    }
    public long AssetId {
      get { return result.AssetId; }
      set { SetAssetId(value); }
    }
    public Builder SetAssetId(long value) {
      PrepareBuilder();
      result.hasAssetId = true;
      result.assetId_ = value;
      return this;
    }
    public Builder ClearAssetId() {
      PrepareBuilder();
      result.hasAssetId = false;
      result.assetId_ = 0L;
      return this;
    }
    
    public bool HasName {
      get { return result.hasName; }
    }
    public string Name {
      get { return result.Name; }
      set { SetName(value); }
    }
    public Builder SetName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasName = true;
      result.name_ = value;
      return this;
    }
    public Builder ClearName() {
      PrepareBuilder();
      result.hasName = false;
      result.name_ = "";
      return this;
    }
    
    public bool HasDisplayName {
      get { return result.hasDisplayName; }
    }
    public string DisplayName {
      get { return result.DisplayName; }
      set { SetDisplayName(value); }
    }
    public Builder SetDisplayName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasDisplayName = true;
      result.displayName_ = value;
      return this;
    }
    public Builder ClearDisplayName() {
      PrepareBuilder();
      result.hasDisplayName = false;
      result.displayName_ = "";
      return this;
    }
  }
  static ProtoOAAsset() {
    object.ReferenceEquals(global::OpenApiModelMessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class ProtoOASymbol : pb::GeneratedMessage<ProtoOASymbol, ProtoOASymbol.Builder> {
  private ProtoOASymbol() { }
  private static readonly ProtoOASymbol defaultInstance = new ProtoOASymbol().MakeReadOnly();
  private static readonly string[] _protoOASymbolFieldNames = new string[] { "commission", "commissionType", "digits", "distanceSetIn", "enableShortSelling", "gslCharge", "gslDistance", "guaranteedStopLoss", "lotSize", "maxExposure", "maxVolume", "minCommission", "minCommissionAsset", "minCommissionType", "minVolume", "pipPosition", "rolloverCommission", "rolloverCommission3Days", "schedule", "scheduleTimeZone", "skipRolloverDays", "slDistance", "stepVolume", "swapCalculationType", "swapLong", "swapRollover3Days", "swapShort", "symbolId", "tpDistance", "tradingMode" };
  private static readonly uint[] _protoOASymbolFieldTags = new uint[] { 112, 120, 16, 160, 32, 152, 144, 40, 240, 96, 72, 168, 186, 176, 80, 24, 192, 224, 106, 210, 200, 128, 88, 232, 57, 48, 65, 8, 136, 216 };
  public static ProtoOASymbol DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override ProtoOASymbol DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override ProtoOASymbol ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::OpenApiModelMessages.internal__static_ProtoOASymbol__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<ProtoOASymbol, ProtoOASymbol.Builder> InternalFieldAccessors {
    get { return global::OpenApiModelMessages.internal__static_ProtoOASymbol__FieldAccessorTable; }
  }
  
  public const int SymbolIdFieldNumber = 1;
  private bool hasSymbolId;
  private long symbolId_;
  public bool HasSymbolId {
    get { return hasSymbolId; }
  }
  public long SymbolId {
    get { return symbolId_; }
  }
  
  public const int DigitsFieldNumber = 2;
  private bool hasDigits;
  private int digits_;
  public bool HasDigits {
    get { return hasDigits; }
  }
  public int Digits {
    get { return digits_; }
  }
  
  public const int PipPositionFieldNumber = 3;
  private bool hasPipPosition;
  private int pipPosition_;
  public bool HasPipPosition {
    get { return hasPipPosition; }
  }
  public int PipPosition {
    get { return pipPosition_; }
  }
  
  public const int EnableShortSellingFieldNumber = 4;
  private bool hasEnableShortSelling;
  private bool enableShortSelling_;
  public bool HasEnableShortSelling {
    get { return hasEnableShortSelling; }
  }
  public bool EnableShortSelling {
    get { return enableShortSelling_; }
  }
  
  public const int GuaranteedStopLossFieldNumber = 5;
  private bool hasGuaranteedStopLoss;
  private bool guaranteedStopLoss_;
  public bool HasGuaranteedStopLoss {
    get { return hasGuaranteedStopLoss; }
  }
  public bool GuaranteedStopLoss {
    get { return guaranteedStopLoss_; }
  }
  
  public const int SwapRollover3DaysFieldNumber = 6;
  private bool hasSwapRollover3Days;
  private global::ProtoOADayOfWeek swapRollover3Days_ = global::ProtoOADayOfWeek.MONDAY;
  public bool HasSwapRollover3Days {
    get { return hasSwapRollover3Days; }
  }
  public global::ProtoOADayOfWeek SwapRollover3Days {
    get { return swapRollover3Days_; }
  }
  
  public const int SwapLongFieldNumber = 7;
  private bool hasSwapLong;
  private double swapLong_;
  public bool HasSwapLong {
    get { return hasSwapLong; }
  }
  public double SwapLong {
    get { return swapLong_; }
  }
  
  public const int SwapShortFieldNumber = 8;
  private bool hasSwapShort;
  private double swapShort_;
  public bool HasSwapShort {
    get { return hasSwapShort; }
  }
  public double SwapShort {
    get { return swapShort_; }
  }
  
  public const int MaxVolumeFieldNumber = 9;
  private bool hasMaxVolume;
  private long maxVolume_;
  public bool HasMaxVolume {
    get { return hasMaxVolume; }
  }
  public long MaxVolume {
    get { return maxVolume_; }
  }
  
  public const int MinVolumeFieldNumber = 10;
  private bool hasMinVolume;
  private long minVolume_;
  public bool HasMinVolume {
    get { return hasMinVolume; }
  }
  public long MinVolume {
    get { return minVolume_; }
  }
  
  public const int StepVolumeFieldNumber = 11;
  private bool hasStepVolume;
  private long stepVolume_;
  public bool HasStepVolume {
    get { return hasStepVolume; }
  }
  public long StepVolume {
    get { return stepVolume_; }
  }
  
  public const int MaxExposureFieldNumber = 12;
  private bool hasMaxExposure;
  private ulong maxExposure_;
  public bool HasMaxExposure {
    get { return hasMaxExposure; }
  }
  [global::System.CLSCompliant(false)]
  public ulong MaxExposure {
    get { return maxExposure_; }
  }
  
  public const int ScheduleFieldNumber = 13;
  private pbc::PopsicleList<global::ProtoOAInterval> schedule_ = new pbc::PopsicleList<global::ProtoOAInterval>();
  public scg::IList<global::ProtoOAInterval> ScheduleList {
    get { return schedule_; }
  }
  public int ScheduleCount {
    get { return schedule_.Count; }
  }
  public global::ProtoOAInterval GetSchedule(int index) {
    return schedule_[index];
  }
  
  public const int CommissionFieldNumber = 14;
  private bool hasCommission;
  private long commission_;
  public bool HasCommission {
    get { return hasCommission; }
  }
  public long Commission {
    get { return commission_; }
  }
  
  public const int CommissionTypeFieldNumber = 15;
  private bool hasCommissionType;
  private global::ProtoOACommissionType commissionType_ = global::ProtoOACommissionType.USD_PER_MIL_USD;
  public bool HasCommissionType {
    get { return hasCommissionType; }
  }
  public global::ProtoOACommissionType CommissionType {
    get { return commissionType_; }
  }
  
  public const int SlDistanceFieldNumber = 16;
  private bool hasSlDistance;
  private uint slDistance_;
  public bool HasSlDistance {
    get { return hasSlDistance; }
  }
  [global::System.CLSCompliant(false)]
  public uint SlDistance {
    get { return slDistance_; }
  }
  
  public const int TpDistanceFieldNumber = 17;
  private bool hasTpDistance;
  private uint tpDistance_;
  public bool HasTpDistance {
    get { return hasTpDistance; }
  }
  [global::System.CLSCompliant(false)]
  public uint TpDistance {
    get { return tpDistance_; }
  }
  
  public const int GslDistanceFieldNumber = 18;
  private bool hasGslDistance;
  private uint gslDistance_;
  public bool HasGslDistance {
    get { return hasGslDistance; }
  }
  [global::System.CLSCompliant(false)]
  public uint GslDistance {
    get { return gslDistance_; }
  }
  
  public const int GslChargeFieldNumber = 19;
  private bool hasGslCharge;
  private long gslCharge_;
  public bool HasGslCharge {
    get { return hasGslCharge; }
  }
  public long GslCharge {
    get { return gslCharge_; }
  }
  
  public const int DistanceSetInFieldNumber = 20;
  private bool hasDistanceSetIn;
  private global::ProtoOASymbolDistanceType distanceSetIn_ = global::ProtoOASymbolDistanceType.SYMBOL_DISTANCE_IN_POINTS;
  public bool HasDistanceSetIn {
    get { return hasDistanceSetIn; }
  }
  public global::ProtoOASymbolDistanceType DistanceSetIn {
    get { return distanceSetIn_; }
  }
  
  public const int MinCommissionFieldNumber = 21;
  private bool hasMinCommission;
  private long minCommission_;
  public bool HasMinCommission {
    get { return hasMinCommission; }
  }
  public long MinCommission {
    get { return minCommission_; }
  }
  
  public const int MinCommissionTypeFieldNumber = 22;
  private bool hasMinCommissionType;
  private global::ProtoOAMinCommissionType minCommissionType_ = global::ProtoOAMinCommissionType.CURRENCY;
  public bool HasMinCommissionType {
    get { return hasMinCommissionType; }
  }
  public global::ProtoOAMinCommissionType MinCommissionType {
    get { return minCommissionType_; }
  }
  
  public const int MinCommissionAssetFieldNumber = 23;
  private bool hasMinCommissionAsset;
  private string minCommissionAsset_ = "USD";
  public bool HasMinCommissionAsset {
    get { return hasMinCommissionAsset; }
  }
  public string MinCommissionAsset {
    get { return minCommissionAsset_; }
  }
  
  public const int RolloverCommissionFieldNumber = 24;
  private bool hasRolloverCommission;
  private long rolloverCommission_;
  public bool HasRolloverCommission {
    get { return hasRolloverCommission; }
  }
  public long RolloverCommission {
    get { return rolloverCommission_; }
  }
  
  public const int SkipRolloverDaysFieldNumber = 25;
  private bool hasSkipRolloverDays;
  private int skipRolloverDays_;
  public bool HasSkipRolloverDays {
    get { return hasSkipRolloverDays; }
  }
  public int SkipRolloverDays {
    get { return skipRolloverDays_; }
  }
  
  public const int ScheduleTimeZoneFieldNumber = 26;
  private bool hasScheduleTimeZone;
  private string scheduleTimeZone_ = "";
  public bool HasScheduleTimeZone {
    get { return hasScheduleTimeZone; }
  }
  public string ScheduleTimeZone {
    get { return scheduleTimeZone_; }
  }
  
  public const int TradingModeFieldNumber = 27;
  private bool hasTradingMode;
  private global::ProtoOATradingMode tradingMode_ = global::ProtoOATradingMode.ENABLED;
  public bool HasTradingMode {
    get { return hasTradingMode; }
  }
  public global::ProtoOATradingMode TradingMode {
    get { return tradingMode_; }
  }
  
  public const int RolloverCommission3DaysFieldNumber = 28;
  private bool hasRolloverCommission3Days;
  private global::ProtoOADayOfWeek rolloverCommission3Days_ = global::ProtoOADayOfWeek.MONDAY;
  public bool HasRolloverCommission3Days {
    get { return hasRolloverCommission3Days; }
  }
  public global::ProtoOADayOfWeek RolloverCommission3Days {
    get { return rolloverCommission3Days_; }
  }
  
  public const int SwapCalculationTypeFieldNumber = 29;
  private bool hasSwapCalculationType;
  private global::ProtoOASwapCalculationType swapCalculationType_ = global::ProtoOASwapCalculationType.POINTS;
  public bool HasSwapCalculationType {
    get { return hasSwapCalculationType; }
  }
  public global::ProtoOASwapCalculationType SwapCalculationType {
    get { return swapCalculationType_; }
  }
  
  public const int LotSizeFieldNumber = 30;
  private bool hasLotSize;
  private long lotSize_;
  public bool HasLotSize {
    get { return hasLotSize; }
  }
  public long LotSize {
    get { return lotSize_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasSymbolId) return false;
      if (!hasDigits) return false;
      if (!hasPipPosition) return false;
      if (!hasCommission) return false;
      foreach (global::ProtoOAInterval element in ScheduleList) {
        if (!element.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _protoOASymbolFieldNames;
    if (hasSymbolId) {
      output.WriteInt64(1, field_names[27], SymbolId);
    }
    if (hasDigits) {
      output.WriteInt32(2, field_names[2], Digits);
    }
    if (hasPipPosition) {
      output.WriteInt32(3, field_names[15], PipPosition);
    }
    if (hasEnableShortSelling) {
      output.WriteBool(4, field_names[4], EnableShortSelling);
    }
    if (hasGuaranteedStopLoss) {
      output.WriteBool(5, field_names[7], GuaranteedStopLoss);
    }
    if (hasSwapRollover3Days) {
      output.WriteEnum(6, field_names[25], (int) SwapRollover3Days, SwapRollover3Days);
    }
    if (hasSwapLong) {
      output.WriteDouble(7, field_names[24], SwapLong);
    }
    if (hasSwapShort) {
      output.WriteDouble(8, field_names[26], SwapShort);
    }
    if (hasMaxVolume) {
      output.WriteInt64(9, field_names[10], MaxVolume);
    }
    if (hasMinVolume) {
      output.WriteInt64(10, field_names[14], MinVolume);
    }
    if (hasStepVolume) {
      output.WriteInt64(11, field_names[22], StepVolume);
    }
    if (hasMaxExposure) {
      output.WriteUInt64(12, field_names[9], MaxExposure);
    }
    if (schedule_.Count > 0) {
      output.WriteMessageArray(13, field_names[18], schedule_);
    }
    if (hasCommission) {
      output.WriteInt64(14, field_names[0], Commission);
    }
    if (hasCommissionType) {
      output.WriteEnum(15, field_names[1], (int) CommissionType, CommissionType);
    }
    if (hasSlDistance) {
      output.WriteUInt32(16, field_names[21], SlDistance);
    }
    if (hasTpDistance) {
      output.WriteUInt32(17, field_names[28], TpDistance);
    }
    if (hasGslDistance) {
      output.WriteUInt32(18, field_names[6], GslDistance);
    }
    if (hasGslCharge) {
      output.WriteInt64(19, field_names[5], GslCharge);
    }
    if (hasDistanceSetIn) {
      output.WriteEnum(20, field_names[3], (int) DistanceSetIn, DistanceSetIn);
    }
    if (hasMinCommission) {
      output.WriteInt64(21, field_names[11], MinCommission);
    }
    if (hasMinCommissionType) {
      output.WriteEnum(22, field_names[13], (int) MinCommissionType, MinCommissionType);
    }
    if (hasMinCommissionAsset) {
      output.WriteString(23, field_names[12], MinCommissionAsset);
    }
    if (hasRolloverCommission) {
      output.WriteInt64(24, field_names[16], RolloverCommission);
    }
    if (hasSkipRolloverDays) {
      output.WriteInt32(25, field_names[20], SkipRolloverDays);
    }
    if (hasScheduleTimeZone) {
      output.WriteString(26, field_names[19], ScheduleTimeZone);
    }
    if (hasTradingMode) {
      output.WriteEnum(27, field_names[29], (int) TradingMode, TradingMode);
    }
    if (hasRolloverCommission3Days) {
      output.WriteEnum(28, field_names[17], (int) RolloverCommission3Days, RolloverCommission3Days);
    }
    if (hasSwapCalculationType) {
      output.WriteEnum(29, field_names[23], (int) SwapCalculationType, SwapCalculationType);
    }
    if (hasLotSize) {
      output.WriteInt64(30, field_names[8], LotSize);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasSymbolId) {
      size += pb::CodedOutputStream.ComputeInt64Size(1, SymbolId);
    }
    if (hasDigits) {
      size += pb::CodedOutputStream.ComputeInt32Size(2, Digits);
    }
    if (hasPipPosition) {
      size += pb::CodedOutputStream.ComputeInt32Size(3, PipPosition);
    }
    if (hasEnableShortSelling) {
      size += pb::CodedOutputStream.ComputeBoolSize(4, EnableShortSelling);
    }
    if (hasGuaranteedStopLoss) {
      size += pb::CodedOutputStream.ComputeBoolSize(5, GuaranteedStopLoss);
    }
    if (hasSwapRollover3Days) {
      size += pb::CodedOutputStream.ComputeEnumSize(6, (int) SwapRollover3Days);
    }
    if (hasSwapLong) {
      size += pb::CodedOutputStream.ComputeDoubleSize(7, SwapLong);
    }
    if (hasSwapShort) {
      size += pb::CodedOutputStream.ComputeDoubleSize(8, SwapShort);
    }
    if (hasMaxVolume) {
      size += pb::CodedOutputStream.ComputeInt64Size(9, MaxVolume);
    }
    if (hasMinVolume) {
      size += pb::CodedOutputStream.ComputeInt64Size(10, MinVolume);
    }
    if (hasStepVolume) {
      size += pb::CodedOutputStream.ComputeInt64Size(11, StepVolume);
    }
    if (hasMaxExposure) {
      size += pb::CodedOutputStream.ComputeUInt64Size(12, MaxExposure);
    }
    foreach (global::ProtoOAInterval element in ScheduleList) {
      size += pb::CodedOutputStream.ComputeMessageSize(13, element);
    }
    if (hasCommission) {
      size += pb::CodedOutputStream.ComputeInt64Size(14, Commission);
    }
    if (hasCommissionType) {
      size += pb::CodedOutputStream.ComputeEnumSize(15, (int) CommissionType);
    }
    if (hasSlDistance) {
      size += pb::CodedOutputStream.ComputeUInt32Size(16, SlDistance);
    }
    if (hasTpDistance) {
      size += pb::CodedOutputStream.ComputeUInt32Size(17, TpDistance);
    }
    if (hasGslDistance) {
      size += pb::CodedOutputStream.ComputeUInt32Size(18, GslDistance);
    }
    if (hasGslCharge) {
      size += pb::CodedOutputStream.ComputeInt64Size(19, GslCharge);
    }
    if (hasDistanceSetIn) {
      size += pb::CodedOutputStream.ComputeEnumSize(20, (int) DistanceSetIn);
    }
    if (hasMinCommission) {
      size += pb::CodedOutputStream.ComputeInt64Size(21, MinCommission);
    }
    if (hasMinCommissionType) {
      size += pb::CodedOutputStream.ComputeEnumSize(22, (int) MinCommissionType);
    }
    if (hasMinCommissionAsset) {
      size += pb::CodedOutputStream.ComputeStringSize(23, MinCommissionAsset);
    }
    if (hasRolloverCommission) {
      size += pb::CodedOutputStream.ComputeInt64Size(24, RolloverCommission);
    }
    if (hasSkipRolloverDays) {
      size += pb::CodedOutputStream.ComputeInt32Size(25, SkipRolloverDays);
    }
    if (hasScheduleTimeZone) {
      size += pb::CodedOutputStream.ComputeStringSize(26, ScheduleTimeZone);
    }
    if (hasTradingMode) {
      size += pb::CodedOutputStream.ComputeEnumSize(27, (int) TradingMode);
    }
    if (hasRolloverCommission3Days) {
      size += pb::CodedOutputStream.ComputeEnumSize(28, (int) RolloverCommission3Days);
    }
    if (hasSwapCalculationType) {
      size += pb::CodedOutputStream.ComputeEnumSize(29, (int) SwapCalculationType);
    }
    if (hasLotSize) {
      size += pb::CodedOutputStream.ComputeInt64Size(30, LotSize);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static ProtoOASymbol ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOASymbol ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOASymbol ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOASymbol ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOASymbol ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOASymbol ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static ProtoOASymbol ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static ProtoOASymbol ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static ProtoOASymbol ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOASymbol ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private ProtoOASymbol MakeReadOnly() {
    schedule_.MakeReadOnly();
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(ProtoOASymbol prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<ProtoOASymbol, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(ProtoOASymbol cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private ProtoOASymbol result;
    
    private ProtoOASymbol PrepareBuilder() {
      if (resultIsReadOnly) {
        ProtoOASymbol original = result;
        result = new ProtoOASymbol();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override ProtoOASymbol MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::ProtoOASymbol.Descriptor; }
    }
    
    public override ProtoOASymbol DefaultInstanceForType {
      get { return global::ProtoOASymbol.DefaultInstance; }
    }
    
    public override ProtoOASymbol BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is ProtoOASymbol) {
        return MergeFrom((ProtoOASymbol) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(ProtoOASymbol other) {
      if (other == global::ProtoOASymbol.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasSymbolId) {
        SymbolId = other.SymbolId;
      }
      if (other.HasDigits) {
        Digits = other.Digits;
      }
      if (other.HasPipPosition) {
        PipPosition = other.PipPosition;
      }
      if (other.HasEnableShortSelling) {
        EnableShortSelling = other.EnableShortSelling;
      }
      if (other.HasGuaranteedStopLoss) {
        GuaranteedStopLoss = other.GuaranteedStopLoss;
      }
      if (other.HasSwapRollover3Days) {
        SwapRollover3Days = other.SwapRollover3Days;
      }
      if (other.HasSwapLong) {
        SwapLong = other.SwapLong;
      }
      if (other.HasSwapShort) {
        SwapShort = other.SwapShort;
      }
      if (other.HasMaxVolume) {
        MaxVolume = other.MaxVolume;
      }
      if (other.HasMinVolume) {
        MinVolume = other.MinVolume;
      }
      if (other.HasStepVolume) {
        StepVolume = other.StepVolume;
      }
      if (other.HasMaxExposure) {
        MaxExposure = other.MaxExposure;
      }
      if (other.schedule_.Count != 0) {
        result.schedule_.Add(other.schedule_);
      }
      if (other.HasCommission) {
        Commission = other.Commission;
      }
      if (other.HasCommissionType) {
        CommissionType = other.CommissionType;
      }
      if (other.HasSlDistance) {
        SlDistance = other.SlDistance;
      }
      if (other.HasTpDistance) {
        TpDistance = other.TpDistance;
      }
      if (other.HasGslDistance) {
        GslDistance = other.GslDistance;
      }
      if (other.HasGslCharge) {
        GslCharge = other.GslCharge;
      }
      if (other.HasDistanceSetIn) {
        DistanceSetIn = other.DistanceSetIn;
      }
      if (other.HasMinCommission) {
        MinCommission = other.MinCommission;
      }
      if (other.HasMinCommissionType) {
        MinCommissionType = other.MinCommissionType;
      }
      if (other.HasMinCommissionAsset) {
        MinCommissionAsset = other.MinCommissionAsset;
      }
      if (other.HasRolloverCommission) {
        RolloverCommission = other.RolloverCommission;
      }
      if (other.HasSkipRolloverDays) {
        SkipRolloverDays = other.SkipRolloverDays;
      }
      if (other.HasScheduleTimeZone) {
        ScheduleTimeZone = other.ScheduleTimeZone;
      }
      if (other.HasTradingMode) {
        TradingMode = other.TradingMode;
      }
      if (other.HasRolloverCommission3Days) {
        RolloverCommission3Days = other.RolloverCommission3Days;
      }
      if (other.HasSwapCalculationType) {
        SwapCalculationType = other.SwapCalculationType;
      }
      if (other.HasLotSize) {
        LotSize = other.LotSize;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_protoOASymbolFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _protoOASymbolFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasSymbolId = input.ReadInt64(ref result.symbolId_);
            break;
          }
          case 16: {
            result.hasDigits = input.ReadInt32(ref result.digits_);
            break;
          }
          case 24: {
            result.hasPipPosition = input.ReadInt32(ref result.pipPosition_);
            break;
          }
          case 32: {
            result.hasEnableShortSelling = input.ReadBool(ref result.enableShortSelling_);
            break;
          }
          case 40: {
            result.hasGuaranteedStopLoss = input.ReadBool(ref result.guaranteedStopLoss_);
            break;
          }
          case 48: {
            object unknown;
            if(input.ReadEnum(ref result.swapRollover3Days_, out unknown)) {
              result.hasSwapRollover3Days = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(6, (ulong)(int)unknown);
            }
            break;
          }
          case 57: {
            result.hasSwapLong = input.ReadDouble(ref result.swapLong_);
            break;
          }
          case 65: {
            result.hasSwapShort = input.ReadDouble(ref result.swapShort_);
            break;
          }
          case 72: {
            result.hasMaxVolume = input.ReadInt64(ref result.maxVolume_);
            break;
          }
          case 80: {
            result.hasMinVolume = input.ReadInt64(ref result.minVolume_);
            break;
          }
          case 88: {
            result.hasStepVolume = input.ReadInt64(ref result.stepVolume_);
            break;
          }
          case 96: {
            result.hasMaxExposure = input.ReadUInt64(ref result.maxExposure_);
            break;
          }
          case 106: {
            input.ReadMessageArray(tag, field_name, result.schedule_, global::ProtoOAInterval.DefaultInstance, extensionRegistry);
            break;
          }
          case 112: {
            result.hasCommission = input.ReadInt64(ref result.commission_);
            break;
          }
          case 120: {
            object unknown;
            if(input.ReadEnum(ref result.commissionType_, out unknown)) {
              result.hasCommissionType = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(15, (ulong)(int)unknown);
            }
            break;
          }
          case 128: {
            result.hasSlDistance = input.ReadUInt32(ref result.slDistance_);
            break;
          }
          case 136: {
            result.hasTpDistance = input.ReadUInt32(ref result.tpDistance_);
            break;
          }
          case 144: {
            result.hasGslDistance = input.ReadUInt32(ref result.gslDistance_);
            break;
          }
          case 152: {
            result.hasGslCharge = input.ReadInt64(ref result.gslCharge_);
            break;
          }
          case 160: {
            object unknown;
            if(input.ReadEnum(ref result.distanceSetIn_, out unknown)) {
              result.hasDistanceSetIn = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(20, (ulong)(int)unknown);
            }
            break;
          }
          case 168: {
            result.hasMinCommission = input.ReadInt64(ref result.minCommission_);
            break;
          }
          case 176: {
            object unknown;
            if(input.ReadEnum(ref result.minCommissionType_, out unknown)) {
              result.hasMinCommissionType = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(22, (ulong)(int)unknown);
            }
            break;
          }
          case 186: {
            result.hasMinCommissionAsset = input.ReadString(ref result.minCommissionAsset_);
            break;
          }
          case 192: {
            result.hasRolloverCommission = input.ReadInt64(ref result.rolloverCommission_);
            break;
          }
          case 200: {
            result.hasSkipRolloverDays = input.ReadInt32(ref result.skipRolloverDays_);
            break;
          }
          case 210: {
            result.hasScheduleTimeZone = input.ReadString(ref result.scheduleTimeZone_);
            break;
          }
          case 216: {
            object unknown;
            if(input.ReadEnum(ref result.tradingMode_, out unknown)) {
              result.hasTradingMode = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(27, (ulong)(int)unknown);
            }
            break;
          }
          case 224: {
            object unknown;
            if(input.ReadEnum(ref result.rolloverCommission3Days_, out unknown)) {
              result.hasRolloverCommission3Days = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(28, (ulong)(int)unknown);
            }
            break;
          }
          case 232: {
            object unknown;
            if(input.ReadEnum(ref result.swapCalculationType_, out unknown)) {
              result.hasSwapCalculationType = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(29, (ulong)(int)unknown);
            }
            break;
          }
          case 240: {
            result.hasLotSize = input.ReadInt64(ref result.lotSize_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasSymbolId {
      get { return result.hasSymbolId; }
    }
    public long SymbolId {
      get { return result.SymbolId; }
      set { SetSymbolId(value); }
    }
    public Builder SetSymbolId(long value) {
      PrepareBuilder();
      result.hasSymbolId = true;
      result.symbolId_ = value;
      return this;
    }
    public Builder ClearSymbolId() {
      PrepareBuilder();
      result.hasSymbolId = false;
      result.symbolId_ = 0L;
      return this;
    }
    
    public bool HasDigits {
      get { return result.hasDigits; }
    }
    public int Digits {
      get { return result.Digits; }
      set { SetDigits(value); }
    }
    public Builder SetDigits(int value) {
      PrepareBuilder();
      result.hasDigits = true;
      result.digits_ = value;
      return this;
    }
    public Builder ClearDigits() {
      PrepareBuilder();
      result.hasDigits = false;
      result.digits_ = 0;
      return this;
    }
    
    public bool HasPipPosition {
      get { return result.hasPipPosition; }
    }
    public int PipPosition {
      get { return result.PipPosition; }
      set { SetPipPosition(value); }
    }
    public Builder SetPipPosition(int value) {
      PrepareBuilder();
      result.hasPipPosition = true;
      result.pipPosition_ = value;
      return this;
    }
    public Builder ClearPipPosition() {
      PrepareBuilder();
      result.hasPipPosition = false;
      result.pipPosition_ = 0;
      return this;
    }
    
    public bool HasEnableShortSelling {
      get { return result.hasEnableShortSelling; }
    }
    public bool EnableShortSelling {
      get { return result.EnableShortSelling; }
      set { SetEnableShortSelling(value); }
    }
    public Builder SetEnableShortSelling(bool value) {
      PrepareBuilder();
      result.hasEnableShortSelling = true;
      result.enableShortSelling_ = value;
      return this;
    }
    public Builder ClearEnableShortSelling() {
      PrepareBuilder();
      result.hasEnableShortSelling = false;
      result.enableShortSelling_ = false;
      return this;
    }
    
    public bool HasGuaranteedStopLoss {
      get { return result.hasGuaranteedStopLoss; }
    }
    public bool GuaranteedStopLoss {
      get { return result.GuaranteedStopLoss; }
      set { SetGuaranteedStopLoss(value); }
    }
    public Builder SetGuaranteedStopLoss(bool value) {
      PrepareBuilder();
      result.hasGuaranteedStopLoss = true;
      result.guaranteedStopLoss_ = value;
      return this;
    }
    public Builder ClearGuaranteedStopLoss() {
      PrepareBuilder();
      result.hasGuaranteedStopLoss = false;
      result.guaranteedStopLoss_ = false;
      return this;
    }
    
    public bool HasSwapRollover3Days {
     get { return result.hasSwapRollover3Days; }
    }
    public global::ProtoOADayOfWeek SwapRollover3Days {
      get { return result.SwapRollover3Days; }
      set { SetSwapRollover3Days(value); }
    }
    public Builder SetSwapRollover3Days(global::ProtoOADayOfWeek value) {
      PrepareBuilder();
      result.hasSwapRollover3Days = true;
      result.swapRollover3Days_ = value;
      return this;
    }
    public Builder ClearSwapRollover3Days() {
      PrepareBuilder();
      result.hasSwapRollover3Days = false;
      result.swapRollover3Days_ = global::ProtoOADayOfWeek.MONDAY;
      return this;
    }
    
    public bool HasSwapLong {
      get { return result.hasSwapLong; }
    }
    public double SwapLong {
      get { return result.SwapLong; }
      set { SetSwapLong(value); }
    }
    public Builder SetSwapLong(double value) {
      PrepareBuilder();
      result.hasSwapLong = true;
      result.swapLong_ = value;
      return this;
    }
    public Builder ClearSwapLong() {
      PrepareBuilder();
      result.hasSwapLong = false;
      result.swapLong_ = 0D;
      return this;
    }
    
    public bool HasSwapShort {
      get { return result.hasSwapShort; }
    }
    public double SwapShort {
      get { return result.SwapShort; }
      set { SetSwapShort(value); }
    }
    public Builder SetSwapShort(double value) {
      PrepareBuilder();
      result.hasSwapShort = true;
      result.swapShort_ = value;
      return this;
    }
    public Builder ClearSwapShort() {
      PrepareBuilder();
      result.hasSwapShort = false;
      result.swapShort_ = 0D;
      return this;
    }
    
    public bool HasMaxVolume {
      get { return result.hasMaxVolume; }
    }
    public long MaxVolume {
      get { return result.MaxVolume; }
      set { SetMaxVolume(value); }
    }
    public Builder SetMaxVolume(long value) {
      PrepareBuilder();
      result.hasMaxVolume = true;
      result.maxVolume_ = value;
      return this;
    }
    public Builder ClearMaxVolume() {
      PrepareBuilder();
      result.hasMaxVolume = false;
      result.maxVolume_ = 0L;
      return this;
    }
    
    public bool HasMinVolume {
      get { return result.hasMinVolume; }
    }
    public long MinVolume {
      get { return result.MinVolume; }
      set { SetMinVolume(value); }
    }
    public Builder SetMinVolume(long value) {
      PrepareBuilder();
      result.hasMinVolume = true;
      result.minVolume_ = value;
      return this;
    }
    public Builder ClearMinVolume() {
      PrepareBuilder();
      result.hasMinVolume = false;
      result.minVolume_ = 0L;
      return this;
    }
    
    public bool HasStepVolume {
      get { return result.hasStepVolume; }
    }
    public long StepVolume {
      get { return result.StepVolume; }
      set { SetStepVolume(value); }
    }
    public Builder SetStepVolume(long value) {
      PrepareBuilder();
      result.hasStepVolume = true;
      result.stepVolume_ = value;
      return this;
    }
    public Builder ClearStepVolume() {
      PrepareBuilder();
      result.hasStepVolume = false;
      result.stepVolume_ = 0L;
      return this;
    }
    
    public bool HasMaxExposure {
      get { return result.hasMaxExposure; }
    }
    [global::System.CLSCompliant(false)]
    public ulong MaxExposure {
      get { return result.MaxExposure; }
      set { SetMaxExposure(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetMaxExposure(ulong value) {
      PrepareBuilder();
      result.hasMaxExposure = true;
      result.maxExposure_ = value;
      return this;
    }
    public Builder ClearMaxExposure() {
      PrepareBuilder();
      result.hasMaxExposure = false;
      result.maxExposure_ = 0UL;
      return this;
    }
    
    public pbc::IPopsicleList<global::ProtoOAInterval> ScheduleList {
      get { return PrepareBuilder().schedule_; }
    }
    public int ScheduleCount {
      get { return result.ScheduleCount; }
    }
    public global::ProtoOAInterval GetSchedule(int index) {
      return result.GetSchedule(index);
    }
    public Builder SetSchedule(int index, global::ProtoOAInterval value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.schedule_[index] = value;
      return this;
    }
    public Builder SetSchedule(int index, global::ProtoOAInterval.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.schedule_[index] = builderForValue.Build();
      return this;
    }
    public Builder AddSchedule(global::ProtoOAInterval value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.schedule_.Add(value);
      return this;
    }
    public Builder AddSchedule(global::ProtoOAInterval.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.schedule_.Add(builderForValue.Build());
      return this;
    }
    public Builder AddRangeSchedule(scg::IEnumerable<global::ProtoOAInterval> values) {
      PrepareBuilder();
      result.schedule_.Add(values);
      return this;
    }
    public Builder ClearSchedule() {
      PrepareBuilder();
      result.schedule_.Clear();
      return this;
    }
    
    public bool HasCommission {
      get { return result.hasCommission; }
    }
    public long Commission {
      get { return result.Commission; }
      set { SetCommission(value); }
    }
    public Builder SetCommission(long value) {
      PrepareBuilder();
      result.hasCommission = true;
      result.commission_ = value;
      return this;
    }
    public Builder ClearCommission() {
      PrepareBuilder();
      result.hasCommission = false;
      result.commission_ = 0L;
      return this;
    }
    
    public bool HasCommissionType {
     get { return result.hasCommissionType; }
    }
    public global::ProtoOACommissionType CommissionType {
      get { return result.CommissionType; }
      set { SetCommissionType(value); }
    }
    public Builder SetCommissionType(global::ProtoOACommissionType value) {
      PrepareBuilder();
      result.hasCommissionType = true;
      result.commissionType_ = value;
      return this;
    }
    public Builder ClearCommissionType() {
      PrepareBuilder();
      result.hasCommissionType = false;
      result.commissionType_ = global::ProtoOACommissionType.USD_PER_MIL_USD;
      return this;
    }
    
    public bool HasSlDistance {
      get { return result.hasSlDistance; }
    }
    [global::System.CLSCompliant(false)]
    public uint SlDistance {
      get { return result.SlDistance; }
      set { SetSlDistance(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSlDistance(uint value) {
      PrepareBuilder();
      result.hasSlDistance = true;
      result.slDistance_ = value;
      return this;
    }
    public Builder ClearSlDistance() {
      PrepareBuilder();
      result.hasSlDistance = false;
      result.slDistance_ = 0;
      return this;
    }
    
    public bool HasTpDistance {
      get { return result.hasTpDistance; }
    }
    [global::System.CLSCompliant(false)]
    public uint TpDistance {
      get { return result.TpDistance; }
      set { SetTpDistance(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetTpDistance(uint value) {
      PrepareBuilder();
      result.hasTpDistance = true;
      result.tpDistance_ = value;
      return this;
    }
    public Builder ClearTpDistance() {
      PrepareBuilder();
      result.hasTpDistance = false;
      result.tpDistance_ = 0;
      return this;
    }
    
    public bool HasGslDistance {
      get { return result.hasGslDistance; }
    }
    [global::System.CLSCompliant(false)]
    public uint GslDistance {
      get { return result.GslDistance; }
      set { SetGslDistance(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetGslDistance(uint value) {
      PrepareBuilder();
      result.hasGslDistance = true;
      result.gslDistance_ = value;
      return this;
    }
    public Builder ClearGslDistance() {
      PrepareBuilder();
      result.hasGslDistance = false;
      result.gslDistance_ = 0;
      return this;
    }
    
    public bool HasGslCharge {
      get { return result.hasGslCharge; }
    }
    public long GslCharge {
      get { return result.GslCharge; }
      set { SetGslCharge(value); }
    }
    public Builder SetGslCharge(long value) {
      PrepareBuilder();
      result.hasGslCharge = true;
      result.gslCharge_ = value;
      return this;
    }
    public Builder ClearGslCharge() {
      PrepareBuilder();
      result.hasGslCharge = false;
      result.gslCharge_ = 0L;
      return this;
    }
    
    public bool HasDistanceSetIn {
     get { return result.hasDistanceSetIn; }
    }
    public global::ProtoOASymbolDistanceType DistanceSetIn {
      get { return result.DistanceSetIn; }
      set { SetDistanceSetIn(value); }
    }
    public Builder SetDistanceSetIn(global::ProtoOASymbolDistanceType value) {
      PrepareBuilder();
      result.hasDistanceSetIn = true;
      result.distanceSetIn_ = value;
      return this;
    }
    public Builder ClearDistanceSetIn() {
      PrepareBuilder();
      result.hasDistanceSetIn = false;
      result.distanceSetIn_ = global::ProtoOASymbolDistanceType.SYMBOL_DISTANCE_IN_POINTS;
      return this;
    }
    
    public bool HasMinCommission {
      get { return result.hasMinCommission; }
    }
    public long MinCommission {
      get { return result.MinCommission; }
      set { SetMinCommission(value); }
    }
    public Builder SetMinCommission(long value) {
      PrepareBuilder();
      result.hasMinCommission = true;
      result.minCommission_ = value;
      return this;
    }
    public Builder ClearMinCommission() {
      PrepareBuilder();
      result.hasMinCommission = false;
      result.minCommission_ = 0L;
      return this;
    }
    
    public bool HasMinCommissionType {
     get { return result.hasMinCommissionType; }
    }
    public global::ProtoOAMinCommissionType MinCommissionType {
      get { return result.MinCommissionType; }
      set { SetMinCommissionType(value); }
    }
    public Builder SetMinCommissionType(global::ProtoOAMinCommissionType value) {
      PrepareBuilder();
      result.hasMinCommissionType = true;
      result.minCommissionType_ = value;
      return this;
    }
    public Builder ClearMinCommissionType() {
      PrepareBuilder();
      result.hasMinCommissionType = false;
      result.minCommissionType_ = global::ProtoOAMinCommissionType.CURRENCY;
      return this;
    }
    
    public bool HasMinCommissionAsset {
      get { return result.hasMinCommissionAsset; }
    }
    public string MinCommissionAsset {
      get { return result.MinCommissionAsset; }
      set { SetMinCommissionAsset(value); }
    }
    public Builder SetMinCommissionAsset(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasMinCommissionAsset = true;
      result.minCommissionAsset_ = value;
      return this;
    }
    public Builder ClearMinCommissionAsset() {
      PrepareBuilder();
      result.hasMinCommissionAsset = false;
      result.minCommissionAsset_ = "USD";
      return this;
    }
    
    public bool HasRolloverCommission {
      get { return result.hasRolloverCommission; }
    }
    public long RolloverCommission {
      get { return result.RolloverCommission; }
      set { SetRolloverCommission(value); }
    }
    public Builder SetRolloverCommission(long value) {
      PrepareBuilder();
      result.hasRolloverCommission = true;
      result.rolloverCommission_ = value;
      return this;
    }
    public Builder ClearRolloverCommission() {
      PrepareBuilder();
      result.hasRolloverCommission = false;
      result.rolloverCommission_ = 0L;
      return this;
    }
    
    public bool HasSkipRolloverDays {
      get { return result.hasSkipRolloverDays; }
    }
    public int SkipRolloverDays {
      get { return result.SkipRolloverDays; }
      set { SetSkipRolloverDays(value); }
    }
    public Builder SetSkipRolloverDays(int value) {
      PrepareBuilder();
      result.hasSkipRolloverDays = true;
      result.skipRolloverDays_ = value;
      return this;
    }
    public Builder ClearSkipRolloverDays() {
      PrepareBuilder();
      result.hasSkipRolloverDays = false;
      result.skipRolloverDays_ = 0;
      return this;
    }
    
    public bool HasScheduleTimeZone {
      get { return result.hasScheduleTimeZone; }
    }
    public string ScheduleTimeZone {
      get { return result.ScheduleTimeZone; }
      set { SetScheduleTimeZone(value); }
    }
    public Builder SetScheduleTimeZone(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasScheduleTimeZone = true;
      result.scheduleTimeZone_ = value;
      return this;
    }
    public Builder ClearScheduleTimeZone() {
      PrepareBuilder();
      result.hasScheduleTimeZone = false;
      result.scheduleTimeZone_ = "";
      return this;
    }
    
    public bool HasTradingMode {
     get { return result.hasTradingMode; }
    }
    public global::ProtoOATradingMode TradingMode {
      get { return result.TradingMode; }
      set { SetTradingMode(value); }
    }
    public Builder SetTradingMode(global::ProtoOATradingMode value) {
      PrepareBuilder();
      result.hasTradingMode = true;
      result.tradingMode_ = value;
      return this;
    }
    public Builder ClearTradingMode() {
      PrepareBuilder();
      result.hasTradingMode = false;
      result.tradingMode_ = global::ProtoOATradingMode.ENABLED;
      return this;
    }
    
    public bool HasRolloverCommission3Days {
     get { return result.hasRolloverCommission3Days; }
    }
    public global::ProtoOADayOfWeek RolloverCommission3Days {
      get { return result.RolloverCommission3Days; }
      set { SetRolloverCommission3Days(value); }
    }
    public Builder SetRolloverCommission3Days(global::ProtoOADayOfWeek value) {
      PrepareBuilder();
      result.hasRolloverCommission3Days = true;
      result.rolloverCommission3Days_ = value;
      return this;
    }
    public Builder ClearRolloverCommission3Days() {
      PrepareBuilder();
      result.hasRolloverCommission3Days = false;
      result.rolloverCommission3Days_ = global::ProtoOADayOfWeek.MONDAY;
      return this;
    }
    
    public bool HasSwapCalculationType {
     get { return result.hasSwapCalculationType; }
    }
    public global::ProtoOASwapCalculationType SwapCalculationType {
      get { return result.SwapCalculationType; }
      set { SetSwapCalculationType(value); }
    }
    public Builder SetSwapCalculationType(global::ProtoOASwapCalculationType value) {
      PrepareBuilder();
      result.hasSwapCalculationType = true;
      result.swapCalculationType_ = value;
      return this;
    }
    public Builder ClearSwapCalculationType() {
      PrepareBuilder();
      result.hasSwapCalculationType = false;
      result.swapCalculationType_ = global::ProtoOASwapCalculationType.POINTS;
      return this;
    }
    
    public bool HasLotSize {
      get { return result.hasLotSize; }
    }
    public long LotSize {
      get { return result.LotSize; }
      set { SetLotSize(value); }
    }
    public Builder SetLotSize(long value) {
      PrepareBuilder();
      result.hasLotSize = true;
      result.lotSize_ = value;
      return this;
    }
    public Builder ClearLotSize() {
      PrepareBuilder();
      result.hasLotSize = false;
      result.lotSize_ = 0L;
      return this;
    }
  }
  static ProtoOASymbol() {
    object.ReferenceEquals(global::OpenApiModelMessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class ProtoOALightSymbol : pb::GeneratedMessage<ProtoOALightSymbol, ProtoOALightSymbol.Builder> {
  private ProtoOALightSymbol() { }
  private static readonly ProtoOALightSymbol defaultInstance = new ProtoOALightSymbol().MakeReadOnly();
  private static readonly string[] _protoOALightSymbolFieldNames = new string[] { "baseAssetId", "description", "enabled", "quoteAssetId", "symbolCategoryId", "symbolId", "symbolName" };
  private static readonly uint[] _protoOALightSymbolFieldTags = new uint[] { 32, 58, 24, 40, 48, 8, 18 };
  public static ProtoOALightSymbol DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override ProtoOALightSymbol DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override ProtoOALightSymbol ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::OpenApiModelMessages.internal__static_ProtoOALightSymbol__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<ProtoOALightSymbol, ProtoOALightSymbol.Builder> InternalFieldAccessors {
    get { return global::OpenApiModelMessages.internal__static_ProtoOALightSymbol__FieldAccessorTable; }
  }
  
  public const int SymbolIdFieldNumber = 1;
  private bool hasSymbolId;
  private long symbolId_;
  public bool HasSymbolId {
    get { return hasSymbolId; }
  }
  public long SymbolId {
    get { return symbolId_; }
  }
  
  public const int SymbolNameFieldNumber = 2;
  private bool hasSymbolName;
  private string symbolName_ = "";
  public bool HasSymbolName {
    get { return hasSymbolName; }
  }
  public string SymbolName {
    get { return symbolName_; }
  }
  
  public const int EnabledFieldNumber = 3;
  private bool hasEnabled;
  private bool enabled_;
  public bool HasEnabled {
    get { return hasEnabled; }
  }
  public bool Enabled {
    get { return enabled_; }
  }
  
  public const int BaseAssetIdFieldNumber = 4;
  private bool hasBaseAssetId;
  private long baseAssetId_;
  public bool HasBaseAssetId {
    get { return hasBaseAssetId; }
  }
  public long BaseAssetId {
    get { return baseAssetId_; }
  }
  
  public const int QuoteAssetIdFieldNumber = 5;
  private bool hasQuoteAssetId;
  private long quoteAssetId_;
  public bool HasQuoteAssetId {
    get { return hasQuoteAssetId; }
  }
  public long QuoteAssetId {
    get { return quoteAssetId_; }
  }
  
  public const int SymbolCategoryIdFieldNumber = 6;
  private bool hasSymbolCategoryId;
  private long symbolCategoryId_;
  public bool HasSymbolCategoryId {
    get { return hasSymbolCategoryId; }
  }
  public long SymbolCategoryId {
    get { return symbolCategoryId_; }
  }
  
  public const int DescriptionFieldNumber = 7;
  private bool hasDescription;
  private string description_ = "";
  public bool HasDescription {
    get { return hasDescription; }
  }
  public string Description {
    get { return description_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasSymbolId) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _protoOALightSymbolFieldNames;
    if (hasSymbolId) {
      output.WriteInt64(1, field_names[5], SymbolId);
    }
    if (hasSymbolName) {
      output.WriteString(2, field_names[6], SymbolName);
    }
    if (hasEnabled) {
      output.WriteBool(3, field_names[2], Enabled);
    }
    if (hasBaseAssetId) {
      output.WriteInt64(4, field_names[0], BaseAssetId);
    }
    if (hasQuoteAssetId) {
      output.WriteInt64(5, field_names[3], QuoteAssetId);
    }
    if (hasSymbolCategoryId) {
      output.WriteInt64(6, field_names[4], SymbolCategoryId);
    }
    if (hasDescription) {
      output.WriteString(7, field_names[1], Description);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasSymbolId) {
      size += pb::CodedOutputStream.ComputeInt64Size(1, SymbolId);
    }
    if (hasSymbolName) {
      size += pb::CodedOutputStream.ComputeStringSize(2, SymbolName);
    }
    if (hasEnabled) {
      size += pb::CodedOutputStream.ComputeBoolSize(3, Enabled);
    }
    if (hasBaseAssetId) {
      size += pb::CodedOutputStream.ComputeInt64Size(4, BaseAssetId);
    }
    if (hasQuoteAssetId) {
      size += pb::CodedOutputStream.ComputeInt64Size(5, QuoteAssetId);
    }
    if (hasSymbolCategoryId) {
      size += pb::CodedOutputStream.ComputeInt64Size(6, SymbolCategoryId);
    }
    if (hasDescription) {
      size += pb::CodedOutputStream.ComputeStringSize(7, Description);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static ProtoOALightSymbol ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOALightSymbol ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOALightSymbol ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOALightSymbol ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOALightSymbol ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOALightSymbol ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static ProtoOALightSymbol ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static ProtoOALightSymbol ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static ProtoOALightSymbol ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOALightSymbol ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private ProtoOALightSymbol MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(ProtoOALightSymbol prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<ProtoOALightSymbol, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(ProtoOALightSymbol cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private ProtoOALightSymbol result;
    
    private ProtoOALightSymbol PrepareBuilder() {
      if (resultIsReadOnly) {
        ProtoOALightSymbol original = result;
        result = new ProtoOALightSymbol();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override ProtoOALightSymbol MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::ProtoOALightSymbol.Descriptor; }
    }
    
    public override ProtoOALightSymbol DefaultInstanceForType {
      get { return global::ProtoOALightSymbol.DefaultInstance; }
    }
    
    public override ProtoOALightSymbol BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is ProtoOALightSymbol) {
        return MergeFrom((ProtoOALightSymbol) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(ProtoOALightSymbol other) {
      if (other == global::ProtoOALightSymbol.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasSymbolId) {
        SymbolId = other.SymbolId;
      }
      if (other.HasSymbolName) {
        SymbolName = other.SymbolName;
      }
      if (other.HasEnabled) {
        Enabled = other.Enabled;
      }
      if (other.HasBaseAssetId) {
        BaseAssetId = other.BaseAssetId;
      }
      if (other.HasQuoteAssetId) {
        QuoteAssetId = other.QuoteAssetId;
      }
      if (other.HasSymbolCategoryId) {
        SymbolCategoryId = other.SymbolCategoryId;
      }
      if (other.HasDescription) {
        Description = other.Description;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_protoOALightSymbolFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _protoOALightSymbolFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasSymbolId = input.ReadInt64(ref result.symbolId_);
            break;
          }
          case 18: {
            result.hasSymbolName = input.ReadString(ref result.symbolName_);
            break;
          }
          case 24: {
            result.hasEnabled = input.ReadBool(ref result.enabled_);
            break;
          }
          case 32: {
            result.hasBaseAssetId = input.ReadInt64(ref result.baseAssetId_);
            break;
          }
          case 40: {
            result.hasQuoteAssetId = input.ReadInt64(ref result.quoteAssetId_);
            break;
          }
          case 48: {
            result.hasSymbolCategoryId = input.ReadInt64(ref result.symbolCategoryId_);
            break;
          }
          case 58: {
            result.hasDescription = input.ReadString(ref result.description_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasSymbolId {
      get { return result.hasSymbolId; }
    }
    public long SymbolId {
      get { return result.SymbolId; }
      set { SetSymbolId(value); }
    }
    public Builder SetSymbolId(long value) {
      PrepareBuilder();
      result.hasSymbolId = true;
      result.symbolId_ = value;
      return this;
    }
    public Builder ClearSymbolId() {
      PrepareBuilder();
      result.hasSymbolId = false;
      result.symbolId_ = 0L;
      return this;
    }
    
    public bool HasSymbolName {
      get { return result.hasSymbolName; }
    }
    public string SymbolName {
      get { return result.SymbolName; }
      set { SetSymbolName(value); }
    }
    public Builder SetSymbolName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasSymbolName = true;
      result.symbolName_ = value;
      return this;
    }
    public Builder ClearSymbolName() {
      PrepareBuilder();
      result.hasSymbolName = false;
      result.symbolName_ = "";
      return this;
    }
    
    public bool HasEnabled {
      get { return result.hasEnabled; }
    }
    public bool Enabled {
      get { return result.Enabled; }
      set { SetEnabled(value); }
    }
    public Builder SetEnabled(bool value) {
      PrepareBuilder();
      result.hasEnabled = true;
      result.enabled_ = value;
      return this;
    }
    public Builder ClearEnabled() {
      PrepareBuilder();
      result.hasEnabled = false;
      result.enabled_ = false;
      return this;
    }
    
    public bool HasBaseAssetId {
      get { return result.hasBaseAssetId; }
    }
    public long BaseAssetId {
      get { return result.BaseAssetId; }
      set { SetBaseAssetId(value); }
    }
    public Builder SetBaseAssetId(long value) {
      PrepareBuilder();
      result.hasBaseAssetId = true;
      result.baseAssetId_ = value;
      return this;
    }
    public Builder ClearBaseAssetId() {
      PrepareBuilder();
      result.hasBaseAssetId = false;
      result.baseAssetId_ = 0L;
      return this;
    }
    
    public bool HasQuoteAssetId {
      get { return result.hasQuoteAssetId; }
    }
    public long QuoteAssetId {
      get { return result.QuoteAssetId; }
      set { SetQuoteAssetId(value); }
    }
    public Builder SetQuoteAssetId(long value) {
      PrepareBuilder();
      result.hasQuoteAssetId = true;
      result.quoteAssetId_ = value;
      return this;
    }
    public Builder ClearQuoteAssetId() {
      PrepareBuilder();
      result.hasQuoteAssetId = false;
      result.quoteAssetId_ = 0L;
      return this;
    }
    
    public bool HasSymbolCategoryId {
      get { return result.hasSymbolCategoryId; }
    }
    public long SymbolCategoryId {
      get { return result.SymbolCategoryId; }
      set { SetSymbolCategoryId(value); }
    }
    public Builder SetSymbolCategoryId(long value) {
      PrepareBuilder();
      result.hasSymbolCategoryId = true;
      result.symbolCategoryId_ = value;
      return this;
    }
    public Builder ClearSymbolCategoryId() {
      PrepareBuilder();
      result.hasSymbolCategoryId = false;
      result.symbolCategoryId_ = 0L;
      return this;
    }
    
    public bool HasDescription {
      get { return result.hasDescription; }
    }
    public string Description {
      get { return result.Description; }
      set { SetDescription(value); }
    }
    public Builder SetDescription(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasDescription = true;
      result.description_ = value;
      return this;
    }
    public Builder ClearDescription() {
      PrepareBuilder();
      result.hasDescription = false;
      result.description_ = "";
      return this;
    }
  }
  static ProtoOALightSymbol() {
    object.ReferenceEquals(global::OpenApiModelMessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class ProtoOASymbolCategory : pb::GeneratedMessage<ProtoOASymbolCategory, ProtoOASymbolCategory.Builder> {
  private ProtoOASymbolCategory() { }
  private static readonly ProtoOASymbolCategory defaultInstance = new ProtoOASymbolCategory().MakeReadOnly();
  private static readonly string[] _protoOASymbolCategoryFieldNames = new string[] { "assetClassId", "id", "name" };
  private static readonly uint[] _protoOASymbolCategoryFieldTags = new uint[] { 16, 8, 26 };
  public static ProtoOASymbolCategory DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override ProtoOASymbolCategory DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override ProtoOASymbolCategory ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::OpenApiModelMessages.internal__static_ProtoOASymbolCategory__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<ProtoOASymbolCategory, ProtoOASymbolCategory.Builder> InternalFieldAccessors {
    get { return global::OpenApiModelMessages.internal__static_ProtoOASymbolCategory__FieldAccessorTable; }
  }
  
  public const int IdFieldNumber = 1;
  private bool hasId;
  private long id_;
  public bool HasId {
    get { return hasId; }
  }
  public long Id {
    get { return id_; }
  }
  
  public const int AssetClassIdFieldNumber = 2;
  private bool hasAssetClassId;
  private long assetClassId_;
  public bool HasAssetClassId {
    get { return hasAssetClassId; }
  }
  public long AssetClassId {
    get { return assetClassId_; }
  }
  
  public const int NameFieldNumber = 3;
  private bool hasName;
  private string name_ = "";
  public bool HasName {
    get { return hasName; }
  }
  public string Name {
    get { return name_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasId) return false;
      if (!hasAssetClassId) return false;
      if (!hasName) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _protoOASymbolCategoryFieldNames;
    if (hasId) {
      output.WriteInt64(1, field_names[1], Id);
    }
    if (hasAssetClassId) {
      output.WriteInt64(2, field_names[0], AssetClassId);
    }
    if (hasName) {
      output.WriteString(3, field_names[2], Name);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasId) {
      size += pb::CodedOutputStream.ComputeInt64Size(1, Id);
    }
    if (hasAssetClassId) {
      size += pb::CodedOutputStream.ComputeInt64Size(2, AssetClassId);
    }
    if (hasName) {
      size += pb::CodedOutputStream.ComputeStringSize(3, Name);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static ProtoOASymbolCategory ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOASymbolCategory ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOASymbolCategory ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOASymbolCategory ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOASymbolCategory ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOASymbolCategory ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static ProtoOASymbolCategory ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static ProtoOASymbolCategory ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static ProtoOASymbolCategory ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOASymbolCategory ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private ProtoOASymbolCategory MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(ProtoOASymbolCategory prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<ProtoOASymbolCategory, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(ProtoOASymbolCategory cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private ProtoOASymbolCategory result;
    
    private ProtoOASymbolCategory PrepareBuilder() {
      if (resultIsReadOnly) {
        ProtoOASymbolCategory original = result;
        result = new ProtoOASymbolCategory();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override ProtoOASymbolCategory MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::ProtoOASymbolCategory.Descriptor; }
    }
    
    public override ProtoOASymbolCategory DefaultInstanceForType {
      get { return global::ProtoOASymbolCategory.DefaultInstance; }
    }
    
    public override ProtoOASymbolCategory BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is ProtoOASymbolCategory) {
        return MergeFrom((ProtoOASymbolCategory) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(ProtoOASymbolCategory other) {
      if (other == global::ProtoOASymbolCategory.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasAssetClassId) {
        AssetClassId = other.AssetClassId;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_protoOASymbolCategoryFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _protoOASymbolCategoryFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasId = input.ReadInt64(ref result.id_);
            break;
          }
          case 16: {
            result.hasAssetClassId = input.ReadInt64(ref result.assetClassId_);
            break;
          }
          case 26: {
            result.hasName = input.ReadString(ref result.name_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasId {
      get { return result.hasId; }
    }
    public long Id {
      get { return result.Id; }
      set { SetId(value); }
    }
    public Builder SetId(long value) {
      PrepareBuilder();
      result.hasId = true;
      result.id_ = value;
      return this;
    }
    public Builder ClearId() {
      PrepareBuilder();
      result.hasId = false;
      result.id_ = 0L;
      return this;
    }
    
    public bool HasAssetClassId {
      get { return result.hasAssetClassId; }
    }
    public long AssetClassId {
      get { return result.AssetClassId; }
      set { SetAssetClassId(value); }
    }
    public Builder SetAssetClassId(long value) {
      PrepareBuilder();
      result.hasAssetClassId = true;
      result.assetClassId_ = value;
      return this;
    }
    public Builder ClearAssetClassId() {
      PrepareBuilder();
      result.hasAssetClassId = false;
      result.assetClassId_ = 0L;
      return this;
    }
    
    public bool HasName {
      get { return result.hasName; }
    }
    public string Name {
      get { return result.Name; }
      set { SetName(value); }
    }
    public Builder SetName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasName = true;
      result.name_ = value;
      return this;
    }
    public Builder ClearName() {
      PrepareBuilder();
      result.hasName = false;
      result.name_ = "";
      return this;
    }
  }
  static ProtoOASymbolCategory() {
    object.ReferenceEquals(global::OpenApiModelMessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class ProtoOAInterval : pb::GeneratedMessage<ProtoOAInterval, ProtoOAInterval.Builder> {
  private ProtoOAInterval() { }
  private static readonly ProtoOAInterval defaultInstance = new ProtoOAInterval().MakeReadOnly();
  private static readonly string[] _protoOAIntervalFieldNames = new string[] { "endSecond", "startSecond" };
  private static readonly uint[] _protoOAIntervalFieldTags = new uint[] { 32, 24 };
  public static ProtoOAInterval DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override ProtoOAInterval DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override ProtoOAInterval ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::OpenApiModelMessages.internal__static_ProtoOAInterval__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<ProtoOAInterval, ProtoOAInterval.Builder> InternalFieldAccessors {
    get { return global::OpenApiModelMessages.internal__static_ProtoOAInterval__FieldAccessorTable; }
  }
  
  public const int StartSecondFieldNumber = 3;
  private bool hasStartSecond;
  private uint startSecond_;
  public bool HasStartSecond {
    get { return hasStartSecond; }
  }
  [global::System.CLSCompliant(false)]
  public uint StartSecond {
    get { return startSecond_; }
  }
  
  public const int EndSecondFieldNumber = 4;
  private bool hasEndSecond;
  private uint endSecond_;
  public bool HasEndSecond {
    get { return hasEndSecond; }
  }
  [global::System.CLSCompliant(false)]
  public uint EndSecond {
    get { return endSecond_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasStartSecond) return false;
      if (!hasEndSecond) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _protoOAIntervalFieldNames;
    if (hasStartSecond) {
      output.WriteUInt32(3, field_names[1], StartSecond);
    }
    if (hasEndSecond) {
      output.WriteUInt32(4, field_names[0], EndSecond);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasStartSecond) {
      size += pb::CodedOutputStream.ComputeUInt32Size(3, StartSecond);
    }
    if (hasEndSecond) {
      size += pb::CodedOutputStream.ComputeUInt32Size(4, EndSecond);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static ProtoOAInterval ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOAInterval ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOAInterval ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOAInterval ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOAInterval ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOAInterval ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static ProtoOAInterval ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static ProtoOAInterval ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static ProtoOAInterval ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOAInterval ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private ProtoOAInterval MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(ProtoOAInterval prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<ProtoOAInterval, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(ProtoOAInterval cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private ProtoOAInterval result;
    
    private ProtoOAInterval PrepareBuilder() {
      if (resultIsReadOnly) {
        ProtoOAInterval original = result;
        result = new ProtoOAInterval();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override ProtoOAInterval MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::ProtoOAInterval.Descriptor; }
    }
    
    public override ProtoOAInterval DefaultInstanceForType {
      get { return global::ProtoOAInterval.DefaultInstance; }
    }
    
    public override ProtoOAInterval BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is ProtoOAInterval) {
        return MergeFrom((ProtoOAInterval) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(ProtoOAInterval other) {
      if (other == global::ProtoOAInterval.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasStartSecond) {
        StartSecond = other.StartSecond;
      }
      if (other.HasEndSecond) {
        EndSecond = other.EndSecond;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_protoOAIntervalFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _protoOAIntervalFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 24: {
            result.hasStartSecond = input.ReadUInt32(ref result.startSecond_);
            break;
          }
          case 32: {
            result.hasEndSecond = input.ReadUInt32(ref result.endSecond_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasStartSecond {
      get { return result.hasStartSecond; }
    }
    [global::System.CLSCompliant(false)]
    public uint StartSecond {
      get { return result.StartSecond; }
      set { SetStartSecond(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetStartSecond(uint value) {
      PrepareBuilder();
      result.hasStartSecond = true;
      result.startSecond_ = value;
      return this;
    }
    public Builder ClearStartSecond() {
      PrepareBuilder();
      result.hasStartSecond = false;
      result.startSecond_ = 0;
      return this;
    }
    
    public bool HasEndSecond {
      get { return result.hasEndSecond; }
    }
    [global::System.CLSCompliant(false)]
    public uint EndSecond {
      get { return result.EndSecond; }
      set { SetEndSecond(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetEndSecond(uint value) {
      PrepareBuilder();
      result.hasEndSecond = true;
      result.endSecond_ = value;
      return this;
    }
    public Builder ClearEndSecond() {
      PrepareBuilder();
      result.hasEndSecond = false;
      result.endSecond_ = 0;
      return this;
    }
  }
  static ProtoOAInterval() {
    object.ReferenceEquals(global::OpenApiModelMessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class ProtoOATrader : pb::GeneratedMessage<ProtoOATrader, ProtoOATrader.Builder> {
  private ProtoOATrader() { }
  private static readonly ProtoOATrader defaultInstance = new ProtoOATrader().MakeReadOnly();
  private static readonly string[] _protoOATraderFieldNames = new string[] { "accessRights", "accountType", "balance", "balanceVersion", "brokerName", "ctidTraderAccountId", "depositAssetId", "frenchRisk", "ibBonus", "isLimitedRisk", "leverageInCents", "limitedRiskMarginCalculationStrategy", "managerBonus", "maxLeverage", "nonWithdrawableBonus", "registrationTimestamp", "swapFree", "totalMarginCalculationType", "traderLogin" };
  private static readonly uint[] _protoOATraderFieldTags = new uint[] { 56, 120, 16, 24, 130, 8, 64, 104, 40, 144, 80, 152, 32, 96, 48, 136, 72, 88, 112 };
  public static ProtoOATrader DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override ProtoOATrader DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override ProtoOATrader ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::OpenApiModelMessages.internal__static_ProtoOATrader__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<ProtoOATrader, ProtoOATrader.Builder> InternalFieldAccessors {
    get { return global::OpenApiModelMessages.internal__static_ProtoOATrader__FieldAccessorTable; }
  }
  
  public const int CtidTraderAccountIdFieldNumber = 1;
  private bool hasCtidTraderAccountId;
  private long ctidTraderAccountId_;
  public bool HasCtidTraderAccountId {
    get { return hasCtidTraderAccountId; }
  }
  public long CtidTraderAccountId {
    get { return ctidTraderAccountId_; }
  }
  
  public const int BalanceFieldNumber = 2;
  private bool hasBalance;
  private long balance_;
  public bool HasBalance {
    get { return hasBalance; }
  }
  public long Balance {
    get { return balance_; }
  }
  
  public const int BalanceVersionFieldNumber = 3;
  private bool hasBalanceVersion;
  private long balanceVersion_;
  public bool HasBalanceVersion {
    get { return hasBalanceVersion; }
  }
  public long BalanceVersion {
    get { return balanceVersion_; }
  }
  
  public const int ManagerBonusFieldNumber = 4;
  private bool hasManagerBonus;
  private long managerBonus_;
  public bool HasManagerBonus {
    get { return hasManagerBonus; }
  }
  public long ManagerBonus {
    get { return managerBonus_; }
  }
  
  public const int IbBonusFieldNumber = 5;
  private bool hasIbBonus;
  private long ibBonus_;
  public bool HasIbBonus {
    get { return hasIbBonus; }
  }
  public long IbBonus {
    get { return ibBonus_; }
  }
  
  public const int NonWithdrawableBonusFieldNumber = 6;
  private bool hasNonWithdrawableBonus;
  private long nonWithdrawableBonus_;
  public bool HasNonWithdrawableBonus {
    get { return hasNonWithdrawableBonus; }
  }
  public long NonWithdrawableBonus {
    get { return nonWithdrawableBonus_; }
  }
  
  public const int AccessRightsFieldNumber = 7;
  private bool hasAccessRights;
  private global::ProtoOAAccessRights accessRights_ = global::ProtoOAAccessRights.FULL_ACCESS;
  public bool HasAccessRights {
    get { return hasAccessRights; }
  }
  public global::ProtoOAAccessRights AccessRights {
    get { return accessRights_; }
  }
  
  public const int DepositAssetIdFieldNumber = 8;
  private bool hasDepositAssetId;
  private long depositAssetId_;
  public bool HasDepositAssetId {
    get { return hasDepositAssetId; }
  }
  public long DepositAssetId {
    get { return depositAssetId_; }
  }
  
  public const int SwapFreeFieldNumber = 9;
  private bool hasSwapFree;
  private bool swapFree_;
  public bool HasSwapFree {
    get { return hasSwapFree; }
  }
  public bool SwapFree {
    get { return swapFree_; }
  }
  
  public const int LeverageInCentsFieldNumber = 10;
  private bool hasLeverageInCents;
  private uint leverageInCents_;
  public bool HasLeverageInCents {
    get { return hasLeverageInCents; }
  }
  [global::System.CLSCompliant(false)]
  public uint LeverageInCents {
    get { return leverageInCents_; }
  }
  
  public const int TotalMarginCalculationTypeFieldNumber = 11;
  private bool hasTotalMarginCalculationType;
  private global::ProtoOATotalMarginCalculationType totalMarginCalculationType_ = global::ProtoOATotalMarginCalculationType.MAX;
  public bool HasTotalMarginCalculationType {
    get { return hasTotalMarginCalculationType; }
  }
  public global::ProtoOATotalMarginCalculationType TotalMarginCalculationType {
    get { return totalMarginCalculationType_; }
  }
  
  public const int MaxLeverageFieldNumber = 12;
  private bool hasMaxLeverage;
  private uint maxLeverage_;
  public bool HasMaxLeverage {
    get { return hasMaxLeverage; }
  }
  [global::System.CLSCompliant(false)]
  public uint MaxLeverage {
    get { return maxLeverage_; }
  }
  
  public const int FrenchRiskFieldNumber = 13;
  private bool hasFrenchRisk;
  private bool frenchRisk_;
  [global::System.ObsoleteAttribute()]
  public bool HasFrenchRisk {
    get { return hasFrenchRisk; }
  }
  [global::System.ObsoleteAttribute()]
  public bool FrenchRisk {
    get { return frenchRisk_; }
  }
  
  public const int TraderLoginFieldNumber = 14;
  private bool hasTraderLogin;
  private long traderLogin_;
  public bool HasTraderLogin {
    get { return hasTraderLogin; }
  }
  public long TraderLogin {
    get { return traderLogin_; }
  }
  
  public const int AccountTypeFieldNumber = 15;
  private bool hasAccountType;
  private global::ProtoOAAccountType accountType_ = global::ProtoOAAccountType.HEDGED;
  public bool HasAccountType {
    get { return hasAccountType; }
  }
  public global::ProtoOAAccountType AccountType {
    get { return accountType_; }
  }
  
  public const int BrokerNameFieldNumber = 16;
  private bool hasBrokerName;
  private string brokerName_ = "";
  public bool HasBrokerName {
    get { return hasBrokerName; }
  }
  public string BrokerName {
    get { return brokerName_; }
  }
  
  public const int RegistrationTimestampFieldNumber = 17;
  private bool hasRegistrationTimestamp;
  private long registrationTimestamp_;
  public bool HasRegistrationTimestamp {
    get { return hasRegistrationTimestamp; }
  }
  public long RegistrationTimestamp {
    get { return registrationTimestamp_; }
  }
  
  public const int IsLimitedRiskFieldNumber = 18;
  private bool hasIsLimitedRisk;
  private bool isLimitedRisk_;
  public bool HasIsLimitedRisk {
    get { return hasIsLimitedRisk; }
  }
  public bool IsLimitedRisk {
    get { return isLimitedRisk_; }
  }
  
  public const int LimitedRiskMarginCalculationStrategyFieldNumber = 19;
  private bool hasLimitedRiskMarginCalculationStrategy;
  private global::ProtoOALimitedRiskMarginCalculationStrategy limitedRiskMarginCalculationStrategy_ = global::ProtoOALimitedRiskMarginCalculationStrategy.ACCORDING_TO_LEVERAGE;
  public bool HasLimitedRiskMarginCalculationStrategy {
    get { return hasLimitedRiskMarginCalculationStrategy; }
  }
  public global::ProtoOALimitedRiskMarginCalculationStrategy LimitedRiskMarginCalculationStrategy {
    get { return limitedRiskMarginCalculationStrategy_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasCtidTraderAccountId) return false;
      if (!hasBalance) return false;
      if (!hasDepositAssetId) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _protoOATraderFieldNames;
    if (hasCtidTraderAccountId) {
      output.WriteInt64(1, field_names[5], CtidTraderAccountId);
    }
    if (hasBalance) {
      output.WriteInt64(2, field_names[2], Balance);
    }
    if (hasBalanceVersion) {
      output.WriteInt64(3, field_names[3], BalanceVersion);
    }
    if (hasManagerBonus) {
      output.WriteInt64(4, field_names[12], ManagerBonus);
    }
    if (hasIbBonus) {
      output.WriteInt64(5, field_names[8], IbBonus);
    }
    if (hasNonWithdrawableBonus) {
      output.WriteInt64(6, field_names[14], NonWithdrawableBonus);
    }
    if (hasAccessRights) {
      output.WriteEnum(7, field_names[0], (int) AccessRights, AccessRights);
    }
    if (hasDepositAssetId) {
      output.WriteInt64(8, field_names[6], DepositAssetId);
    }
    if (hasSwapFree) {
      output.WriteBool(9, field_names[16], SwapFree);
    }
    if (hasLeverageInCents) {
      output.WriteUInt32(10, field_names[10], LeverageInCents);
    }
    if (hasTotalMarginCalculationType) {
      output.WriteEnum(11, field_names[17], (int) TotalMarginCalculationType, TotalMarginCalculationType);
    }
    if (hasMaxLeverage) {
      output.WriteUInt32(12, field_names[13], MaxLeverage);
    }
    if (hasFrenchRisk) {
      output.WriteBool(13, field_names[7], FrenchRisk);
    }
    if (hasTraderLogin) {
      output.WriteInt64(14, field_names[18], TraderLogin);
    }
    if (hasAccountType) {
      output.WriteEnum(15, field_names[1], (int) AccountType, AccountType);
    }
    if (hasBrokerName) {
      output.WriteString(16, field_names[4], BrokerName);
    }
    if (hasRegistrationTimestamp) {
      output.WriteInt64(17, field_names[15], RegistrationTimestamp);
    }
    if (hasIsLimitedRisk) {
      output.WriteBool(18, field_names[9], IsLimitedRisk);
    }
    if (hasLimitedRiskMarginCalculationStrategy) {
      output.WriteEnum(19, field_names[11], (int) LimitedRiskMarginCalculationStrategy, LimitedRiskMarginCalculationStrategy);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasCtidTraderAccountId) {
      size += pb::CodedOutputStream.ComputeInt64Size(1, CtidTraderAccountId);
    }
    if (hasBalance) {
      size += pb::CodedOutputStream.ComputeInt64Size(2, Balance);
    }
    if (hasBalanceVersion) {
      size += pb::CodedOutputStream.ComputeInt64Size(3, BalanceVersion);
    }
    if (hasManagerBonus) {
      size += pb::CodedOutputStream.ComputeInt64Size(4, ManagerBonus);
    }
    if (hasIbBonus) {
      size += pb::CodedOutputStream.ComputeInt64Size(5, IbBonus);
    }
    if (hasNonWithdrawableBonus) {
      size += pb::CodedOutputStream.ComputeInt64Size(6, NonWithdrawableBonus);
    }
    if (hasAccessRights) {
      size += pb::CodedOutputStream.ComputeEnumSize(7, (int) AccessRights);
    }
    if (hasDepositAssetId) {
      size += pb::CodedOutputStream.ComputeInt64Size(8, DepositAssetId);
    }
    if (hasSwapFree) {
      size += pb::CodedOutputStream.ComputeBoolSize(9, SwapFree);
    }
    if (hasLeverageInCents) {
      size += pb::CodedOutputStream.ComputeUInt32Size(10, LeverageInCents);
    }
    if (hasTotalMarginCalculationType) {
      size += pb::CodedOutputStream.ComputeEnumSize(11, (int) TotalMarginCalculationType);
    }
    if (hasMaxLeverage) {
      size += pb::CodedOutputStream.ComputeUInt32Size(12, MaxLeverage);
    }
    if (hasFrenchRisk) {
      size += pb::CodedOutputStream.ComputeBoolSize(13, FrenchRisk);
    }
    if (hasTraderLogin) {
      size += pb::CodedOutputStream.ComputeInt64Size(14, TraderLogin);
    }
    if (hasAccountType) {
      size += pb::CodedOutputStream.ComputeEnumSize(15, (int) AccountType);
    }
    if (hasBrokerName) {
      size += pb::CodedOutputStream.ComputeStringSize(16, BrokerName);
    }
    if (hasRegistrationTimestamp) {
      size += pb::CodedOutputStream.ComputeInt64Size(17, RegistrationTimestamp);
    }
    if (hasIsLimitedRisk) {
      size += pb::CodedOutputStream.ComputeBoolSize(18, IsLimitedRisk);
    }
    if (hasLimitedRiskMarginCalculationStrategy) {
      size += pb::CodedOutputStream.ComputeEnumSize(19, (int) LimitedRiskMarginCalculationStrategy);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static ProtoOATrader ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOATrader ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOATrader ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOATrader ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOATrader ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOATrader ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static ProtoOATrader ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static ProtoOATrader ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static ProtoOATrader ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOATrader ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private ProtoOATrader MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(ProtoOATrader prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<ProtoOATrader, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(ProtoOATrader cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private ProtoOATrader result;
    
    private ProtoOATrader PrepareBuilder() {
      if (resultIsReadOnly) {
        ProtoOATrader original = result;
        result = new ProtoOATrader();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override ProtoOATrader MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::ProtoOATrader.Descriptor; }
    }
    
    public override ProtoOATrader DefaultInstanceForType {
      get { return global::ProtoOATrader.DefaultInstance; }
    }
    
    public override ProtoOATrader BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is ProtoOATrader) {
        return MergeFrom((ProtoOATrader) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(ProtoOATrader other) {
      if (other == global::ProtoOATrader.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      if (other.HasBalance) {
        Balance = other.Balance;
      }
      if (other.HasBalanceVersion) {
        BalanceVersion = other.BalanceVersion;
      }
      if (other.HasManagerBonus) {
        ManagerBonus = other.ManagerBonus;
      }
      if (other.HasIbBonus) {
        IbBonus = other.IbBonus;
      }
      if (other.HasNonWithdrawableBonus) {
        NonWithdrawableBonus = other.NonWithdrawableBonus;
      }
      if (other.HasAccessRights) {
        AccessRights = other.AccessRights;
      }
      if (other.HasDepositAssetId) {
        DepositAssetId = other.DepositAssetId;
      }
      if (other.HasSwapFree) {
        SwapFree = other.SwapFree;
      }
      if (other.HasLeverageInCents) {
        LeverageInCents = other.LeverageInCents;
      }
      if (other.HasTotalMarginCalculationType) {
        TotalMarginCalculationType = other.TotalMarginCalculationType;
      }
      if (other.HasMaxLeverage) {
        MaxLeverage = other.MaxLeverage;
      }
      if (other.HasFrenchRisk) {
        FrenchRisk = other.FrenchRisk;
      }
      if (other.HasTraderLogin) {
        TraderLogin = other.TraderLogin;
      }
      if (other.HasAccountType) {
        AccountType = other.AccountType;
      }
      if (other.HasBrokerName) {
        BrokerName = other.BrokerName;
      }
      if (other.HasRegistrationTimestamp) {
        RegistrationTimestamp = other.RegistrationTimestamp;
      }
      if (other.HasIsLimitedRisk) {
        IsLimitedRisk = other.IsLimitedRisk;
      }
      if (other.HasLimitedRiskMarginCalculationStrategy) {
        LimitedRiskMarginCalculationStrategy = other.LimitedRiskMarginCalculationStrategy;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_protoOATraderFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _protoOATraderFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasCtidTraderAccountId = input.ReadInt64(ref result.ctidTraderAccountId_);
            break;
          }
          case 16: {
            result.hasBalance = input.ReadInt64(ref result.balance_);
            break;
          }
          case 24: {
            result.hasBalanceVersion = input.ReadInt64(ref result.balanceVersion_);
            break;
          }
          case 32: {
            result.hasManagerBonus = input.ReadInt64(ref result.managerBonus_);
            break;
          }
          case 40: {
            result.hasIbBonus = input.ReadInt64(ref result.ibBonus_);
            break;
          }
          case 48: {
            result.hasNonWithdrawableBonus = input.ReadInt64(ref result.nonWithdrawableBonus_);
            break;
          }
          case 56: {
            object unknown;
            if(input.ReadEnum(ref result.accessRights_, out unknown)) {
              result.hasAccessRights = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(7, (ulong)(int)unknown);
            }
            break;
          }
          case 64: {
            result.hasDepositAssetId = input.ReadInt64(ref result.depositAssetId_);
            break;
          }
          case 72: {
            result.hasSwapFree = input.ReadBool(ref result.swapFree_);
            break;
          }
          case 80: {
            result.hasLeverageInCents = input.ReadUInt32(ref result.leverageInCents_);
            break;
          }
          case 88: {
            object unknown;
            if(input.ReadEnum(ref result.totalMarginCalculationType_, out unknown)) {
              result.hasTotalMarginCalculationType = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(11, (ulong)(int)unknown);
            }
            break;
          }
          case 96: {
            result.hasMaxLeverage = input.ReadUInt32(ref result.maxLeverage_);
            break;
          }
          case 104: {
            result.hasFrenchRisk = input.ReadBool(ref result.frenchRisk_);
            break;
          }
          case 112: {
            result.hasTraderLogin = input.ReadInt64(ref result.traderLogin_);
            break;
          }
          case 120: {
            object unknown;
            if(input.ReadEnum(ref result.accountType_, out unknown)) {
              result.hasAccountType = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(15, (ulong)(int)unknown);
            }
            break;
          }
          case 130: {
            result.hasBrokerName = input.ReadString(ref result.brokerName_);
            break;
          }
          case 136: {
            result.hasRegistrationTimestamp = input.ReadInt64(ref result.registrationTimestamp_);
            break;
          }
          case 144: {
            result.hasIsLimitedRisk = input.ReadBool(ref result.isLimitedRisk_);
            break;
          }
          case 152: {
            object unknown;
            if(input.ReadEnum(ref result.limitedRiskMarginCalculationStrategy_, out unknown)) {
              result.hasLimitedRiskMarginCalculationStrategy = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(19, (ulong)(int)unknown);
            }
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasCtidTraderAccountId {
      get { return result.hasCtidTraderAccountId; }
    }
    public long CtidTraderAccountId {
      get { return result.CtidTraderAccountId; }
      set { SetCtidTraderAccountId(value); }
    }
    public Builder SetCtidTraderAccountId(long value) {
      PrepareBuilder();
      result.hasCtidTraderAccountId = true;
      result.ctidTraderAccountId_ = value;
      return this;
    }
    public Builder ClearCtidTraderAccountId() {
      PrepareBuilder();
      result.hasCtidTraderAccountId = false;
      result.ctidTraderAccountId_ = 0L;
      return this;
    }
    
    public bool HasBalance {
      get { return result.hasBalance; }
    }
    public long Balance {
      get { return result.Balance; }
      set { SetBalance(value); }
    }
    public Builder SetBalance(long value) {
      PrepareBuilder();
      result.hasBalance = true;
      result.balance_ = value;
      return this;
    }
    public Builder ClearBalance() {
      PrepareBuilder();
      result.hasBalance = false;
      result.balance_ = 0L;
      return this;
    }
    
    public bool HasBalanceVersion {
      get { return result.hasBalanceVersion; }
    }
    public long BalanceVersion {
      get { return result.BalanceVersion; }
      set { SetBalanceVersion(value); }
    }
    public Builder SetBalanceVersion(long value) {
      PrepareBuilder();
      result.hasBalanceVersion = true;
      result.balanceVersion_ = value;
      return this;
    }
    public Builder ClearBalanceVersion() {
      PrepareBuilder();
      result.hasBalanceVersion = false;
      result.balanceVersion_ = 0L;
      return this;
    }
    
    public bool HasManagerBonus {
      get { return result.hasManagerBonus; }
    }
    public long ManagerBonus {
      get { return result.ManagerBonus; }
      set { SetManagerBonus(value); }
    }
    public Builder SetManagerBonus(long value) {
      PrepareBuilder();
      result.hasManagerBonus = true;
      result.managerBonus_ = value;
      return this;
    }
    public Builder ClearManagerBonus() {
      PrepareBuilder();
      result.hasManagerBonus = false;
      result.managerBonus_ = 0L;
      return this;
    }
    
    public bool HasIbBonus {
      get { return result.hasIbBonus; }
    }
    public long IbBonus {
      get { return result.IbBonus; }
      set { SetIbBonus(value); }
    }
    public Builder SetIbBonus(long value) {
      PrepareBuilder();
      result.hasIbBonus = true;
      result.ibBonus_ = value;
      return this;
    }
    public Builder ClearIbBonus() {
      PrepareBuilder();
      result.hasIbBonus = false;
      result.ibBonus_ = 0L;
      return this;
    }
    
    public bool HasNonWithdrawableBonus {
      get { return result.hasNonWithdrawableBonus; }
    }
    public long NonWithdrawableBonus {
      get { return result.NonWithdrawableBonus; }
      set { SetNonWithdrawableBonus(value); }
    }
    public Builder SetNonWithdrawableBonus(long value) {
      PrepareBuilder();
      result.hasNonWithdrawableBonus = true;
      result.nonWithdrawableBonus_ = value;
      return this;
    }
    public Builder ClearNonWithdrawableBonus() {
      PrepareBuilder();
      result.hasNonWithdrawableBonus = false;
      result.nonWithdrawableBonus_ = 0L;
      return this;
    }
    
    public bool HasAccessRights {
     get { return result.hasAccessRights; }
    }
    public global::ProtoOAAccessRights AccessRights {
      get { return result.AccessRights; }
      set { SetAccessRights(value); }
    }
    public Builder SetAccessRights(global::ProtoOAAccessRights value) {
      PrepareBuilder();
      result.hasAccessRights = true;
      result.accessRights_ = value;
      return this;
    }
    public Builder ClearAccessRights() {
      PrepareBuilder();
      result.hasAccessRights = false;
      result.accessRights_ = global::ProtoOAAccessRights.FULL_ACCESS;
      return this;
    }
    
    public bool HasDepositAssetId {
      get { return result.hasDepositAssetId; }
    }
    public long DepositAssetId {
      get { return result.DepositAssetId; }
      set { SetDepositAssetId(value); }
    }
    public Builder SetDepositAssetId(long value) {
      PrepareBuilder();
      result.hasDepositAssetId = true;
      result.depositAssetId_ = value;
      return this;
    }
    public Builder ClearDepositAssetId() {
      PrepareBuilder();
      result.hasDepositAssetId = false;
      result.depositAssetId_ = 0L;
      return this;
    }
    
    public bool HasSwapFree {
      get { return result.hasSwapFree; }
    }
    public bool SwapFree {
      get { return result.SwapFree; }
      set { SetSwapFree(value); }
    }
    public Builder SetSwapFree(bool value) {
      PrepareBuilder();
      result.hasSwapFree = true;
      result.swapFree_ = value;
      return this;
    }
    public Builder ClearSwapFree() {
      PrepareBuilder();
      result.hasSwapFree = false;
      result.swapFree_ = false;
      return this;
    }
    
    public bool HasLeverageInCents {
      get { return result.hasLeverageInCents; }
    }
    [global::System.CLSCompliant(false)]
    public uint LeverageInCents {
      get { return result.LeverageInCents; }
      set { SetLeverageInCents(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetLeverageInCents(uint value) {
      PrepareBuilder();
      result.hasLeverageInCents = true;
      result.leverageInCents_ = value;
      return this;
    }
    public Builder ClearLeverageInCents() {
      PrepareBuilder();
      result.hasLeverageInCents = false;
      result.leverageInCents_ = 0;
      return this;
    }
    
    public bool HasTotalMarginCalculationType {
     get { return result.hasTotalMarginCalculationType; }
    }
    public global::ProtoOATotalMarginCalculationType TotalMarginCalculationType {
      get { return result.TotalMarginCalculationType; }
      set { SetTotalMarginCalculationType(value); }
    }
    public Builder SetTotalMarginCalculationType(global::ProtoOATotalMarginCalculationType value) {
      PrepareBuilder();
      result.hasTotalMarginCalculationType = true;
      result.totalMarginCalculationType_ = value;
      return this;
    }
    public Builder ClearTotalMarginCalculationType() {
      PrepareBuilder();
      result.hasTotalMarginCalculationType = false;
      result.totalMarginCalculationType_ = global::ProtoOATotalMarginCalculationType.MAX;
      return this;
    }
    
    public bool HasMaxLeverage {
      get { return result.hasMaxLeverage; }
    }
    [global::System.CLSCompliant(false)]
    public uint MaxLeverage {
      get { return result.MaxLeverage; }
      set { SetMaxLeverage(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetMaxLeverage(uint value) {
      PrepareBuilder();
      result.hasMaxLeverage = true;
      result.maxLeverage_ = value;
      return this;
    }
    public Builder ClearMaxLeverage() {
      PrepareBuilder();
      result.hasMaxLeverage = false;
      result.maxLeverage_ = 0;
      return this;
    }
    
    [global::System.ObsoleteAttribute()]
    public bool HasFrenchRisk {
      get { return result.hasFrenchRisk; }
    }
    [global::System.ObsoleteAttribute()]
    public bool FrenchRisk {
      get { return result.FrenchRisk; }
      set { SetFrenchRisk(value); }
    }
    [global::System.ObsoleteAttribute()]
    public Builder SetFrenchRisk(bool value) {
      PrepareBuilder();
      result.hasFrenchRisk = true;
      result.frenchRisk_ = value;
      return this;
    }
    [global::System.ObsoleteAttribute()]
    public Builder ClearFrenchRisk() {
      PrepareBuilder();
      result.hasFrenchRisk = false;
      result.frenchRisk_ = false;
      return this;
    }
    
    public bool HasTraderLogin {
      get { return result.hasTraderLogin; }
    }
    public long TraderLogin {
      get { return result.TraderLogin; }
      set { SetTraderLogin(value); }
    }
    public Builder SetTraderLogin(long value) {
      PrepareBuilder();
      result.hasTraderLogin = true;
      result.traderLogin_ = value;
      return this;
    }
    public Builder ClearTraderLogin() {
      PrepareBuilder();
      result.hasTraderLogin = false;
      result.traderLogin_ = 0L;
      return this;
    }
    
    public bool HasAccountType {
     get { return result.hasAccountType; }
    }
    public global::ProtoOAAccountType AccountType {
      get { return result.AccountType; }
      set { SetAccountType(value); }
    }
    public Builder SetAccountType(global::ProtoOAAccountType value) {
      PrepareBuilder();
      result.hasAccountType = true;
      result.accountType_ = value;
      return this;
    }
    public Builder ClearAccountType() {
      PrepareBuilder();
      result.hasAccountType = false;
      result.accountType_ = global::ProtoOAAccountType.HEDGED;
      return this;
    }
    
    public bool HasBrokerName {
      get { return result.hasBrokerName; }
    }
    public string BrokerName {
      get { return result.BrokerName; }
      set { SetBrokerName(value); }
    }
    public Builder SetBrokerName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasBrokerName = true;
      result.brokerName_ = value;
      return this;
    }
    public Builder ClearBrokerName() {
      PrepareBuilder();
      result.hasBrokerName = false;
      result.brokerName_ = "";
      return this;
    }
    
    public bool HasRegistrationTimestamp {
      get { return result.hasRegistrationTimestamp; }
    }
    public long RegistrationTimestamp {
      get { return result.RegistrationTimestamp; }
      set { SetRegistrationTimestamp(value); }
    }
    public Builder SetRegistrationTimestamp(long value) {
      PrepareBuilder();
      result.hasRegistrationTimestamp = true;
      result.registrationTimestamp_ = value;
      return this;
    }
    public Builder ClearRegistrationTimestamp() {
      PrepareBuilder();
      result.hasRegistrationTimestamp = false;
      result.registrationTimestamp_ = 0L;
      return this;
    }
    
    public bool HasIsLimitedRisk {
      get { return result.hasIsLimitedRisk; }
    }
    public bool IsLimitedRisk {
      get { return result.IsLimitedRisk; }
      set { SetIsLimitedRisk(value); }
    }
    public Builder SetIsLimitedRisk(bool value) {
      PrepareBuilder();
      result.hasIsLimitedRisk = true;
      result.isLimitedRisk_ = value;
      return this;
    }
    public Builder ClearIsLimitedRisk() {
      PrepareBuilder();
      result.hasIsLimitedRisk = false;
      result.isLimitedRisk_ = false;
      return this;
    }
    
    public bool HasLimitedRiskMarginCalculationStrategy {
     get { return result.hasLimitedRiskMarginCalculationStrategy; }
    }
    public global::ProtoOALimitedRiskMarginCalculationStrategy LimitedRiskMarginCalculationStrategy {
      get { return result.LimitedRiskMarginCalculationStrategy; }
      set { SetLimitedRiskMarginCalculationStrategy(value); }
    }
    public Builder SetLimitedRiskMarginCalculationStrategy(global::ProtoOALimitedRiskMarginCalculationStrategy value) {
      PrepareBuilder();
      result.hasLimitedRiskMarginCalculationStrategy = true;
      result.limitedRiskMarginCalculationStrategy_ = value;
      return this;
    }
    public Builder ClearLimitedRiskMarginCalculationStrategy() {
      PrepareBuilder();
      result.hasLimitedRiskMarginCalculationStrategy = false;
      result.limitedRiskMarginCalculationStrategy_ = global::ProtoOALimitedRiskMarginCalculationStrategy.ACCORDING_TO_LEVERAGE;
      return this;
    }
  }
  static ProtoOATrader() {
    object.ReferenceEquals(global::OpenApiModelMessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class ProtoOAPosition : pb::GeneratedMessage<ProtoOAPosition, ProtoOAPosition.Builder> {
  private ProtoOAPosition() { }
  private static readonly ProtoOAPosition defaultInstance = new ProtoOAPosition().MakeReadOnly();
  private static readonly string[] _protoOAPositionFieldNames = new string[] { "commission", "guaranteedStopLoss", "marginRate", "mirroringCommission", "positionId", "positionStatus", "price", "stopLoss", "stopLossTriggerMethod", "swap", "takeProfit", "tradeData", "usedMargin", "utcLastUpdateTimestamp" };
  private static readonly uint[] _protoOAPositionFieldTags = new uint[] { 72, 96, 81, 88, 8, 24, 41, 49, 112, 32, 57, 18, 104, 64 };
  public static ProtoOAPosition DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override ProtoOAPosition DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override ProtoOAPosition ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::OpenApiModelMessages.internal__static_ProtoOAPosition__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<ProtoOAPosition, ProtoOAPosition.Builder> InternalFieldAccessors {
    get { return global::OpenApiModelMessages.internal__static_ProtoOAPosition__FieldAccessorTable; }
  }
  
  public const int PositionIdFieldNumber = 1;
  private bool hasPositionId;
  private long positionId_;
  public bool HasPositionId {
    get { return hasPositionId; }
  }
  public long PositionId {
    get { return positionId_; }
  }
  
  public const int TradeDataFieldNumber = 2;
  private bool hasTradeData;
  private global::ProtoOATradeData tradeData_;
  public bool HasTradeData {
    get { return hasTradeData; }
  }
  public global::ProtoOATradeData TradeData {
    get { return tradeData_ ?? global::ProtoOATradeData.DefaultInstance; }
  }
  
  public const int PositionStatusFieldNumber = 3;
  private bool hasPositionStatus;
  private global::ProtoOAPositionStatus positionStatus_ = global::ProtoOAPositionStatus.POSITION_STATUS_OPEN;
  public bool HasPositionStatus {
    get { return hasPositionStatus; }
  }
  public global::ProtoOAPositionStatus PositionStatus {
    get { return positionStatus_; }
  }
  
  public const int SwapFieldNumber = 4;
  private bool hasSwap;
  private long swap_;
  public bool HasSwap {
    get { return hasSwap; }
  }
  public long Swap {
    get { return swap_; }
  }
  
  public const int PriceFieldNumber = 5;
  private bool hasPrice;
  private double price_;
  public bool HasPrice {
    get { return hasPrice; }
  }
  public double Price {
    get { return price_; }
  }
  
  public const int StopLossFieldNumber = 6;
  private bool hasStopLoss;
  private double stopLoss_;
  public bool HasStopLoss {
    get { return hasStopLoss; }
  }
  public double StopLoss {
    get { return stopLoss_; }
  }
  
  public const int TakeProfitFieldNumber = 7;
  private bool hasTakeProfit;
  private double takeProfit_;
  public bool HasTakeProfit {
    get { return hasTakeProfit; }
  }
  public double TakeProfit {
    get { return takeProfit_; }
  }
  
  public const int UtcLastUpdateTimestampFieldNumber = 8;
  private bool hasUtcLastUpdateTimestamp;
  private long utcLastUpdateTimestamp_;
  public bool HasUtcLastUpdateTimestamp {
    get { return hasUtcLastUpdateTimestamp; }
  }
  public long UtcLastUpdateTimestamp {
    get { return utcLastUpdateTimestamp_; }
  }
  
  public const int CommissionFieldNumber = 9;
  private bool hasCommission;
  private long commission_;
  public bool HasCommission {
    get { return hasCommission; }
  }
  public long Commission {
    get { return commission_; }
  }
  
  public const int MarginRateFieldNumber = 10;
  private bool hasMarginRate;
  private double marginRate_;
  public bool HasMarginRate {
    get { return hasMarginRate; }
  }
  public double MarginRate {
    get { return marginRate_; }
  }
  
  public const int MirroringCommissionFieldNumber = 11;
  private bool hasMirroringCommission;
  private long mirroringCommission_;
  public bool HasMirroringCommission {
    get { return hasMirroringCommission; }
  }
  public long MirroringCommission {
    get { return mirroringCommission_; }
  }
  
  public const int GuaranteedStopLossFieldNumber = 12;
  private bool hasGuaranteedStopLoss;
  private bool guaranteedStopLoss_;
  public bool HasGuaranteedStopLoss {
    get { return hasGuaranteedStopLoss; }
  }
  public bool GuaranteedStopLoss {
    get { return guaranteedStopLoss_; }
  }
  
  public const int UsedMarginFieldNumber = 13;
  private bool hasUsedMargin;
  private ulong usedMargin_;
  public bool HasUsedMargin {
    get { return hasUsedMargin; }
  }
  [global::System.CLSCompliant(false)]
  public ulong UsedMargin {
    get { return usedMargin_; }
  }
  
  public const int StopLossTriggerMethodFieldNumber = 14;
  private bool hasStopLossTriggerMethod;
  private global::ProtoOAOrderTriggerMethod stopLossTriggerMethod_ = global::ProtoOAOrderTriggerMethod.TRADE;
  public bool HasStopLossTriggerMethod {
    get { return hasStopLossTriggerMethod; }
  }
  public global::ProtoOAOrderTriggerMethod StopLossTriggerMethod {
    get { return stopLossTriggerMethod_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasPositionId) return false;
      if (!hasTradeData) return false;
      if (!hasPositionStatus) return false;
      if (!hasSwap) return false;
      if (!TradeData.IsInitialized) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _protoOAPositionFieldNames;
    if (hasPositionId) {
      output.WriteInt64(1, field_names[4], PositionId);
    }
    if (hasTradeData) {
      output.WriteMessage(2, field_names[11], TradeData);
    }
    if (hasPositionStatus) {
      output.WriteEnum(3, field_names[5], (int) PositionStatus, PositionStatus);
    }
    if (hasSwap) {
      output.WriteInt64(4, field_names[9], Swap);
    }
    if (hasPrice) {
      output.WriteDouble(5, field_names[6], Price);
    }
    if (hasStopLoss) {
      output.WriteDouble(6, field_names[7], StopLoss);
    }
    if (hasTakeProfit) {
      output.WriteDouble(7, field_names[10], TakeProfit);
    }
    if (hasUtcLastUpdateTimestamp) {
      output.WriteInt64(8, field_names[13], UtcLastUpdateTimestamp);
    }
    if (hasCommission) {
      output.WriteInt64(9, field_names[0], Commission);
    }
    if (hasMarginRate) {
      output.WriteDouble(10, field_names[2], MarginRate);
    }
    if (hasMirroringCommission) {
      output.WriteInt64(11, field_names[3], MirroringCommission);
    }
    if (hasGuaranteedStopLoss) {
      output.WriteBool(12, field_names[1], GuaranteedStopLoss);
    }
    if (hasUsedMargin) {
      output.WriteUInt64(13, field_names[12], UsedMargin);
    }
    if (hasStopLossTriggerMethod) {
      output.WriteEnum(14, field_names[8], (int) StopLossTriggerMethod, StopLossTriggerMethod);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasPositionId) {
      size += pb::CodedOutputStream.ComputeInt64Size(1, PositionId);
    }
    if (hasTradeData) {
      size += pb::CodedOutputStream.ComputeMessageSize(2, TradeData);
    }
    if (hasPositionStatus) {
      size += pb::CodedOutputStream.ComputeEnumSize(3, (int) PositionStatus);
    }
    if (hasSwap) {
      size += pb::CodedOutputStream.ComputeInt64Size(4, Swap);
    }
    if (hasPrice) {
      size += pb::CodedOutputStream.ComputeDoubleSize(5, Price);
    }
    if (hasStopLoss) {
      size += pb::CodedOutputStream.ComputeDoubleSize(6, StopLoss);
    }
    if (hasTakeProfit) {
      size += pb::CodedOutputStream.ComputeDoubleSize(7, TakeProfit);
    }
    if (hasUtcLastUpdateTimestamp) {
      size += pb::CodedOutputStream.ComputeInt64Size(8, UtcLastUpdateTimestamp);
    }
    if (hasCommission) {
      size += pb::CodedOutputStream.ComputeInt64Size(9, Commission);
    }
    if (hasMarginRate) {
      size += pb::CodedOutputStream.ComputeDoubleSize(10, MarginRate);
    }
    if (hasMirroringCommission) {
      size += pb::CodedOutputStream.ComputeInt64Size(11, MirroringCommission);
    }
    if (hasGuaranteedStopLoss) {
      size += pb::CodedOutputStream.ComputeBoolSize(12, GuaranteedStopLoss);
    }
    if (hasUsedMargin) {
      size += pb::CodedOutputStream.ComputeUInt64Size(13, UsedMargin);
    }
    if (hasStopLossTriggerMethod) {
      size += pb::CodedOutputStream.ComputeEnumSize(14, (int) StopLossTriggerMethod);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static ProtoOAPosition ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOAPosition ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOAPosition ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOAPosition ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOAPosition ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOAPosition ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static ProtoOAPosition ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static ProtoOAPosition ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static ProtoOAPosition ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOAPosition ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private ProtoOAPosition MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(ProtoOAPosition prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<ProtoOAPosition, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(ProtoOAPosition cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private ProtoOAPosition result;
    
    private ProtoOAPosition PrepareBuilder() {
      if (resultIsReadOnly) {
        ProtoOAPosition original = result;
        result = new ProtoOAPosition();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override ProtoOAPosition MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::ProtoOAPosition.Descriptor; }
    }
    
    public override ProtoOAPosition DefaultInstanceForType {
      get { return global::ProtoOAPosition.DefaultInstance; }
    }
    
    public override ProtoOAPosition BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is ProtoOAPosition) {
        return MergeFrom((ProtoOAPosition) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(ProtoOAPosition other) {
      if (other == global::ProtoOAPosition.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasPositionId) {
        PositionId = other.PositionId;
      }
      if (other.HasTradeData) {
        MergeTradeData(other.TradeData);
      }
      if (other.HasPositionStatus) {
        PositionStatus = other.PositionStatus;
      }
      if (other.HasSwap) {
        Swap = other.Swap;
      }
      if (other.HasPrice) {
        Price = other.Price;
      }
      if (other.HasStopLoss) {
        StopLoss = other.StopLoss;
      }
      if (other.HasTakeProfit) {
        TakeProfit = other.TakeProfit;
      }
      if (other.HasUtcLastUpdateTimestamp) {
        UtcLastUpdateTimestamp = other.UtcLastUpdateTimestamp;
      }
      if (other.HasCommission) {
        Commission = other.Commission;
      }
      if (other.HasMarginRate) {
        MarginRate = other.MarginRate;
      }
      if (other.HasMirroringCommission) {
        MirroringCommission = other.MirroringCommission;
      }
      if (other.HasGuaranteedStopLoss) {
        GuaranteedStopLoss = other.GuaranteedStopLoss;
      }
      if (other.HasUsedMargin) {
        UsedMargin = other.UsedMargin;
      }
      if (other.HasStopLossTriggerMethod) {
        StopLossTriggerMethod = other.StopLossTriggerMethod;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_protoOAPositionFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _protoOAPositionFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasPositionId = input.ReadInt64(ref result.positionId_);
            break;
          }
          case 18: {
            global::ProtoOATradeData.Builder subBuilder = global::ProtoOATradeData.CreateBuilder();
            if (result.hasTradeData) {
              subBuilder.MergeFrom(TradeData);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            TradeData = subBuilder.BuildPartial();
            break;
          }
          case 24: {
            object unknown;
            if(input.ReadEnum(ref result.positionStatus_, out unknown)) {
              result.hasPositionStatus = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(3, (ulong)(int)unknown);
            }
            break;
          }
          case 32: {
            result.hasSwap = input.ReadInt64(ref result.swap_);
            break;
          }
          case 41: {
            result.hasPrice = input.ReadDouble(ref result.price_);
            break;
          }
          case 49: {
            result.hasStopLoss = input.ReadDouble(ref result.stopLoss_);
            break;
          }
          case 57: {
            result.hasTakeProfit = input.ReadDouble(ref result.takeProfit_);
            break;
          }
          case 64: {
            result.hasUtcLastUpdateTimestamp = input.ReadInt64(ref result.utcLastUpdateTimestamp_);
            break;
          }
          case 72: {
            result.hasCommission = input.ReadInt64(ref result.commission_);
            break;
          }
          case 81: {
            result.hasMarginRate = input.ReadDouble(ref result.marginRate_);
            break;
          }
          case 88: {
            result.hasMirroringCommission = input.ReadInt64(ref result.mirroringCommission_);
            break;
          }
          case 96: {
            result.hasGuaranteedStopLoss = input.ReadBool(ref result.guaranteedStopLoss_);
            break;
          }
          case 104: {
            result.hasUsedMargin = input.ReadUInt64(ref result.usedMargin_);
            break;
          }
          case 112: {
            object unknown;
            if(input.ReadEnum(ref result.stopLossTriggerMethod_, out unknown)) {
              result.hasStopLossTriggerMethod = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(14, (ulong)(int)unknown);
            }
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasPositionId {
      get { return result.hasPositionId; }
    }
    public long PositionId {
      get { return result.PositionId; }
      set { SetPositionId(value); }
    }
    public Builder SetPositionId(long value) {
      PrepareBuilder();
      result.hasPositionId = true;
      result.positionId_ = value;
      return this;
    }
    public Builder ClearPositionId() {
      PrepareBuilder();
      result.hasPositionId = false;
      result.positionId_ = 0L;
      return this;
    }
    
    public bool HasTradeData {
     get { return result.hasTradeData; }
    }
    public global::ProtoOATradeData TradeData {
      get { return result.TradeData; }
      set { SetTradeData(value); }
    }
    public Builder SetTradeData(global::ProtoOATradeData value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasTradeData = true;
      result.tradeData_ = value;
      return this;
    }
    public Builder SetTradeData(global::ProtoOATradeData.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasTradeData = true;
      result.tradeData_ = builderForValue.Build();
      return this;
    }
    public Builder MergeTradeData(global::ProtoOATradeData value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasTradeData &&
          result.tradeData_ != global::ProtoOATradeData.DefaultInstance) {
          result.tradeData_ = global::ProtoOATradeData.CreateBuilder(result.tradeData_).MergeFrom(value).BuildPartial();
      } else {
        result.tradeData_ = value;
      }
      result.hasTradeData = true;
      return this;
    }
    public Builder ClearTradeData() {
      PrepareBuilder();
      result.hasTradeData = false;
      result.tradeData_ = null;
      return this;
    }
    
    public bool HasPositionStatus {
     get { return result.hasPositionStatus; }
    }
    public global::ProtoOAPositionStatus PositionStatus {
      get { return result.PositionStatus; }
      set { SetPositionStatus(value); }
    }
    public Builder SetPositionStatus(global::ProtoOAPositionStatus value) {
      PrepareBuilder();
      result.hasPositionStatus = true;
      result.positionStatus_ = value;
      return this;
    }
    public Builder ClearPositionStatus() {
      PrepareBuilder();
      result.hasPositionStatus = false;
      result.positionStatus_ = global::ProtoOAPositionStatus.POSITION_STATUS_OPEN;
      return this;
    }
    
    public bool HasSwap {
      get { return result.hasSwap; }
    }
    public long Swap {
      get { return result.Swap; }
      set { SetSwap(value); }
    }
    public Builder SetSwap(long value) {
      PrepareBuilder();
      result.hasSwap = true;
      result.swap_ = value;
      return this;
    }
    public Builder ClearSwap() {
      PrepareBuilder();
      result.hasSwap = false;
      result.swap_ = 0L;
      return this;
    }
    
    public bool HasPrice {
      get { return result.hasPrice; }
    }
    public double Price {
      get { return result.Price; }
      set { SetPrice(value); }
    }
    public Builder SetPrice(double value) {
      PrepareBuilder();
      result.hasPrice = true;
      result.price_ = value;
      return this;
    }
    public Builder ClearPrice() {
      PrepareBuilder();
      result.hasPrice = false;
      result.price_ = 0D;
      return this;
    }
    
    public bool HasStopLoss {
      get { return result.hasStopLoss; }
    }
    public double StopLoss {
      get { return result.StopLoss; }
      set { SetStopLoss(value); }
    }
    public Builder SetStopLoss(double value) {
      PrepareBuilder();
      result.hasStopLoss = true;
      result.stopLoss_ = value;
      return this;
    }
    public Builder ClearStopLoss() {
      PrepareBuilder();
      result.hasStopLoss = false;
      result.stopLoss_ = 0D;
      return this;
    }
    
    public bool HasTakeProfit {
      get { return result.hasTakeProfit; }
    }
    public double TakeProfit {
      get { return result.TakeProfit; }
      set { SetTakeProfit(value); }
    }
    public Builder SetTakeProfit(double value) {
      PrepareBuilder();
      result.hasTakeProfit = true;
      result.takeProfit_ = value;
      return this;
    }
    public Builder ClearTakeProfit() {
      PrepareBuilder();
      result.hasTakeProfit = false;
      result.takeProfit_ = 0D;
      return this;
    }
    
    public bool HasUtcLastUpdateTimestamp {
      get { return result.hasUtcLastUpdateTimestamp; }
    }
    public long UtcLastUpdateTimestamp {
      get { return result.UtcLastUpdateTimestamp; }
      set { SetUtcLastUpdateTimestamp(value); }
    }
    public Builder SetUtcLastUpdateTimestamp(long value) {
      PrepareBuilder();
      result.hasUtcLastUpdateTimestamp = true;
      result.utcLastUpdateTimestamp_ = value;
      return this;
    }
    public Builder ClearUtcLastUpdateTimestamp() {
      PrepareBuilder();
      result.hasUtcLastUpdateTimestamp = false;
      result.utcLastUpdateTimestamp_ = 0L;
      return this;
    }
    
    public bool HasCommission {
      get { return result.hasCommission; }
    }
    public long Commission {
      get { return result.Commission; }
      set { SetCommission(value); }
    }
    public Builder SetCommission(long value) {
      PrepareBuilder();
      result.hasCommission = true;
      result.commission_ = value;
      return this;
    }
    public Builder ClearCommission() {
      PrepareBuilder();
      result.hasCommission = false;
      result.commission_ = 0L;
      return this;
    }
    
    public bool HasMarginRate {
      get { return result.hasMarginRate; }
    }
    public double MarginRate {
      get { return result.MarginRate; }
      set { SetMarginRate(value); }
    }
    public Builder SetMarginRate(double value) {
      PrepareBuilder();
      result.hasMarginRate = true;
      result.marginRate_ = value;
      return this;
    }
    public Builder ClearMarginRate() {
      PrepareBuilder();
      result.hasMarginRate = false;
      result.marginRate_ = 0D;
      return this;
    }
    
    public bool HasMirroringCommission {
      get { return result.hasMirroringCommission; }
    }
    public long MirroringCommission {
      get { return result.MirroringCommission; }
      set { SetMirroringCommission(value); }
    }
    public Builder SetMirroringCommission(long value) {
      PrepareBuilder();
      result.hasMirroringCommission = true;
      result.mirroringCommission_ = value;
      return this;
    }
    public Builder ClearMirroringCommission() {
      PrepareBuilder();
      result.hasMirroringCommission = false;
      result.mirroringCommission_ = 0L;
      return this;
    }
    
    public bool HasGuaranteedStopLoss {
      get { return result.hasGuaranteedStopLoss; }
    }
    public bool GuaranteedStopLoss {
      get { return result.GuaranteedStopLoss; }
      set { SetGuaranteedStopLoss(value); }
    }
    public Builder SetGuaranteedStopLoss(bool value) {
      PrepareBuilder();
      result.hasGuaranteedStopLoss = true;
      result.guaranteedStopLoss_ = value;
      return this;
    }
    public Builder ClearGuaranteedStopLoss() {
      PrepareBuilder();
      result.hasGuaranteedStopLoss = false;
      result.guaranteedStopLoss_ = false;
      return this;
    }
    
    public bool HasUsedMargin {
      get { return result.hasUsedMargin; }
    }
    [global::System.CLSCompliant(false)]
    public ulong UsedMargin {
      get { return result.UsedMargin; }
      set { SetUsedMargin(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetUsedMargin(ulong value) {
      PrepareBuilder();
      result.hasUsedMargin = true;
      result.usedMargin_ = value;
      return this;
    }
    public Builder ClearUsedMargin() {
      PrepareBuilder();
      result.hasUsedMargin = false;
      result.usedMargin_ = 0UL;
      return this;
    }
    
    public bool HasStopLossTriggerMethod {
     get { return result.hasStopLossTriggerMethod; }
    }
    public global::ProtoOAOrderTriggerMethod StopLossTriggerMethod {
      get { return result.StopLossTriggerMethod; }
      set { SetStopLossTriggerMethod(value); }
    }
    public Builder SetStopLossTriggerMethod(global::ProtoOAOrderTriggerMethod value) {
      PrepareBuilder();
      result.hasStopLossTriggerMethod = true;
      result.stopLossTriggerMethod_ = value;
      return this;
    }
    public Builder ClearStopLossTriggerMethod() {
      PrepareBuilder();
      result.hasStopLossTriggerMethod = false;
      result.stopLossTriggerMethod_ = global::ProtoOAOrderTriggerMethod.TRADE;
      return this;
    }
  }
  static ProtoOAPosition() {
    object.ReferenceEquals(global::OpenApiModelMessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class ProtoOATradeData : pb::GeneratedMessage<ProtoOATradeData, ProtoOATradeData.Builder> {
  private ProtoOATradeData() { }
  private static readonly ProtoOATradeData defaultInstance = new ProtoOATradeData().MakeReadOnly();
  private static readonly string[] _protoOATradeDataFieldNames = new string[] { "guaranteedStopLoss", "label", "openTimestamp", "symbolId", "tradeSide", "volume" };
  private static readonly uint[] _protoOATradeDataFieldTags = new uint[] { 48, 42, 32, 8, 24, 16 };
  public static ProtoOATradeData DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override ProtoOATradeData DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override ProtoOATradeData ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::OpenApiModelMessages.internal__static_ProtoOATradeData__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<ProtoOATradeData, ProtoOATradeData.Builder> InternalFieldAccessors {
    get { return global::OpenApiModelMessages.internal__static_ProtoOATradeData__FieldAccessorTable; }
  }
  
  public const int SymbolIdFieldNumber = 1;
  private bool hasSymbolId;
  private long symbolId_;
  public bool HasSymbolId {
    get { return hasSymbolId; }
  }
  public long SymbolId {
    get { return symbolId_; }
  }
  
  public const int VolumeFieldNumber = 2;
  private bool hasVolume;
  private long volume_;
  public bool HasVolume {
    get { return hasVolume; }
  }
  public long Volume {
    get { return volume_; }
  }
  
  public const int TradeSideFieldNumber = 3;
  private bool hasTradeSide;
  private global::ProtoOATradeSide tradeSide_ = global::ProtoOATradeSide.BUY;
  public bool HasTradeSide {
    get { return hasTradeSide; }
  }
  public global::ProtoOATradeSide TradeSide {
    get { return tradeSide_; }
  }
  
  public const int OpenTimestampFieldNumber = 4;
  private bool hasOpenTimestamp;
  private long openTimestamp_;
  public bool HasOpenTimestamp {
    get { return hasOpenTimestamp; }
  }
  public long OpenTimestamp {
    get { return openTimestamp_; }
  }
  
  public const int LabelFieldNumber = 5;
  private bool hasLabel;
  private string label_ = "";
  public bool HasLabel {
    get { return hasLabel; }
  }
  public string Label {
    get { return label_; }
  }
  
  public const int GuaranteedStopLossFieldNumber = 6;
  private bool hasGuaranteedStopLoss;
  private bool guaranteedStopLoss_;
  public bool HasGuaranteedStopLoss {
    get { return hasGuaranteedStopLoss; }
  }
  public bool GuaranteedStopLoss {
    get { return guaranteedStopLoss_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasSymbolId) return false;
      if (!hasVolume) return false;
      if (!hasTradeSide) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _protoOATradeDataFieldNames;
    if (hasSymbolId) {
      output.WriteInt64(1, field_names[3], SymbolId);
    }
    if (hasVolume) {
      output.WriteInt64(2, field_names[5], Volume);
    }
    if (hasTradeSide) {
      output.WriteEnum(3, field_names[4], (int) TradeSide, TradeSide);
    }
    if (hasOpenTimestamp) {
      output.WriteInt64(4, field_names[2], OpenTimestamp);
    }
    if (hasLabel) {
      output.WriteString(5, field_names[1], Label);
    }
    if (hasGuaranteedStopLoss) {
      output.WriteBool(6, field_names[0], GuaranteedStopLoss);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasSymbolId) {
      size += pb::CodedOutputStream.ComputeInt64Size(1, SymbolId);
    }
    if (hasVolume) {
      size += pb::CodedOutputStream.ComputeInt64Size(2, Volume);
    }
    if (hasTradeSide) {
      size += pb::CodedOutputStream.ComputeEnumSize(3, (int) TradeSide);
    }
    if (hasOpenTimestamp) {
      size += pb::CodedOutputStream.ComputeInt64Size(4, OpenTimestamp);
    }
    if (hasLabel) {
      size += pb::CodedOutputStream.ComputeStringSize(5, Label);
    }
    if (hasGuaranteedStopLoss) {
      size += pb::CodedOutputStream.ComputeBoolSize(6, GuaranteedStopLoss);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static ProtoOATradeData ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOATradeData ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOATradeData ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOATradeData ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOATradeData ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOATradeData ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static ProtoOATradeData ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static ProtoOATradeData ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static ProtoOATradeData ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOATradeData ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private ProtoOATradeData MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(ProtoOATradeData prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<ProtoOATradeData, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(ProtoOATradeData cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private ProtoOATradeData result;
    
    private ProtoOATradeData PrepareBuilder() {
      if (resultIsReadOnly) {
        ProtoOATradeData original = result;
        result = new ProtoOATradeData();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override ProtoOATradeData MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::ProtoOATradeData.Descriptor; }
    }
    
    public override ProtoOATradeData DefaultInstanceForType {
      get { return global::ProtoOATradeData.DefaultInstance; }
    }
    
    public override ProtoOATradeData BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is ProtoOATradeData) {
        return MergeFrom((ProtoOATradeData) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(ProtoOATradeData other) {
      if (other == global::ProtoOATradeData.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasSymbolId) {
        SymbolId = other.SymbolId;
      }
      if (other.HasVolume) {
        Volume = other.Volume;
      }
      if (other.HasTradeSide) {
        TradeSide = other.TradeSide;
      }
      if (other.HasOpenTimestamp) {
        OpenTimestamp = other.OpenTimestamp;
      }
      if (other.HasLabel) {
        Label = other.Label;
      }
      if (other.HasGuaranteedStopLoss) {
        GuaranteedStopLoss = other.GuaranteedStopLoss;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_protoOATradeDataFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _protoOATradeDataFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasSymbolId = input.ReadInt64(ref result.symbolId_);
            break;
          }
          case 16: {
            result.hasVolume = input.ReadInt64(ref result.volume_);
            break;
          }
          case 24: {
            object unknown;
            if(input.ReadEnum(ref result.tradeSide_, out unknown)) {
              result.hasTradeSide = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(3, (ulong)(int)unknown);
            }
            break;
          }
          case 32: {
            result.hasOpenTimestamp = input.ReadInt64(ref result.openTimestamp_);
            break;
          }
          case 42: {
            result.hasLabel = input.ReadString(ref result.label_);
            break;
          }
          case 48: {
            result.hasGuaranteedStopLoss = input.ReadBool(ref result.guaranteedStopLoss_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasSymbolId {
      get { return result.hasSymbolId; }
    }
    public long SymbolId {
      get { return result.SymbolId; }
      set { SetSymbolId(value); }
    }
    public Builder SetSymbolId(long value) {
      PrepareBuilder();
      result.hasSymbolId = true;
      result.symbolId_ = value;
      return this;
    }
    public Builder ClearSymbolId() {
      PrepareBuilder();
      result.hasSymbolId = false;
      result.symbolId_ = 0L;
      return this;
    }
    
    public bool HasVolume {
      get { return result.hasVolume; }
    }
    public long Volume {
      get { return result.Volume; }
      set { SetVolume(value); }
    }
    public Builder SetVolume(long value) {
      PrepareBuilder();
      result.hasVolume = true;
      result.volume_ = value;
      return this;
    }
    public Builder ClearVolume() {
      PrepareBuilder();
      result.hasVolume = false;
      result.volume_ = 0L;
      return this;
    }
    
    public bool HasTradeSide {
     get { return result.hasTradeSide; }
    }
    public global::ProtoOATradeSide TradeSide {
      get { return result.TradeSide; }
      set { SetTradeSide(value); }
    }
    public Builder SetTradeSide(global::ProtoOATradeSide value) {
      PrepareBuilder();
      result.hasTradeSide = true;
      result.tradeSide_ = value;
      return this;
    }
    public Builder ClearTradeSide() {
      PrepareBuilder();
      result.hasTradeSide = false;
      result.tradeSide_ = global::ProtoOATradeSide.BUY;
      return this;
    }
    
    public bool HasOpenTimestamp {
      get { return result.hasOpenTimestamp; }
    }
    public long OpenTimestamp {
      get { return result.OpenTimestamp; }
      set { SetOpenTimestamp(value); }
    }
    public Builder SetOpenTimestamp(long value) {
      PrepareBuilder();
      result.hasOpenTimestamp = true;
      result.openTimestamp_ = value;
      return this;
    }
    public Builder ClearOpenTimestamp() {
      PrepareBuilder();
      result.hasOpenTimestamp = false;
      result.openTimestamp_ = 0L;
      return this;
    }
    
    public bool HasLabel {
      get { return result.hasLabel; }
    }
    public string Label {
      get { return result.Label; }
      set { SetLabel(value); }
    }
    public Builder SetLabel(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasLabel = true;
      result.label_ = value;
      return this;
    }
    public Builder ClearLabel() {
      PrepareBuilder();
      result.hasLabel = false;
      result.label_ = "";
      return this;
    }
    
    public bool HasGuaranteedStopLoss {
      get { return result.hasGuaranteedStopLoss; }
    }
    public bool GuaranteedStopLoss {
      get { return result.GuaranteedStopLoss; }
      set { SetGuaranteedStopLoss(value); }
    }
    public Builder SetGuaranteedStopLoss(bool value) {
      PrepareBuilder();
      result.hasGuaranteedStopLoss = true;
      result.guaranteedStopLoss_ = value;
      return this;
    }
    public Builder ClearGuaranteedStopLoss() {
      PrepareBuilder();
      result.hasGuaranteedStopLoss = false;
      result.guaranteedStopLoss_ = false;
      return this;
    }
  }
  static ProtoOATradeData() {
    object.ReferenceEquals(global::OpenApiModelMessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class ProtoOAOrder : pb::GeneratedMessage<ProtoOAOrder, ProtoOAOrder.Builder> {
  private ProtoOAOrder() { }
  private static readonly ProtoOAOrder defaultInstance = new ProtoOAOrder().MakeReadOnly();
  private static readonly string[] _protoOAOrderFieldNames = new string[] { "baseSlippagePrice", "clientOrderId", "closingOrder", "executedVolume", "executionPrice", "expirationTimestamp", "isStopOut", "limitPrice", "orderId", "orderStatus", "orderType", "positionId", "relativeStopLoss", "relativeTakeProfit", "slippageInPoints", "stopLoss", "stopPrice", "stopTriggerMethod", "takeProfit", "timeInForce", "tradeData", "trailingStopLoss", "utcLastUpdateTimestamp" };
  private static readonly uint[] _protoOAOrderFieldTags = new uint[] { 81, 138, 96, 64, 57, 48, 176, 105, 8, 32, 24, 152, 160, 168, 88, 121, 113, 192, 129, 144, 18, 184, 72 };
  public static ProtoOAOrder DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override ProtoOAOrder DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override ProtoOAOrder ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::OpenApiModelMessages.internal__static_ProtoOAOrder__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<ProtoOAOrder, ProtoOAOrder.Builder> InternalFieldAccessors {
    get { return global::OpenApiModelMessages.internal__static_ProtoOAOrder__FieldAccessorTable; }
  }
  
  public const int OrderIdFieldNumber = 1;
  private bool hasOrderId;
  private long orderId_;
  public bool HasOrderId {
    get { return hasOrderId; }
  }
  public long OrderId {
    get { return orderId_; }
  }
  
  public const int TradeDataFieldNumber = 2;
  private bool hasTradeData;
  private global::ProtoOATradeData tradeData_;
  public bool HasTradeData {
    get { return hasTradeData; }
  }
  public global::ProtoOATradeData TradeData {
    get { return tradeData_ ?? global::ProtoOATradeData.DefaultInstance; }
  }
  
  public const int OrderTypeFieldNumber = 3;
  private bool hasOrderType;
  private global::ProtoOAOrderType orderType_ = global::ProtoOAOrderType.MARKET;
  public bool HasOrderType {
    get { return hasOrderType; }
  }
  public global::ProtoOAOrderType OrderType {
    get { return orderType_; }
  }
  
  public const int OrderStatusFieldNumber = 4;
  private bool hasOrderStatus;
  private global::ProtoOAOrderStatus orderStatus_ = global::ProtoOAOrderStatus.ORDER_STATUS_ACCEPTED;
  public bool HasOrderStatus {
    get { return hasOrderStatus; }
  }
  public global::ProtoOAOrderStatus OrderStatus {
    get { return orderStatus_; }
  }
  
  public const int ExpirationTimestampFieldNumber = 6;
  private bool hasExpirationTimestamp;
  private long expirationTimestamp_;
  public bool HasExpirationTimestamp {
    get { return hasExpirationTimestamp; }
  }
  public long ExpirationTimestamp {
    get { return expirationTimestamp_; }
  }
  
  public const int ExecutionPriceFieldNumber = 7;
  private bool hasExecutionPrice;
  private double executionPrice_;
  public bool HasExecutionPrice {
    get { return hasExecutionPrice; }
  }
  public double ExecutionPrice {
    get { return executionPrice_; }
  }
  
  public const int ExecutedVolumeFieldNumber = 8;
  private bool hasExecutedVolume;
  private long executedVolume_;
  public bool HasExecutedVolume {
    get { return hasExecutedVolume; }
  }
  public long ExecutedVolume {
    get { return executedVolume_; }
  }
  
  public const int UtcLastUpdateTimestampFieldNumber = 9;
  private bool hasUtcLastUpdateTimestamp;
  private long utcLastUpdateTimestamp_;
  public bool HasUtcLastUpdateTimestamp {
    get { return hasUtcLastUpdateTimestamp; }
  }
  public long UtcLastUpdateTimestamp {
    get { return utcLastUpdateTimestamp_; }
  }
  
  public const int BaseSlippagePriceFieldNumber = 10;
  private bool hasBaseSlippagePrice;
  private double baseSlippagePrice_;
  public bool HasBaseSlippagePrice {
    get { return hasBaseSlippagePrice; }
  }
  public double BaseSlippagePrice {
    get { return baseSlippagePrice_; }
  }
  
  public const int SlippageInPointsFieldNumber = 11;
  private bool hasSlippageInPoints;
  private long slippageInPoints_;
  public bool HasSlippageInPoints {
    get { return hasSlippageInPoints; }
  }
  public long SlippageInPoints {
    get { return slippageInPoints_; }
  }
  
  public const int ClosingOrderFieldNumber = 12;
  private bool hasClosingOrder;
  private bool closingOrder_;
  public bool HasClosingOrder {
    get { return hasClosingOrder; }
  }
  public bool ClosingOrder {
    get { return closingOrder_; }
  }
  
  public const int LimitPriceFieldNumber = 13;
  private bool hasLimitPrice;
  private double limitPrice_;
  public bool HasLimitPrice {
    get { return hasLimitPrice; }
  }
  public double LimitPrice {
    get { return limitPrice_; }
  }
  
  public const int StopPriceFieldNumber = 14;
  private bool hasStopPrice;
  private double stopPrice_;
  public bool HasStopPrice {
    get { return hasStopPrice; }
  }
  public double StopPrice {
    get { return stopPrice_; }
  }
  
  public const int StopLossFieldNumber = 15;
  private bool hasStopLoss;
  private double stopLoss_;
  public bool HasStopLoss {
    get { return hasStopLoss; }
  }
  public double StopLoss {
    get { return stopLoss_; }
  }
  
  public const int TakeProfitFieldNumber = 16;
  private bool hasTakeProfit;
  private double takeProfit_;
  public bool HasTakeProfit {
    get { return hasTakeProfit; }
  }
  public double TakeProfit {
    get { return takeProfit_; }
  }
  
  public const int ClientOrderIdFieldNumber = 17;
  private bool hasClientOrderId;
  private string clientOrderId_ = "";
  public bool HasClientOrderId {
    get { return hasClientOrderId; }
  }
  public string ClientOrderId {
    get { return clientOrderId_; }
  }
  
  public const int TimeInForceFieldNumber = 18;
  private bool hasTimeInForce;
  private global::ProtoOATimeInForce timeInForce_ = global::ProtoOATimeInForce.IMMEDIATE_OR_CANCEL;
  public bool HasTimeInForce {
    get { return hasTimeInForce; }
  }
  public global::ProtoOATimeInForce TimeInForce {
    get { return timeInForce_; }
  }
  
  public const int PositionIdFieldNumber = 19;
  private bool hasPositionId;
  private long positionId_;
  public bool HasPositionId {
    get { return hasPositionId; }
  }
  public long PositionId {
    get { return positionId_; }
  }
  
  public const int RelativeStopLossFieldNumber = 20;
  private bool hasRelativeStopLoss;
  private long relativeStopLoss_;
  public bool HasRelativeStopLoss {
    get { return hasRelativeStopLoss; }
  }
  public long RelativeStopLoss {
    get { return relativeStopLoss_; }
  }
  
  public const int RelativeTakeProfitFieldNumber = 21;
  private bool hasRelativeTakeProfit;
  private long relativeTakeProfit_;
  public bool HasRelativeTakeProfit {
    get { return hasRelativeTakeProfit; }
  }
  public long RelativeTakeProfit {
    get { return relativeTakeProfit_; }
  }
  
  public const int IsStopOutFieldNumber = 22;
  private bool hasIsStopOut;
  private bool isStopOut_;
  public bool HasIsStopOut {
    get { return hasIsStopOut; }
  }
  public bool IsStopOut {
    get { return isStopOut_; }
  }
  
  public const int TrailingStopLossFieldNumber = 23;
  private bool hasTrailingStopLoss;
  private bool trailingStopLoss_;
  public bool HasTrailingStopLoss {
    get { return hasTrailingStopLoss; }
  }
  public bool TrailingStopLoss {
    get { return trailingStopLoss_; }
  }
  
  public const int StopTriggerMethodFieldNumber = 24;
  private bool hasStopTriggerMethod;
  private global::ProtoOAOrderTriggerMethod stopTriggerMethod_ = global::ProtoOAOrderTriggerMethod.TRADE;
  public bool HasStopTriggerMethod {
    get { return hasStopTriggerMethod; }
  }
  public global::ProtoOAOrderTriggerMethod StopTriggerMethod {
    get { return stopTriggerMethod_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasOrderId) return false;
      if (!hasTradeData) return false;
      if (!hasOrderType) return false;
      if (!hasOrderStatus) return false;
      if (!TradeData.IsInitialized) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _protoOAOrderFieldNames;
    if (hasOrderId) {
      output.WriteInt64(1, field_names[8], OrderId);
    }
    if (hasTradeData) {
      output.WriteMessage(2, field_names[20], TradeData);
    }
    if (hasOrderType) {
      output.WriteEnum(3, field_names[10], (int) OrderType, OrderType);
    }
    if (hasOrderStatus) {
      output.WriteEnum(4, field_names[9], (int) OrderStatus, OrderStatus);
    }
    if (hasExpirationTimestamp) {
      output.WriteInt64(6, field_names[5], ExpirationTimestamp);
    }
    if (hasExecutionPrice) {
      output.WriteDouble(7, field_names[4], ExecutionPrice);
    }
    if (hasExecutedVolume) {
      output.WriteInt64(8, field_names[3], ExecutedVolume);
    }
    if (hasUtcLastUpdateTimestamp) {
      output.WriteInt64(9, field_names[22], UtcLastUpdateTimestamp);
    }
    if (hasBaseSlippagePrice) {
      output.WriteDouble(10, field_names[0], BaseSlippagePrice);
    }
    if (hasSlippageInPoints) {
      output.WriteInt64(11, field_names[14], SlippageInPoints);
    }
    if (hasClosingOrder) {
      output.WriteBool(12, field_names[2], ClosingOrder);
    }
    if (hasLimitPrice) {
      output.WriteDouble(13, field_names[7], LimitPrice);
    }
    if (hasStopPrice) {
      output.WriteDouble(14, field_names[16], StopPrice);
    }
    if (hasStopLoss) {
      output.WriteDouble(15, field_names[15], StopLoss);
    }
    if (hasTakeProfit) {
      output.WriteDouble(16, field_names[18], TakeProfit);
    }
    if (hasClientOrderId) {
      output.WriteString(17, field_names[1], ClientOrderId);
    }
    if (hasTimeInForce) {
      output.WriteEnum(18, field_names[19], (int) TimeInForce, TimeInForce);
    }
    if (hasPositionId) {
      output.WriteInt64(19, field_names[11], PositionId);
    }
    if (hasRelativeStopLoss) {
      output.WriteInt64(20, field_names[12], RelativeStopLoss);
    }
    if (hasRelativeTakeProfit) {
      output.WriteInt64(21, field_names[13], RelativeTakeProfit);
    }
    if (hasIsStopOut) {
      output.WriteBool(22, field_names[6], IsStopOut);
    }
    if (hasTrailingStopLoss) {
      output.WriteBool(23, field_names[21], TrailingStopLoss);
    }
    if (hasStopTriggerMethod) {
      output.WriteEnum(24, field_names[17], (int) StopTriggerMethod, StopTriggerMethod);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasOrderId) {
      size += pb::CodedOutputStream.ComputeInt64Size(1, OrderId);
    }
    if (hasTradeData) {
      size += pb::CodedOutputStream.ComputeMessageSize(2, TradeData);
    }
    if (hasOrderType) {
      size += pb::CodedOutputStream.ComputeEnumSize(3, (int) OrderType);
    }
    if (hasOrderStatus) {
      size += pb::CodedOutputStream.ComputeEnumSize(4, (int) OrderStatus);
    }
    if (hasExpirationTimestamp) {
      size += pb::CodedOutputStream.ComputeInt64Size(6, ExpirationTimestamp);
    }
    if (hasExecutionPrice) {
      size += pb::CodedOutputStream.ComputeDoubleSize(7, ExecutionPrice);
    }
    if (hasExecutedVolume) {
      size += pb::CodedOutputStream.ComputeInt64Size(8, ExecutedVolume);
    }
    if (hasUtcLastUpdateTimestamp) {
      size += pb::CodedOutputStream.ComputeInt64Size(9, UtcLastUpdateTimestamp);
    }
    if (hasBaseSlippagePrice) {
      size += pb::CodedOutputStream.ComputeDoubleSize(10, BaseSlippagePrice);
    }
    if (hasSlippageInPoints) {
      size += pb::CodedOutputStream.ComputeInt64Size(11, SlippageInPoints);
    }
    if (hasClosingOrder) {
      size += pb::CodedOutputStream.ComputeBoolSize(12, ClosingOrder);
    }
    if (hasLimitPrice) {
      size += pb::CodedOutputStream.ComputeDoubleSize(13, LimitPrice);
    }
    if (hasStopPrice) {
      size += pb::CodedOutputStream.ComputeDoubleSize(14, StopPrice);
    }
    if (hasStopLoss) {
      size += pb::CodedOutputStream.ComputeDoubleSize(15, StopLoss);
    }
    if (hasTakeProfit) {
      size += pb::CodedOutputStream.ComputeDoubleSize(16, TakeProfit);
    }
    if (hasClientOrderId) {
      size += pb::CodedOutputStream.ComputeStringSize(17, ClientOrderId);
    }
    if (hasTimeInForce) {
      size += pb::CodedOutputStream.ComputeEnumSize(18, (int) TimeInForce);
    }
    if (hasPositionId) {
      size += pb::CodedOutputStream.ComputeInt64Size(19, PositionId);
    }
    if (hasRelativeStopLoss) {
      size += pb::CodedOutputStream.ComputeInt64Size(20, RelativeStopLoss);
    }
    if (hasRelativeTakeProfit) {
      size += pb::CodedOutputStream.ComputeInt64Size(21, RelativeTakeProfit);
    }
    if (hasIsStopOut) {
      size += pb::CodedOutputStream.ComputeBoolSize(22, IsStopOut);
    }
    if (hasTrailingStopLoss) {
      size += pb::CodedOutputStream.ComputeBoolSize(23, TrailingStopLoss);
    }
    if (hasStopTriggerMethod) {
      size += pb::CodedOutputStream.ComputeEnumSize(24, (int) StopTriggerMethod);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static ProtoOAOrder ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOAOrder ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOAOrder ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOAOrder ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOAOrder ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOAOrder ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static ProtoOAOrder ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static ProtoOAOrder ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static ProtoOAOrder ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOAOrder ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private ProtoOAOrder MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(ProtoOAOrder prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<ProtoOAOrder, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(ProtoOAOrder cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private ProtoOAOrder result;
    
    private ProtoOAOrder PrepareBuilder() {
      if (resultIsReadOnly) {
        ProtoOAOrder original = result;
        result = new ProtoOAOrder();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override ProtoOAOrder MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::ProtoOAOrder.Descriptor; }
    }
    
    public override ProtoOAOrder DefaultInstanceForType {
      get { return global::ProtoOAOrder.DefaultInstance; }
    }
    
    public override ProtoOAOrder BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is ProtoOAOrder) {
        return MergeFrom((ProtoOAOrder) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(ProtoOAOrder other) {
      if (other == global::ProtoOAOrder.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasOrderId) {
        OrderId = other.OrderId;
      }
      if (other.HasTradeData) {
        MergeTradeData(other.TradeData);
      }
      if (other.HasOrderType) {
        OrderType = other.OrderType;
      }
      if (other.HasOrderStatus) {
        OrderStatus = other.OrderStatus;
      }
      if (other.HasExpirationTimestamp) {
        ExpirationTimestamp = other.ExpirationTimestamp;
      }
      if (other.HasExecutionPrice) {
        ExecutionPrice = other.ExecutionPrice;
      }
      if (other.HasExecutedVolume) {
        ExecutedVolume = other.ExecutedVolume;
      }
      if (other.HasUtcLastUpdateTimestamp) {
        UtcLastUpdateTimestamp = other.UtcLastUpdateTimestamp;
      }
      if (other.HasBaseSlippagePrice) {
        BaseSlippagePrice = other.BaseSlippagePrice;
      }
      if (other.HasSlippageInPoints) {
        SlippageInPoints = other.SlippageInPoints;
      }
      if (other.HasClosingOrder) {
        ClosingOrder = other.ClosingOrder;
      }
      if (other.HasLimitPrice) {
        LimitPrice = other.LimitPrice;
      }
      if (other.HasStopPrice) {
        StopPrice = other.StopPrice;
      }
      if (other.HasStopLoss) {
        StopLoss = other.StopLoss;
      }
      if (other.HasTakeProfit) {
        TakeProfit = other.TakeProfit;
      }
      if (other.HasClientOrderId) {
        ClientOrderId = other.ClientOrderId;
      }
      if (other.HasTimeInForce) {
        TimeInForce = other.TimeInForce;
      }
      if (other.HasPositionId) {
        PositionId = other.PositionId;
      }
      if (other.HasRelativeStopLoss) {
        RelativeStopLoss = other.RelativeStopLoss;
      }
      if (other.HasRelativeTakeProfit) {
        RelativeTakeProfit = other.RelativeTakeProfit;
      }
      if (other.HasIsStopOut) {
        IsStopOut = other.IsStopOut;
      }
      if (other.HasTrailingStopLoss) {
        TrailingStopLoss = other.TrailingStopLoss;
      }
      if (other.HasStopTriggerMethod) {
        StopTriggerMethod = other.StopTriggerMethod;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_protoOAOrderFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _protoOAOrderFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasOrderId = input.ReadInt64(ref result.orderId_);
            break;
          }
          case 18: {
            global::ProtoOATradeData.Builder subBuilder = global::ProtoOATradeData.CreateBuilder();
            if (result.hasTradeData) {
              subBuilder.MergeFrom(TradeData);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            TradeData = subBuilder.BuildPartial();
            break;
          }
          case 24: {
            object unknown;
            if(input.ReadEnum(ref result.orderType_, out unknown)) {
              result.hasOrderType = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(3, (ulong)(int)unknown);
            }
            break;
          }
          case 32: {
            object unknown;
            if(input.ReadEnum(ref result.orderStatus_, out unknown)) {
              result.hasOrderStatus = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(4, (ulong)(int)unknown);
            }
            break;
          }
          case 48: {
            result.hasExpirationTimestamp = input.ReadInt64(ref result.expirationTimestamp_);
            break;
          }
          case 57: {
            result.hasExecutionPrice = input.ReadDouble(ref result.executionPrice_);
            break;
          }
          case 64: {
            result.hasExecutedVolume = input.ReadInt64(ref result.executedVolume_);
            break;
          }
          case 72: {
            result.hasUtcLastUpdateTimestamp = input.ReadInt64(ref result.utcLastUpdateTimestamp_);
            break;
          }
          case 81: {
            result.hasBaseSlippagePrice = input.ReadDouble(ref result.baseSlippagePrice_);
            break;
          }
          case 88: {
            result.hasSlippageInPoints = input.ReadInt64(ref result.slippageInPoints_);
            break;
          }
          case 96: {
            result.hasClosingOrder = input.ReadBool(ref result.closingOrder_);
            break;
          }
          case 105: {
            result.hasLimitPrice = input.ReadDouble(ref result.limitPrice_);
            break;
          }
          case 113: {
            result.hasStopPrice = input.ReadDouble(ref result.stopPrice_);
            break;
          }
          case 121: {
            result.hasStopLoss = input.ReadDouble(ref result.stopLoss_);
            break;
          }
          case 129: {
            result.hasTakeProfit = input.ReadDouble(ref result.takeProfit_);
            break;
          }
          case 138: {
            result.hasClientOrderId = input.ReadString(ref result.clientOrderId_);
            break;
          }
          case 144: {
            object unknown;
            if(input.ReadEnum(ref result.timeInForce_, out unknown)) {
              result.hasTimeInForce = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(18, (ulong)(int)unknown);
            }
            break;
          }
          case 152: {
            result.hasPositionId = input.ReadInt64(ref result.positionId_);
            break;
          }
          case 160: {
            result.hasRelativeStopLoss = input.ReadInt64(ref result.relativeStopLoss_);
            break;
          }
          case 168: {
            result.hasRelativeTakeProfit = input.ReadInt64(ref result.relativeTakeProfit_);
            break;
          }
          case 176: {
            result.hasIsStopOut = input.ReadBool(ref result.isStopOut_);
            break;
          }
          case 184: {
            result.hasTrailingStopLoss = input.ReadBool(ref result.trailingStopLoss_);
            break;
          }
          case 192: {
            object unknown;
            if(input.ReadEnum(ref result.stopTriggerMethod_, out unknown)) {
              result.hasStopTriggerMethod = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(24, (ulong)(int)unknown);
            }
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasOrderId {
      get { return result.hasOrderId; }
    }
    public long OrderId {
      get { return result.OrderId; }
      set { SetOrderId(value); }
    }
    public Builder SetOrderId(long value) {
      PrepareBuilder();
      result.hasOrderId = true;
      result.orderId_ = value;
      return this;
    }
    public Builder ClearOrderId() {
      PrepareBuilder();
      result.hasOrderId = false;
      result.orderId_ = 0L;
      return this;
    }
    
    public bool HasTradeData {
     get { return result.hasTradeData; }
    }
    public global::ProtoOATradeData TradeData {
      get { return result.TradeData; }
      set { SetTradeData(value); }
    }
    public Builder SetTradeData(global::ProtoOATradeData value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasTradeData = true;
      result.tradeData_ = value;
      return this;
    }
    public Builder SetTradeData(global::ProtoOATradeData.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasTradeData = true;
      result.tradeData_ = builderForValue.Build();
      return this;
    }
    public Builder MergeTradeData(global::ProtoOATradeData value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasTradeData &&
          result.tradeData_ != global::ProtoOATradeData.DefaultInstance) {
          result.tradeData_ = global::ProtoOATradeData.CreateBuilder(result.tradeData_).MergeFrom(value).BuildPartial();
      } else {
        result.tradeData_ = value;
      }
      result.hasTradeData = true;
      return this;
    }
    public Builder ClearTradeData() {
      PrepareBuilder();
      result.hasTradeData = false;
      result.tradeData_ = null;
      return this;
    }
    
    public bool HasOrderType {
     get { return result.hasOrderType; }
    }
    public global::ProtoOAOrderType OrderType {
      get { return result.OrderType; }
      set { SetOrderType(value); }
    }
    public Builder SetOrderType(global::ProtoOAOrderType value) {
      PrepareBuilder();
      result.hasOrderType = true;
      result.orderType_ = value;
      return this;
    }
    public Builder ClearOrderType() {
      PrepareBuilder();
      result.hasOrderType = false;
      result.orderType_ = global::ProtoOAOrderType.MARKET;
      return this;
    }
    
    public bool HasOrderStatus {
     get { return result.hasOrderStatus; }
    }
    public global::ProtoOAOrderStatus OrderStatus {
      get { return result.OrderStatus; }
      set { SetOrderStatus(value); }
    }
    public Builder SetOrderStatus(global::ProtoOAOrderStatus value) {
      PrepareBuilder();
      result.hasOrderStatus = true;
      result.orderStatus_ = value;
      return this;
    }
    public Builder ClearOrderStatus() {
      PrepareBuilder();
      result.hasOrderStatus = false;
      result.orderStatus_ = global::ProtoOAOrderStatus.ORDER_STATUS_ACCEPTED;
      return this;
    }
    
    public bool HasExpirationTimestamp {
      get { return result.hasExpirationTimestamp; }
    }
    public long ExpirationTimestamp {
      get { return result.ExpirationTimestamp; }
      set { SetExpirationTimestamp(value); }
    }
    public Builder SetExpirationTimestamp(long value) {
      PrepareBuilder();
      result.hasExpirationTimestamp = true;
      result.expirationTimestamp_ = value;
      return this;
    }
    public Builder ClearExpirationTimestamp() {
      PrepareBuilder();
      result.hasExpirationTimestamp = false;
      result.expirationTimestamp_ = 0L;
      return this;
    }
    
    public bool HasExecutionPrice {
      get { return result.hasExecutionPrice; }
    }
    public double ExecutionPrice {
      get { return result.ExecutionPrice; }
      set { SetExecutionPrice(value); }
    }
    public Builder SetExecutionPrice(double value) {
      PrepareBuilder();
      result.hasExecutionPrice = true;
      result.executionPrice_ = value;
      return this;
    }
    public Builder ClearExecutionPrice() {
      PrepareBuilder();
      result.hasExecutionPrice = false;
      result.executionPrice_ = 0D;
      return this;
    }
    
    public bool HasExecutedVolume {
      get { return result.hasExecutedVolume; }
    }
    public long ExecutedVolume {
      get { return result.ExecutedVolume; }
      set { SetExecutedVolume(value); }
    }
    public Builder SetExecutedVolume(long value) {
      PrepareBuilder();
      result.hasExecutedVolume = true;
      result.executedVolume_ = value;
      return this;
    }
    public Builder ClearExecutedVolume() {
      PrepareBuilder();
      result.hasExecutedVolume = false;
      result.executedVolume_ = 0L;
      return this;
    }
    
    public bool HasUtcLastUpdateTimestamp {
      get { return result.hasUtcLastUpdateTimestamp; }
    }
    public long UtcLastUpdateTimestamp {
      get { return result.UtcLastUpdateTimestamp; }
      set { SetUtcLastUpdateTimestamp(value); }
    }
    public Builder SetUtcLastUpdateTimestamp(long value) {
      PrepareBuilder();
      result.hasUtcLastUpdateTimestamp = true;
      result.utcLastUpdateTimestamp_ = value;
      return this;
    }
    public Builder ClearUtcLastUpdateTimestamp() {
      PrepareBuilder();
      result.hasUtcLastUpdateTimestamp = false;
      result.utcLastUpdateTimestamp_ = 0L;
      return this;
    }
    
    public bool HasBaseSlippagePrice {
      get { return result.hasBaseSlippagePrice; }
    }
    public double BaseSlippagePrice {
      get { return result.BaseSlippagePrice; }
      set { SetBaseSlippagePrice(value); }
    }
    public Builder SetBaseSlippagePrice(double value) {
      PrepareBuilder();
      result.hasBaseSlippagePrice = true;
      result.baseSlippagePrice_ = value;
      return this;
    }
    public Builder ClearBaseSlippagePrice() {
      PrepareBuilder();
      result.hasBaseSlippagePrice = false;
      result.baseSlippagePrice_ = 0D;
      return this;
    }
    
    public bool HasSlippageInPoints {
      get { return result.hasSlippageInPoints; }
    }
    public long SlippageInPoints {
      get { return result.SlippageInPoints; }
      set { SetSlippageInPoints(value); }
    }
    public Builder SetSlippageInPoints(long value) {
      PrepareBuilder();
      result.hasSlippageInPoints = true;
      result.slippageInPoints_ = value;
      return this;
    }
    public Builder ClearSlippageInPoints() {
      PrepareBuilder();
      result.hasSlippageInPoints = false;
      result.slippageInPoints_ = 0L;
      return this;
    }
    
    public bool HasClosingOrder {
      get { return result.hasClosingOrder; }
    }
    public bool ClosingOrder {
      get { return result.ClosingOrder; }
      set { SetClosingOrder(value); }
    }
    public Builder SetClosingOrder(bool value) {
      PrepareBuilder();
      result.hasClosingOrder = true;
      result.closingOrder_ = value;
      return this;
    }
    public Builder ClearClosingOrder() {
      PrepareBuilder();
      result.hasClosingOrder = false;
      result.closingOrder_ = false;
      return this;
    }
    
    public bool HasLimitPrice {
      get { return result.hasLimitPrice; }
    }
    public double LimitPrice {
      get { return result.LimitPrice; }
      set { SetLimitPrice(value); }
    }
    public Builder SetLimitPrice(double value) {
      PrepareBuilder();
      result.hasLimitPrice = true;
      result.limitPrice_ = value;
      return this;
    }
    public Builder ClearLimitPrice() {
      PrepareBuilder();
      result.hasLimitPrice = false;
      result.limitPrice_ = 0D;
      return this;
    }
    
    public bool HasStopPrice {
      get { return result.hasStopPrice; }
    }
    public double StopPrice {
      get { return result.StopPrice; }
      set { SetStopPrice(value); }
    }
    public Builder SetStopPrice(double value) {
      PrepareBuilder();
      result.hasStopPrice = true;
      result.stopPrice_ = value;
      return this;
    }
    public Builder ClearStopPrice() {
      PrepareBuilder();
      result.hasStopPrice = false;
      result.stopPrice_ = 0D;
      return this;
    }
    
    public bool HasStopLoss {
      get { return result.hasStopLoss; }
    }
    public double StopLoss {
      get { return result.StopLoss; }
      set { SetStopLoss(value); }
    }
    public Builder SetStopLoss(double value) {
      PrepareBuilder();
      result.hasStopLoss = true;
      result.stopLoss_ = value;
      return this;
    }
    public Builder ClearStopLoss() {
      PrepareBuilder();
      result.hasStopLoss = false;
      result.stopLoss_ = 0D;
      return this;
    }
    
    public bool HasTakeProfit {
      get { return result.hasTakeProfit; }
    }
    public double TakeProfit {
      get { return result.TakeProfit; }
      set { SetTakeProfit(value); }
    }
    public Builder SetTakeProfit(double value) {
      PrepareBuilder();
      result.hasTakeProfit = true;
      result.takeProfit_ = value;
      return this;
    }
    public Builder ClearTakeProfit() {
      PrepareBuilder();
      result.hasTakeProfit = false;
      result.takeProfit_ = 0D;
      return this;
    }
    
    public bool HasClientOrderId {
      get { return result.hasClientOrderId; }
    }
    public string ClientOrderId {
      get { return result.ClientOrderId; }
      set { SetClientOrderId(value); }
    }
    public Builder SetClientOrderId(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasClientOrderId = true;
      result.clientOrderId_ = value;
      return this;
    }
    public Builder ClearClientOrderId() {
      PrepareBuilder();
      result.hasClientOrderId = false;
      result.clientOrderId_ = "";
      return this;
    }
    
    public bool HasTimeInForce {
     get { return result.hasTimeInForce; }
    }
    public global::ProtoOATimeInForce TimeInForce {
      get { return result.TimeInForce; }
      set { SetTimeInForce(value); }
    }
    public Builder SetTimeInForce(global::ProtoOATimeInForce value) {
      PrepareBuilder();
      result.hasTimeInForce = true;
      result.timeInForce_ = value;
      return this;
    }
    public Builder ClearTimeInForce() {
      PrepareBuilder();
      result.hasTimeInForce = false;
      result.timeInForce_ = global::ProtoOATimeInForce.IMMEDIATE_OR_CANCEL;
      return this;
    }
    
    public bool HasPositionId {
      get { return result.hasPositionId; }
    }
    public long PositionId {
      get { return result.PositionId; }
      set { SetPositionId(value); }
    }
    public Builder SetPositionId(long value) {
      PrepareBuilder();
      result.hasPositionId = true;
      result.positionId_ = value;
      return this;
    }
    public Builder ClearPositionId() {
      PrepareBuilder();
      result.hasPositionId = false;
      result.positionId_ = 0L;
      return this;
    }
    
    public bool HasRelativeStopLoss {
      get { return result.hasRelativeStopLoss; }
    }
    public long RelativeStopLoss {
      get { return result.RelativeStopLoss; }
      set { SetRelativeStopLoss(value); }
    }
    public Builder SetRelativeStopLoss(long value) {
      PrepareBuilder();
      result.hasRelativeStopLoss = true;
      result.relativeStopLoss_ = value;
      return this;
    }
    public Builder ClearRelativeStopLoss() {
      PrepareBuilder();
      result.hasRelativeStopLoss = false;
      result.relativeStopLoss_ = 0L;
      return this;
    }
    
    public bool HasRelativeTakeProfit {
      get { return result.hasRelativeTakeProfit; }
    }
    public long RelativeTakeProfit {
      get { return result.RelativeTakeProfit; }
      set { SetRelativeTakeProfit(value); }
    }
    public Builder SetRelativeTakeProfit(long value) {
      PrepareBuilder();
      result.hasRelativeTakeProfit = true;
      result.relativeTakeProfit_ = value;
      return this;
    }
    public Builder ClearRelativeTakeProfit() {
      PrepareBuilder();
      result.hasRelativeTakeProfit = false;
      result.relativeTakeProfit_ = 0L;
      return this;
    }
    
    public bool HasIsStopOut {
      get { return result.hasIsStopOut; }
    }
    public bool IsStopOut {
      get { return result.IsStopOut; }
      set { SetIsStopOut(value); }
    }
    public Builder SetIsStopOut(bool value) {
      PrepareBuilder();
      result.hasIsStopOut = true;
      result.isStopOut_ = value;
      return this;
    }
    public Builder ClearIsStopOut() {
      PrepareBuilder();
      result.hasIsStopOut = false;
      result.isStopOut_ = false;
      return this;
    }
    
    public bool HasTrailingStopLoss {
      get { return result.hasTrailingStopLoss; }
    }
    public bool TrailingStopLoss {
      get { return result.TrailingStopLoss; }
      set { SetTrailingStopLoss(value); }
    }
    public Builder SetTrailingStopLoss(bool value) {
      PrepareBuilder();
      result.hasTrailingStopLoss = true;
      result.trailingStopLoss_ = value;
      return this;
    }
    public Builder ClearTrailingStopLoss() {
      PrepareBuilder();
      result.hasTrailingStopLoss = false;
      result.trailingStopLoss_ = false;
      return this;
    }
    
    public bool HasStopTriggerMethod {
     get { return result.hasStopTriggerMethod; }
    }
    public global::ProtoOAOrderTriggerMethod StopTriggerMethod {
      get { return result.StopTriggerMethod; }
      set { SetStopTriggerMethod(value); }
    }
    public Builder SetStopTriggerMethod(global::ProtoOAOrderTriggerMethod value) {
      PrepareBuilder();
      result.hasStopTriggerMethod = true;
      result.stopTriggerMethod_ = value;
      return this;
    }
    public Builder ClearStopTriggerMethod() {
      PrepareBuilder();
      result.hasStopTriggerMethod = false;
      result.stopTriggerMethod_ = global::ProtoOAOrderTriggerMethod.TRADE;
      return this;
    }
  }
  static ProtoOAOrder() {
    object.ReferenceEquals(global::OpenApiModelMessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class ProtoOABonusDepositWithdraw : pb::GeneratedMessage<ProtoOABonusDepositWithdraw, ProtoOABonusDepositWithdraw.Builder> {
  private ProtoOABonusDepositWithdraw() { }
  private static readonly ProtoOABonusDepositWithdraw defaultInstance = new ProtoOABonusDepositWithdraw().MakeReadOnly();
  private static readonly string[] _protoOABonusDepositWithdrawFieldNames = new string[] { "bonusHistoryId", "changeBonusTimestamp", "externalNote", "ibBonus", "ibDelta", "introducingBrokerId", "managerBonus", "managerDelta", "operationType" };
  private static readonly uint[] _protoOABonusDepositWithdrawFieldTags = new uint[] { 16, 56, 66, 40, 48, 72, 24, 32, 8 };
  public static ProtoOABonusDepositWithdraw DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override ProtoOABonusDepositWithdraw DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override ProtoOABonusDepositWithdraw ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::OpenApiModelMessages.internal__static_ProtoOABonusDepositWithdraw__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<ProtoOABonusDepositWithdraw, ProtoOABonusDepositWithdraw.Builder> InternalFieldAccessors {
    get { return global::OpenApiModelMessages.internal__static_ProtoOABonusDepositWithdraw__FieldAccessorTable; }
  }
  
  public const int OperationTypeFieldNumber = 1;
  private bool hasOperationType;
  private global::ProtoOAChangeBonusType operationType_ = global::ProtoOAChangeBonusType.BONUS_DEPOSIT;
  public bool HasOperationType {
    get { return hasOperationType; }
  }
  public global::ProtoOAChangeBonusType OperationType {
    get { return operationType_; }
  }
  
  public const int BonusHistoryIdFieldNumber = 2;
  private bool hasBonusHistoryId;
  private long bonusHistoryId_;
  public bool HasBonusHistoryId {
    get { return hasBonusHistoryId; }
  }
  public long BonusHistoryId {
    get { return bonusHistoryId_; }
  }
  
  public const int ManagerBonusFieldNumber = 3;
  private bool hasManagerBonus;
  private long managerBonus_;
  public bool HasManagerBonus {
    get { return hasManagerBonus; }
  }
  public long ManagerBonus {
    get { return managerBonus_; }
  }
  
  public const int ManagerDeltaFieldNumber = 4;
  private bool hasManagerDelta;
  private long managerDelta_;
  public bool HasManagerDelta {
    get { return hasManagerDelta; }
  }
  public long ManagerDelta {
    get { return managerDelta_; }
  }
  
  public const int IbBonusFieldNumber = 5;
  private bool hasIbBonus;
  private long ibBonus_;
  public bool HasIbBonus {
    get { return hasIbBonus; }
  }
  public long IbBonus {
    get { return ibBonus_; }
  }
  
  public const int IbDeltaFieldNumber = 6;
  private bool hasIbDelta;
  private long ibDelta_;
  public bool HasIbDelta {
    get { return hasIbDelta; }
  }
  public long IbDelta {
    get { return ibDelta_; }
  }
  
  public const int ChangeBonusTimestampFieldNumber = 7;
  private bool hasChangeBonusTimestamp;
  private long changeBonusTimestamp_;
  public bool HasChangeBonusTimestamp {
    get { return hasChangeBonusTimestamp; }
  }
  public long ChangeBonusTimestamp {
    get { return changeBonusTimestamp_; }
  }
  
  public const int ExternalNoteFieldNumber = 8;
  private bool hasExternalNote;
  private string externalNote_ = "";
  public bool HasExternalNote {
    get { return hasExternalNote; }
  }
  public string ExternalNote {
    get { return externalNote_; }
  }
  
  public const int IntroducingBrokerIdFieldNumber = 9;
  private bool hasIntroducingBrokerId;
  private long introducingBrokerId_;
  public bool HasIntroducingBrokerId {
    get { return hasIntroducingBrokerId; }
  }
  public long IntroducingBrokerId {
    get { return introducingBrokerId_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasOperationType) return false;
      if (!hasBonusHistoryId) return false;
      if (!hasManagerBonus) return false;
      if (!hasManagerDelta) return false;
      if (!hasIbBonus) return false;
      if (!hasIbDelta) return false;
      if (!hasChangeBonusTimestamp) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _protoOABonusDepositWithdrawFieldNames;
    if (hasOperationType) {
      output.WriteEnum(1, field_names[8], (int) OperationType, OperationType);
    }
    if (hasBonusHistoryId) {
      output.WriteInt64(2, field_names[0], BonusHistoryId);
    }
    if (hasManagerBonus) {
      output.WriteInt64(3, field_names[6], ManagerBonus);
    }
    if (hasManagerDelta) {
      output.WriteInt64(4, field_names[7], ManagerDelta);
    }
    if (hasIbBonus) {
      output.WriteInt64(5, field_names[3], IbBonus);
    }
    if (hasIbDelta) {
      output.WriteInt64(6, field_names[4], IbDelta);
    }
    if (hasChangeBonusTimestamp) {
      output.WriteInt64(7, field_names[1], ChangeBonusTimestamp);
    }
    if (hasExternalNote) {
      output.WriteString(8, field_names[2], ExternalNote);
    }
    if (hasIntroducingBrokerId) {
      output.WriteInt64(9, field_names[5], IntroducingBrokerId);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasOperationType) {
      size += pb::CodedOutputStream.ComputeEnumSize(1, (int) OperationType);
    }
    if (hasBonusHistoryId) {
      size += pb::CodedOutputStream.ComputeInt64Size(2, BonusHistoryId);
    }
    if (hasManagerBonus) {
      size += pb::CodedOutputStream.ComputeInt64Size(3, ManagerBonus);
    }
    if (hasManagerDelta) {
      size += pb::CodedOutputStream.ComputeInt64Size(4, ManagerDelta);
    }
    if (hasIbBonus) {
      size += pb::CodedOutputStream.ComputeInt64Size(5, IbBonus);
    }
    if (hasIbDelta) {
      size += pb::CodedOutputStream.ComputeInt64Size(6, IbDelta);
    }
    if (hasChangeBonusTimestamp) {
      size += pb::CodedOutputStream.ComputeInt64Size(7, ChangeBonusTimestamp);
    }
    if (hasExternalNote) {
      size += pb::CodedOutputStream.ComputeStringSize(8, ExternalNote);
    }
    if (hasIntroducingBrokerId) {
      size += pb::CodedOutputStream.ComputeInt64Size(9, IntroducingBrokerId);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static ProtoOABonusDepositWithdraw ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOABonusDepositWithdraw ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOABonusDepositWithdraw ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOABonusDepositWithdraw ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOABonusDepositWithdraw ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOABonusDepositWithdraw ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static ProtoOABonusDepositWithdraw ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static ProtoOABonusDepositWithdraw ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static ProtoOABonusDepositWithdraw ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOABonusDepositWithdraw ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private ProtoOABonusDepositWithdraw MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(ProtoOABonusDepositWithdraw prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<ProtoOABonusDepositWithdraw, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(ProtoOABonusDepositWithdraw cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private ProtoOABonusDepositWithdraw result;
    
    private ProtoOABonusDepositWithdraw PrepareBuilder() {
      if (resultIsReadOnly) {
        ProtoOABonusDepositWithdraw original = result;
        result = new ProtoOABonusDepositWithdraw();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override ProtoOABonusDepositWithdraw MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::ProtoOABonusDepositWithdraw.Descriptor; }
    }
    
    public override ProtoOABonusDepositWithdraw DefaultInstanceForType {
      get { return global::ProtoOABonusDepositWithdraw.DefaultInstance; }
    }
    
    public override ProtoOABonusDepositWithdraw BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is ProtoOABonusDepositWithdraw) {
        return MergeFrom((ProtoOABonusDepositWithdraw) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(ProtoOABonusDepositWithdraw other) {
      if (other == global::ProtoOABonusDepositWithdraw.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasOperationType) {
        OperationType = other.OperationType;
      }
      if (other.HasBonusHistoryId) {
        BonusHistoryId = other.BonusHistoryId;
      }
      if (other.HasManagerBonus) {
        ManagerBonus = other.ManagerBonus;
      }
      if (other.HasManagerDelta) {
        ManagerDelta = other.ManagerDelta;
      }
      if (other.HasIbBonus) {
        IbBonus = other.IbBonus;
      }
      if (other.HasIbDelta) {
        IbDelta = other.IbDelta;
      }
      if (other.HasChangeBonusTimestamp) {
        ChangeBonusTimestamp = other.ChangeBonusTimestamp;
      }
      if (other.HasExternalNote) {
        ExternalNote = other.ExternalNote;
      }
      if (other.HasIntroducingBrokerId) {
        IntroducingBrokerId = other.IntroducingBrokerId;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_protoOABonusDepositWithdrawFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _protoOABonusDepositWithdrawFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            object unknown;
            if(input.ReadEnum(ref result.operationType_, out unknown)) {
              result.hasOperationType = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(1, (ulong)(int)unknown);
            }
            break;
          }
          case 16: {
            result.hasBonusHistoryId = input.ReadInt64(ref result.bonusHistoryId_);
            break;
          }
          case 24: {
            result.hasManagerBonus = input.ReadInt64(ref result.managerBonus_);
            break;
          }
          case 32: {
            result.hasManagerDelta = input.ReadInt64(ref result.managerDelta_);
            break;
          }
          case 40: {
            result.hasIbBonus = input.ReadInt64(ref result.ibBonus_);
            break;
          }
          case 48: {
            result.hasIbDelta = input.ReadInt64(ref result.ibDelta_);
            break;
          }
          case 56: {
            result.hasChangeBonusTimestamp = input.ReadInt64(ref result.changeBonusTimestamp_);
            break;
          }
          case 66: {
            result.hasExternalNote = input.ReadString(ref result.externalNote_);
            break;
          }
          case 72: {
            result.hasIntroducingBrokerId = input.ReadInt64(ref result.introducingBrokerId_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasOperationType {
     get { return result.hasOperationType; }
    }
    public global::ProtoOAChangeBonusType OperationType {
      get { return result.OperationType; }
      set { SetOperationType(value); }
    }
    public Builder SetOperationType(global::ProtoOAChangeBonusType value) {
      PrepareBuilder();
      result.hasOperationType = true;
      result.operationType_ = value;
      return this;
    }
    public Builder ClearOperationType() {
      PrepareBuilder();
      result.hasOperationType = false;
      result.operationType_ = global::ProtoOAChangeBonusType.BONUS_DEPOSIT;
      return this;
    }
    
    public bool HasBonusHistoryId {
      get { return result.hasBonusHistoryId; }
    }
    public long BonusHistoryId {
      get { return result.BonusHistoryId; }
      set { SetBonusHistoryId(value); }
    }
    public Builder SetBonusHistoryId(long value) {
      PrepareBuilder();
      result.hasBonusHistoryId = true;
      result.bonusHistoryId_ = value;
      return this;
    }
    public Builder ClearBonusHistoryId() {
      PrepareBuilder();
      result.hasBonusHistoryId = false;
      result.bonusHistoryId_ = 0L;
      return this;
    }
    
    public bool HasManagerBonus {
      get { return result.hasManagerBonus; }
    }
    public long ManagerBonus {
      get { return result.ManagerBonus; }
      set { SetManagerBonus(value); }
    }
    public Builder SetManagerBonus(long value) {
      PrepareBuilder();
      result.hasManagerBonus = true;
      result.managerBonus_ = value;
      return this;
    }
    public Builder ClearManagerBonus() {
      PrepareBuilder();
      result.hasManagerBonus = false;
      result.managerBonus_ = 0L;
      return this;
    }
    
    public bool HasManagerDelta {
      get { return result.hasManagerDelta; }
    }
    public long ManagerDelta {
      get { return result.ManagerDelta; }
      set { SetManagerDelta(value); }
    }
    public Builder SetManagerDelta(long value) {
      PrepareBuilder();
      result.hasManagerDelta = true;
      result.managerDelta_ = value;
      return this;
    }
    public Builder ClearManagerDelta() {
      PrepareBuilder();
      result.hasManagerDelta = false;
      result.managerDelta_ = 0L;
      return this;
    }
    
    public bool HasIbBonus {
      get { return result.hasIbBonus; }
    }
    public long IbBonus {
      get { return result.IbBonus; }
      set { SetIbBonus(value); }
    }
    public Builder SetIbBonus(long value) {
      PrepareBuilder();
      result.hasIbBonus = true;
      result.ibBonus_ = value;
      return this;
    }
    public Builder ClearIbBonus() {
      PrepareBuilder();
      result.hasIbBonus = false;
      result.ibBonus_ = 0L;
      return this;
    }
    
    public bool HasIbDelta {
      get { return result.hasIbDelta; }
    }
    public long IbDelta {
      get { return result.IbDelta; }
      set { SetIbDelta(value); }
    }
    public Builder SetIbDelta(long value) {
      PrepareBuilder();
      result.hasIbDelta = true;
      result.ibDelta_ = value;
      return this;
    }
    public Builder ClearIbDelta() {
      PrepareBuilder();
      result.hasIbDelta = false;
      result.ibDelta_ = 0L;
      return this;
    }
    
    public bool HasChangeBonusTimestamp {
      get { return result.hasChangeBonusTimestamp; }
    }
    public long ChangeBonusTimestamp {
      get { return result.ChangeBonusTimestamp; }
      set { SetChangeBonusTimestamp(value); }
    }
    public Builder SetChangeBonusTimestamp(long value) {
      PrepareBuilder();
      result.hasChangeBonusTimestamp = true;
      result.changeBonusTimestamp_ = value;
      return this;
    }
    public Builder ClearChangeBonusTimestamp() {
      PrepareBuilder();
      result.hasChangeBonusTimestamp = false;
      result.changeBonusTimestamp_ = 0L;
      return this;
    }
    
    public bool HasExternalNote {
      get { return result.hasExternalNote; }
    }
    public string ExternalNote {
      get { return result.ExternalNote; }
      set { SetExternalNote(value); }
    }
    public Builder SetExternalNote(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasExternalNote = true;
      result.externalNote_ = value;
      return this;
    }
    public Builder ClearExternalNote() {
      PrepareBuilder();
      result.hasExternalNote = false;
      result.externalNote_ = "";
      return this;
    }
    
    public bool HasIntroducingBrokerId {
      get { return result.hasIntroducingBrokerId; }
    }
    public long IntroducingBrokerId {
      get { return result.IntroducingBrokerId; }
      set { SetIntroducingBrokerId(value); }
    }
    public Builder SetIntroducingBrokerId(long value) {
      PrepareBuilder();
      result.hasIntroducingBrokerId = true;
      result.introducingBrokerId_ = value;
      return this;
    }
    public Builder ClearIntroducingBrokerId() {
      PrepareBuilder();
      result.hasIntroducingBrokerId = false;
      result.introducingBrokerId_ = 0L;
      return this;
    }
  }
  static ProtoOABonusDepositWithdraw() {
    object.ReferenceEquals(global::OpenApiModelMessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class ProtoOADepositWithdraw : pb::GeneratedMessage<ProtoOADepositWithdraw, ProtoOADepositWithdraw.Builder> {
  private ProtoOADepositWithdraw() { }
  private static readonly ProtoOADepositWithdraw defaultInstance = new ProtoOADepositWithdraw().MakeReadOnly();
  private static readonly string[] _protoOADepositWithdrawFieldNames = new string[] { "balance", "balanceHistoryId", "balanceVersion", "changeBalanceTimestamp", "delta", "equity", "externalNote", "operationType" };
  private static readonly uint[] _protoOADepositWithdrawFieldTags = new uint[] { 24, 16, 56, 40, 32, 64, 50, 8 };
  public static ProtoOADepositWithdraw DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override ProtoOADepositWithdraw DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override ProtoOADepositWithdraw ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::OpenApiModelMessages.internal__static_ProtoOADepositWithdraw__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<ProtoOADepositWithdraw, ProtoOADepositWithdraw.Builder> InternalFieldAccessors {
    get { return global::OpenApiModelMessages.internal__static_ProtoOADepositWithdraw__FieldAccessorTable; }
  }
  
  public const int OperationTypeFieldNumber = 1;
  private bool hasOperationType;
  private global::ProtoOAChangeBalanceType operationType_ = global::ProtoOAChangeBalanceType.BALANCE_DEPOSIT;
  public bool HasOperationType {
    get { return hasOperationType; }
  }
  public global::ProtoOAChangeBalanceType OperationType {
    get { return operationType_; }
  }
  
  public const int BalanceHistoryIdFieldNumber = 2;
  private bool hasBalanceHistoryId;
  private long balanceHistoryId_;
  public bool HasBalanceHistoryId {
    get { return hasBalanceHistoryId; }
  }
  public long BalanceHistoryId {
    get { return balanceHistoryId_; }
  }
  
  public const int BalanceFieldNumber = 3;
  private bool hasBalance;
  private long balance_;
  public bool HasBalance {
    get { return hasBalance; }
  }
  public long Balance {
    get { return balance_; }
  }
  
  public const int DeltaFieldNumber = 4;
  private bool hasDelta;
  private long delta_;
  public bool HasDelta {
    get { return hasDelta; }
  }
  public long Delta {
    get { return delta_; }
  }
  
  public const int ChangeBalanceTimestampFieldNumber = 5;
  private bool hasChangeBalanceTimestamp;
  private long changeBalanceTimestamp_;
  public bool HasChangeBalanceTimestamp {
    get { return hasChangeBalanceTimestamp; }
  }
  public long ChangeBalanceTimestamp {
    get { return changeBalanceTimestamp_; }
  }
  
  public const int ExternalNoteFieldNumber = 6;
  private bool hasExternalNote;
  private string externalNote_ = "";
  public bool HasExternalNote {
    get { return hasExternalNote; }
  }
  public string ExternalNote {
    get { return externalNote_; }
  }
  
  public const int BalanceVersionFieldNumber = 7;
  private bool hasBalanceVersion;
  private long balanceVersion_;
  public bool HasBalanceVersion {
    get { return hasBalanceVersion; }
  }
  public long BalanceVersion {
    get { return balanceVersion_; }
  }
  
  public const int EquityFieldNumber = 8;
  private bool hasEquity;
  private long equity_;
  public bool HasEquity {
    get { return hasEquity; }
  }
  public long Equity {
    get { return equity_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasOperationType) return false;
      if (!hasBalanceHistoryId) return false;
      if (!hasBalance) return false;
      if (!hasDelta) return false;
      if (!hasChangeBalanceTimestamp) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _protoOADepositWithdrawFieldNames;
    if (hasOperationType) {
      output.WriteEnum(1, field_names[7], (int) OperationType, OperationType);
    }
    if (hasBalanceHistoryId) {
      output.WriteInt64(2, field_names[1], BalanceHistoryId);
    }
    if (hasBalance) {
      output.WriteInt64(3, field_names[0], Balance);
    }
    if (hasDelta) {
      output.WriteInt64(4, field_names[4], Delta);
    }
    if (hasChangeBalanceTimestamp) {
      output.WriteInt64(5, field_names[3], ChangeBalanceTimestamp);
    }
    if (hasExternalNote) {
      output.WriteString(6, field_names[6], ExternalNote);
    }
    if (hasBalanceVersion) {
      output.WriteInt64(7, field_names[2], BalanceVersion);
    }
    if (hasEquity) {
      output.WriteInt64(8, field_names[5], Equity);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasOperationType) {
      size += pb::CodedOutputStream.ComputeEnumSize(1, (int) OperationType);
    }
    if (hasBalanceHistoryId) {
      size += pb::CodedOutputStream.ComputeInt64Size(2, BalanceHistoryId);
    }
    if (hasBalance) {
      size += pb::CodedOutputStream.ComputeInt64Size(3, Balance);
    }
    if (hasDelta) {
      size += pb::CodedOutputStream.ComputeInt64Size(4, Delta);
    }
    if (hasChangeBalanceTimestamp) {
      size += pb::CodedOutputStream.ComputeInt64Size(5, ChangeBalanceTimestamp);
    }
    if (hasExternalNote) {
      size += pb::CodedOutputStream.ComputeStringSize(6, ExternalNote);
    }
    if (hasBalanceVersion) {
      size += pb::CodedOutputStream.ComputeInt64Size(7, BalanceVersion);
    }
    if (hasEquity) {
      size += pb::CodedOutputStream.ComputeInt64Size(8, Equity);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static ProtoOADepositWithdraw ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOADepositWithdraw ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOADepositWithdraw ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOADepositWithdraw ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOADepositWithdraw ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOADepositWithdraw ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static ProtoOADepositWithdraw ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static ProtoOADepositWithdraw ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static ProtoOADepositWithdraw ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOADepositWithdraw ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private ProtoOADepositWithdraw MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(ProtoOADepositWithdraw prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<ProtoOADepositWithdraw, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(ProtoOADepositWithdraw cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private ProtoOADepositWithdraw result;
    
    private ProtoOADepositWithdraw PrepareBuilder() {
      if (resultIsReadOnly) {
        ProtoOADepositWithdraw original = result;
        result = new ProtoOADepositWithdraw();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override ProtoOADepositWithdraw MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::ProtoOADepositWithdraw.Descriptor; }
    }
    
    public override ProtoOADepositWithdraw DefaultInstanceForType {
      get { return global::ProtoOADepositWithdraw.DefaultInstance; }
    }
    
    public override ProtoOADepositWithdraw BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is ProtoOADepositWithdraw) {
        return MergeFrom((ProtoOADepositWithdraw) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(ProtoOADepositWithdraw other) {
      if (other == global::ProtoOADepositWithdraw.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasOperationType) {
        OperationType = other.OperationType;
      }
      if (other.HasBalanceHistoryId) {
        BalanceHistoryId = other.BalanceHistoryId;
      }
      if (other.HasBalance) {
        Balance = other.Balance;
      }
      if (other.HasDelta) {
        Delta = other.Delta;
      }
      if (other.HasChangeBalanceTimestamp) {
        ChangeBalanceTimestamp = other.ChangeBalanceTimestamp;
      }
      if (other.HasExternalNote) {
        ExternalNote = other.ExternalNote;
      }
      if (other.HasBalanceVersion) {
        BalanceVersion = other.BalanceVersion;
      }
      if (other.HasEquity) {
        Equity = other.Equity;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_protoOADepositWithdrawFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _protoOADepositWithdrawFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            object unknown;
            if(input.ReadEnum(ref result.operationType_, out unknown)) {
              result.hasOperationType = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(1, (ulong)(int)unknown);
            }
            break;
          }
          case 16: {
            result.hasBalanceHistoryId = input.ReadInt64(ref result.balanceHistoryId_);
            break;
          }
          case 24: {
            result.hasBalance = input.ReadInt64(ref result.balance_);
            break;
          }
          case 32: {
            result.hasDelta = input.ReadInt64(ref result.delta_);
            break;
          }
          case 40: {
            result.hasChangeBalanceTimestamp = input.ReadInt64(ref result.changeBalanceTimestamp_);
            break;
          }
          case 50: {
            result.hasExternalNote = input.ReadString(ref result.externalNote_);
            break;
          }
          case 56: {
            result.hasBalanceVersion = input.ReadInt64(ref result.balanceVersion_);
            break;
          }
          case 64: {
            result.hasEquity = input.ReadInt64(ref result.equity_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasOperationType {
     get { return result.hasOperationType; }
    }
    public global::ProtoOAChangeBalanceType OperationType {
      get { return result.OperationType; }
      set { SetOperationType(value); }
    }
    public Builder SetOperationType(global::ProtoOAChangeBalanceType value) {
      PrepareBuilder();
      result.hasOperationType = true;
      result.operationType_ = value;
      return this;
    }
    public Builder ClearOperationType() {
      PrepareBuilder();
      result.hasOperationType = false;
      result.operationType_ = global::ProtoOAChangeBalanceType.BALANCE_DEPOSIT;
      return this;
    }
    
    public bool HasBalanceHistoryId {
      get { return result.hasBalanceHistoryId; }
    }
    public long BalanceHistoryId {
      get { return result.BalanceHistoryId; }
      set { SetBalanceHistoryId(value); }
    }
    public Builder SetBalanceHistoryId(long value) {
      PrepareBuilder();
      result.hasBalanceHistoryId = true;
      result.balanceHistoryId_ = value;
      return this;
    }
    public Builder ClearBalanceHistoryId() {
      PrepareBuilder();
      result.hasBalanceHistoryId = false;
      result.balanceHistoryId_ = 0L;
      return this;
    }
    
    public bool HasBalance {
      get { return result.hasBalance; }
    }
    public long Balance {
      get { return result.Balance; }
      set { SetBalance(value); }
    }
    public Builder SetBalance(long value) {
      PrepareBuilder();
      result.hasBalance = true;
      result.balance_ = value;
      return this;
    }
    public Builder ClearBalance() {
      PrepareBuilder();
      result.hasBalance = false;
      result.balance_ = 0L;
      return this;
    }
    
    public bool HasDelta {
      get { return result.hasDelta; }
    }
    public long Delta {
      get { return result.Delta; }
      set { SetDelta(value); }
    }
    public Builder SetDelta(long value) {
      PrepareBuilder();
      result.hasDelta = true;
      result.delta_ = value;
      return this;
    }
    public Builder ClearDelta() {
      PrepareBuilder();
      result.hasDelta = false;
      result.delta_ = 0L;
      return this;
    }
    
    public bool HasChangeBalanceTimestamp {
      get { return result.hasChangeBalanceTimestamp; }
    }
    public long ChangeBalanceTimestamp {
      get { return result.ChangeBalanceTimestamp; }
      set { SetChangeBalanceTimestamp(value); }
    }
    public Builder SetChangeBalanceTimestamp(long value) {
      PrepareBuilder();
      result.hasChangeBalanceTimestamp = true;
      result.changeBalanceTimestamp_ = value;
      return this;
    }
    public Builder ClearChangeBalanceTimestamp() {
      PrepareBuilder();
      result.hasChangeBalanceTimestamp = false;
      result.changeBalanceTimestamp_ = 0L;
      return this;
    }
    
    public bool HasExternalNote {
      get { return result.hasExternalNote; }
    }
    public string ExternalNote {
      get { return result.ExternalNote; }
      set { SetExternalNote(value); }
    }
    public Builder SetExternalNote(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasExternalNote = true;
      result.externalNote_ = value;
      return this;
    }
    public Builder ClearExternalNote() {
      PrepareBuilder();
      result.hasExternalNote = false;
      result.externalNote_ = "";
      return this;
    }
    
    public bool HasBalanceVersion {
      get { return result.hasBalanceVersion; }
    }
    public long BalanceVersion {
      get { return result.BalanceVersion; }
      set { SetBalanceVersion(value); }
    }
    public Builder SetBalanceVersion(long value) {
      PrepareBuilder();
      result.hasBalanceVersion = true;
      result.balanceVersion_ = value;
      return this;
    }
    public Builder ClearBalanceVersion() {
      PrepareBuilder();
      result.hasBalanceVersion = false;
      result.balanceVersion_ = 0L;
      return this;
    }
    
    public bool HasEquity {
      get { return result.hasEquity; }
    }
    public long Equity {
      get { return result.Equity; }
      set { SetEquity(value); }
    }
    public Builder SetEquity(long value) {
      PrepareBuilder();
      result.hasEquity = true;
      result.equity_ = value;
      return this;
    }
    public Builder ClearEquity() {
      PrepareBuilder();
      result.hasEquity = false;
      result.equity_ = 0L;
      return this;
    }
  }
  static ProtoOADepositWithdraw() {
    object.ReferenceEquals(global::OpenApiModelMessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class ProtoOADeal : pb::GeneratedMessage<ProtoOADeal, ProtoOADeal.Builder> {
  private ProtoOADeal() { }
  private static readonly ProtoOADeal defaultInstance = new ProtoOADeal().MakeReadOnly();
  private static readonly string[] _protoOADealFieldNames = new string[] { "baseToUsdConversionRate", "closePositionDetail", "commission", "createTimestamp", "dealId", "dealStatus", "executionPrice", "executionTimestamp", "filledVolume", "marginRate", "orderId", "positionId", "symbolId", "tradeSide", "utcLastUpdateTimestamp", "volume" };
  private static readonly uint[] _protoOADealFieldTags = new uint[] { 121, 130, 112, 56, 8, 96, 81, 64, 40, 105, 16, 24, 48, 88, 72, 32 };
  public static ProtoOADeal DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override ProtoOADeal DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override ProtoOADeal ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::OpenApiModelMessages.internal__static_ProtoOADeal__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<ProtoOADeal, ProtoOADeal.Builder> InternalFieldAccessors {
    get { return global::OpenApiModelMessages.internal__static_ProtoOADeal__FieldAccessorTable; }
  }
  
  public const int DealIdFieldNumber = 1;
  private bool hasDealId;
  private long dealId_;
  public bool HasDealId {
    get { return hasDealId; }
  }
  public long DealId {
    get { return dealId_; }
  }
  
  public const int OrderIdFieldNumber = 2;
  private bool hasOrderId;
  private long orderId_;
  public bool HasOrderId {
    get { return hasOrderId; }
  }
  public long OrderId {
    get { return orderId_; }
  }
  
  public const int PositionIdFieldNumber = 3;
  private bool hasPositionId;
  private long positionId_;
  public bool HasPositionId {
    get { return hasPositionId; }
  }
  public long PositionId {
    get { return positionId_; }
  }
  
  public const int VolumeFieldNumber = 4;
  private bool hasVolume;
  private long volume_;
  public bool HasVolume {
    get { return hasVolume; }
  }
  public long Volume {
    get { return volume_; }
  }
  
  public const int FilledVolumeFieldNumber = 5;
  private bool hasFilledVolume;
  private long filledVolume_;
  public bool HasFilledVolume {
    get { return hasFilledVolume; }
  }
  public long FilledVolume {
    get { return filledVolume_; }
  }
  
  public const int SymbolIdFieldNumber = 6;
  private bool hasSymbolId;
  private long symbolId_;
  public bool HasSymbolId {
    get { return hasSymbolId; }
  }
  public long SymbolId {
    get { return symbolId_; }
  }
  
  public const int CreateTimestampFieldNumber = 7;
  private bool hasCreateTimestamp;
  private long createTimestamp_;
  public bool HasCreateTimestamp {
    get { return hasCreateTimestamp; }
  }
  public long CreateTimestamp {
    get { return createTimestamp_; }
  }
  
  public const int ExecutionTimestampFieldNumber = 8;
  private bool hasExecutionTimestamp;
  private long executionTimestamp_;
  public bool HasExecutionTimestamp {
    get { return hasExecutionTimestamp; }
  }
  public long ExecutionTimestamp {
    get { return executionTimestamp_; }
  }
  
  public const int UtcLastUpdateTimestampFieldNumber = 9;
  private bool hasUtcLastUpdateTimestamp;
  private long utcLastUpdateTimestamp_;
  public bool HasUtcLastUpdateTimestamp {
    get { return hasUtcLastUpdateTimestamp; }
  }
  public long UtcLastUpdateTimestamp {
    get { return utcLastUpdateTimestamp_; }
  }
  
  public const int ExecutionPriceFieldNumber = 10;
  private bool hasExecutionPrice;
  private double executionPrice_;
  public bool HasExecutionPrice {
    get { return hasExecutionPrice; }
  }
  public double ExecutionPrice {
    get { return executionPrice_; }
  }
  
  public const int TradeSideFieldNumber = 11;
  private bool hasTradeSide;
  private global::ProtoOATradeSide tradeSide_ = global::ProtoOATradeSide.BUY;
  public bool HasTradeSide {
    get { return hasTradeSide; }
  }
  public global::ProtoOATradeSide TradeSide {
    get { return tradeSide_; }
  }
  
  public const int DealStatusFieldNumber = 12;
  private bool hasDealStatus;
  private global::ProtoOADealStatus dealStatus_ = global::ProtoOADealStatus.FILLED;
  public bool HasDealStatus {
    get { return hasDealStatus; }
  }
  public global::ProtoOADealStatus DealStatus {
    get { return dealStatus_; }
  }
  
  public const int MarginRateFieldNumber = 13;
  private bool hasMarginRate;
  private double marginRate_;
  public bool HasMarginRate {
    get { return hasMarginRate; }
  }
  public double MarginRate {
    get { return marginRate_; }
  }
  
  public const int CommissionFieldNumber = 14;
  private bool hasCommission;
  private long commission_;
  public bool HasCommission {
    get { return hasCommission; }
  }
  public long Commission {
    get { return commission_; }
  }
  
  public const int BaseToUsdConversionRateFieldNumber = 15;
  private bool hasBaseToUsdConversionRate;
  private double baseToUsdConversionRate_;
  public bool HasBaseToUsdConversionRate {
    get { return hasBaseToUsdConversionRate; }
  }
  public double BaseToUsdConversionRate {
    get { return baseToUsdConversionRate_; }
  }
  
  public const int ClosePositionDetailFieldNumber = 16;
  private bool hasClosePositionDetail;
  private global::ProtoOAClosePositionDetail closePositionDetail_;
  public bool HasClosePositionDetail {
    get { return hasClosePositionDetail; }
  }
  public global::ProtoOAClosePositionDetail ClosePositionDetail {
    get { return closePositionDetail_ ?? global::ProtoOAClosePositionDetail.DefaultInstance; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasDealId) return false;
      if (!hasOrderId) return false;
      if (!hasPositionId) return false;
      if (!hasVolume) return false;
      if (!hasFilledVolume) return false;
      if (!hasSymbolId) return false;
      if (!hasCreateTimestamp) return false;
      if (!hasExecutionTimestamp) return false;
      if (!hasTradeSide) return false;
      if (!hasDealStatus) return false;
      if (HasClosePositionDetail) {
        if (!ClosePositionDetail.IsInitialized) return false;
      }
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _protoOADealFieldNames;
    if (hasDealId) {
      output.WriteInt64(1, field_names[4], DealId);
    }
    if (hasOrderId) {
      output.WriteInt64(2, field_names[10], OrderId);
    }
    if (hasPositionId) {
      output.WriteInt64(3, field_names[11], PositionId);
    }
    if (hasVolume) {
      output.WriteInt64(4, field_names[15], Volume);
    }
    if (hasFilledVolume) {
      output.WriteInt64(5, field_names[8], FilledVolume);
    }
    if (hasSymbolId) {
      output.WriteInt64(6, field_names[12], SymbolId);
    }
    if (hasCreateTimestamp) {
      output.WriteInt64(7, field_names[3], CreateTimestamp);
    }
    if (hasExecutionTimestamp) {
      output.WriteInt64(8, field_names[7], ExecutionTimestamp);
    }
    if (hasUtcLastUpdateTimestamp) {
      output.WriteInt64(9, field_names[14], UtcLastUpdateTimestamp);
    }
    if (hasExecutionPrice) {
      output.WriteDouble(10, field_names[6], ExecutionPrice);
    }
    if (hasTradeSide) {
      output.WriteEnum(11, field_names[13], (int) TradeSide, TradeSide);
    }
    if (hasDealStatus) {
      output.WriteEnum(12, field_names[5], (int) DealStatus, DealStatus);
    }
    if (hasMarginRate) {
      output.WriteDouble(13, field_names[9], MarginRate);
    }
    if (hasCommission) {
      output.WriteInt64(14, field_names[2], Commission);
    }
    if (hasBaseToUsdConversionRate) {
      output.WriteDouble(15, field_names[0], BaseToUsdConversionRate);
    }
    if (hasClosePositionDetail) {
      output.WriteMessage(16, field_names[1], ClosePositionDetail);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasDealId) {
      size += pb::CodedOutputStream.ComputeInt64Size(1, DealId);
    }
    if (hasOrderId) {
      size += pb::CodedOutputStream.ComputeInt64Size(2, OrderId);
    }
    if (hasPositionId) {
      size += pb::CodedOutputStream.ComputeInt64Size(3, PositionId);
    }
    if (hasVolume) {
      size += pb::CodedOutputStream.ComputeInt64Size(4, Volume);
    }
    if (hasFilledVolume) {
      size += pb::CodedOutputStream.ComputeInt64Size(5, FilledVolume);
    }
    if (hasSymbolId) {
      size += pb::CodedOutputStream.ComputeInt64Size(6, SymbolId);
    }
    if (hasCreateTimestamp) {
      size += pb::CodedOutputStream.ComputeInt64Size(7, CreateTimestamp);
    }
    if (hasExecutionTimestamp) {
      size += pb::CodedOutputStream.ComputeInt64Size(8, ExecutionTimestamp);
    }
    if (hasUtcLastUpdateTimestamp) {
      size += pb::CodedOutputStream.ComputeInt64Size(9, UtcLastUpdateTimestamp);
    }
    if (hasExecutionPrice) {
      size += pb::CodedOutputStream.ComputeDoubleSize(10, ExecutionPrice);
    }
    if (hasTradeSide) {
      size += pb::CodedOutputStream.ComputeEnumSize(11, (int) TradeSide);
    }
    if (hasDealStatus) {
      size += pb::CodedOutputStream.ComputeEnumSize(12, (int) DealStatus);
    }
    if (hasMarginRate) {
      size += pb::CodedOutputStream.ComputeDoubleSize(13, MarginRate);
    }
    if (hasCommission) {
      size += pb::CodedOutputStream.ComputeInt64Size(14, Commission);
    }
    if (hasBaseToUsdConversionRate) {
      size += pb::CodedOutputStream.ComputeDoubleSize(15, BaseToUsdConversionRate);
    }
    if (hasClosePositionDetail) {
      size += pb::CodedOutputStream.ComputeMessageSize(16, ClosePositionDetail);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static ProtoOADeal ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOADeal ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOADeal ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOADeal ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOADeal ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOADeal ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static ProtoOADeal ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static ProtoOADeal ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static ProtoOADeal ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOADeal ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private ProtoOADeal MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(ProtoOADeal prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<ProtoOADeal, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(ProtoOADeal cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private ProtoOADeal result;
    
    private ProtoOADeal PrepareBuilder() {
      if (resultIsReadOnly) {
        ProtoOADeal original = result;
        result = new ProtoOADeal();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override ProtoOADeal MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::ProtoOADeal.Descriptor; }
    }
    
    public override ProtoOADeal DefaultInstanceForType {
      get { return global::ProtoOADeal.DefaultInstance; }
    }
    
    public override ProtoOADeal BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is ProtoOADeal) {
        return MergeFrom((ProtoOADeal) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(ProtoOADeal other) {
      if (other == global::ProtoOADeal.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasDealId) {
        DealId = other.DealId;
      }
      if (other.HasOrderId) {
        OrderId = other.OrderId;
      }
      if (other.HasPositionId) {
        PositionId = other.PositionId;
      }
      if (other.HasVolume) {
        Volume = other.Volume;
      }
      if (other.HasFilledVolume) {
        FilledVolume = other.FilledVolume;
      }
      if (other.HasSymbolId) {
        SymbolId = other.SymbolId;
      }
      if (other.HasCreateTimestamp) {
        CreateTimestamp = other.CreateTimestamp;
      }
      if (other.HasExecutionTimestamp) {
        ExecutionTimestamp = other.ExecutionTimestamp;
      }
      if (other.HasUtcLastUpdateTimestamp) {
        UtcLastUpdateTimestamp = other.UtcLastUpdateTimestamp;
      }
      if (other.HasExecutionPrice) {
        ExecutionPrice = other.ExecutionPrice;
      }
      if (other.HasTradeSide) {
        TradeSide = other.TradeSide;
      }
      if (other.HasDealStatus) {
        DealStatus = other.DealStatus;
      }
      if (other.HasMarginRate) {
        MarginRate = other.MarginRate;
      }
      if (other.HasCommission) {
        Commission = other.Commission;
      }
      if (other.HasBaseToUsdConversionRate) {
        BaseToUsdConversionRate = other.BaseToUsdConversionRate;
      }
      if (other.HasClosePositionDetail) {
        MergeClosePositionDetail(other.ClosePositionDetail);
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_protoOADealFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _protoOADealFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasDealId = input.ReadInt64(ref result.dealId_);
            break;
          }
          case 16: {
            result.hasOrderId = input.ReadInt64(ref result.orderId_);
            break;
          }
          case 24: {
            result.hasPositionId = input.ReadInt64(ref result.positionId_);
            break;
          }
          case 32: {
            result.hasVolume = input.ReadInt64(ref result.volume_);
            break;
          }
          case 40: {
            result.hasFilledVolume = input.ReadInt64(ref result.filledVolume_);
            break;
          }
          case 48: {
            result.hasSymbolId = input.ReadInt64(ref result.symbolId_);
            break;
          }
          case 56: {
            result.hasCreateTimestamp = input.ReadInt64(ref result.createTimestamp_);
            break;
          }
          case 64: {
            result.hasExecutionTimestamp = input.ReadInt64(ref result.executionTimestamp_);
            break;
          }
          case 72: {
            result.hasUtcLastUpdateTimestamp = input.ReadInt64(ref result.utcLastUpdateTimestamp_);
            break;
          }
          case 81: {
            result.hasExecutionPrice = input.ReadDouble(ref result.executionPrice_);
            break;
          }
          case 88: {
            object unknown;
            if(input.ReadEnum(ref result.tradeSide_, out unknown)) {
              result.hasTradeSide = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(11, (ulong)(int)unknown);
            }
            break;
          }
          case 96: {
            object unknown;
            if(input.ReadEnum(ref result.dealStatus_, out unknown)) {
              result.hasDealStatus = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(12, (ulong)(int)unknown);
            }
            break;
          }
          case 105: {
            result.hasMarginRate = input.ReadDouble(ref result.marginRate_);
            break;
          }
          case 112: {
            result.hasCommission = input.ReadInt64(ref result.commission_);
            break;
          }
          case 121: {
            result.hasBaseToUsdConversionRate = input.ReadDouble(ref result.baseToUsdConversionRate_);
            break;
          }
          case 130: {
            global::ProtoOAClosePositionDetail.Builder subBuilder = global::ProtoOAClosePositionDetail.CreateBuilder();
            if (result.hasClosePositionDetail) {
              subBuilder.MergeFrom(ClosePositionDetail);
            }
            input.ReadMessage(subBuilder, extensionRegistry);
            ClosePositionDetail = subBuilder.BuildPartial();
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasDealId {
      get { return result.hasDealId; }
    }
    public long DealId {
      get { return result.DealId; }
      set { SetDealId(value); }
    }
    public Builder SetDealId(long value) {
      PrepareBuilder();
      result.hasDealId = true;
      result.dealId_ = value;
      return this;
    }
    public Builder ClearDealId() {
      PrepareBuilder();
      result.hasDealId = false;
      result.dealId_ = 0L;
      return this;
    }
    
    public bool HasOrderId {
      get { return result.hasOrderId; }
    }
    public long OrderId {
      get { return result.OrderId; }
      set { SetOrderId(value); }
    }
    public Builder SetOrderId(long value) {
      PrepareBuilder();
      result.hasOrderId = true;
      result.orderId_ = value;
      return this;
    }
    public Builder ClearOrderId() {
      PrepareBuilder();
      result.hasOrderId = false;
      result.orderId_ = 0L;
      return this;
    }
    
    public bool HasPositionId {
      get { return result.hasPositionId; }
    }
    public long PositionId {
      get { return result.PositionId; }
      set { SetPositionId(value); }
    }
    public Builder SetPositionId(long value) {
      PrepareBuilder();
      result.hasPositionId = true;
      result.positionId_ = value;
      return this;
    }
    public Builder ClearPositionId() {
      PrepareBuilder();
      result.hasPositionId = false;
      result.positionId_ = 0L;
      return this;
    }
    
    public bool HasVolume {
      get { return result.hasVolume; }
    }
    public long Volume {
      get { return result.Volume; }
      set { SetVolume(value); }
    }
    public Builder SetVolume(long value) {
      PrepareBuilder();
      result.hasVolume = true;
      result.volume_ = value;
      return this;
    }
    public Builder ClearVolume() {
      PrepareBuilder();
      result.hasVolume = false;
      result.volume_ = 0L;
      return this;
    }
    
    public bool HasFilledVolume {
      get { return result.hasFilledVolume; }
    }
    public long FilledVolume {
      get { return result.FilledVolume; }
      set { SetFilledVolume(value); }
    }
    public Builder SetFilledVolume(long value) {
      PrepareBuilder();
      result.hasFilledVolume = true;
      result.filledVolume_ = value;
      return this;
    }
    public Builder ClearFilledVolume() {
      PrepareBuilder();
      result.hasFilledVolume = false;
      result.filledVolume_ = 0L;
      return this;
    }
    
    public bool HasSymbolId {
      get { return result.hasSymbolId; }
    }
    public long SymbolId {
      get { return result.SymbolId; }
      set { SetSymbolId(value); }
    }
    public Builder SetSymbolId(long value) {
      PrepareBuilder();
      result.hasSymbolId = true;
      result.symbolId_ = value;
      return this;
    }
    public Builder ClearSymbolId() {
      PrepareBuilder();
      result.hasSymbolId = false;
      result.symbolId_ = 0L;
      return this;
    }
    
    public bool HasCreateTimestamp {
      get { return result.hasCreateTimestamp; }
    }
    public long CreateTimestamp {
      get { return result.CreateTimestamp; }
      set { SetCreateTimestamp(value); }
    }
    public Builder SetCreateTimestamp(long value) {
      PrepareBuilder();
      result.hasCreateTimestamp = true;
      result.createTimestamp_ = value;
      return this;
    }
    public Builder ClearCreateTimestamp() {
      PrepareBuilder();
      result.hasCreateTimestamp = false;
      result.createTimestamp_ = 0L;
      return this;
    }
    
    public bool HasExecutionTimestamp {
      get { return result.hasExecutionTimestamp; }
    }
    public long ExecutionTimestamp {
      get { return result.ExecutionTimestamp; }
      set { SetExecutionTimestamp(value); }
    }
    public Builder SetExecutionTimestamp(long value) {
      PrepareBuilder();
      result.hasExecutionTimestamp = true;
      result.executionTimestamp_ = value;
      return this;
    }
    public Builder ClearExecutionTimestamp() {
      PrepareBuilder();
      result.hasExecutionTimestamp = false;
      result.executionTimestamp_ = 0L;
      return this;
    }
    
    public bool HasUtcLastUpdateTimestamp {
      get { return result.hasUtcLastUpdateTimestamp; }
    }
    public long UtcLastUpdateTimestamp {
      get { return result.UtcLastUpdateTimestamp; }
      set { SetUtcLastUpdateTimestamp(value); }
    }
    public Builder SetUtcLastUpdateTimestamp(long value) {
      PrepareBuilder();
      result.hasUtcLastUpdateTimestamp = true;
      result.utcLastUpdateTimestamp_ = value;
      return this;
    }
    public Builder ClearUtcLastUpdateTimestamp() {
      PrepareBuilder();
      result.hasUtcLastUpdateTimestamp = false;
      result.utcLastUpdateTimestamp_ = 0L;
      return this;
    }
    
    public bool HasExecutionPrice {
      get { return result.hasExecutionPrice; }
    }
    public double ExecutionPrice {
      get { return result.ExecutionPrice; }
      set { SetExecutionPrice(value); }
    }
    public Builder SetExecutionPrice(double value) {
      PrepareBuilder();
      result.hasExecutionPrice = true;
      result.executionPrice_ = value;
      return this;
    }
    public Builder ClearExecutionPrice() {
      PrepareBuilder();
      result.hasExecutionPrice = false;
      result.executionPrice_ = 0D;
      return this;
    }
    
    public bool HasTradeSide {
     get { return result.hasTradeSide; }
    }
    public global::ProtoOATradeSide TradeSide {
      get { return result.TradeSide; }
      set { SetTradeSide(value); }
    }
    public Builder SetTradeSide(global::ProtoOATradeSide value) {
      PrepareBuilder();
      result.hasTradeSide = true;
      result.tradeSide_ = value;
      return this;
    }
    public Builder ClearTradeSide() {
      PrepareBuilder();
      result.hasTradeSide = false;
      result.tradeSide_ = global::ProtoOATradeSide.BUY;
      return this;
    }
    
    public bool HasDealStatus {
     get { return result.hasDealStatus; }
    }
    public global::ProtoOADealStatus DealStatus {
      get { return result.DealStatus; }
      set { SetDealStatus(value); }
    }
    public Builder SetDealStatus(global::ProtoOADealStatus value) {
      PrepareBuilder();
      result.hasDealStatus = true;
      result.dealStatus_ = value;
      return this;
    }
    public Builder ClearDealStatus() {
      PrepareBuilder();
      result.hasDealStatus = false;
      result.dealStatus_ = global::ProtoOADealStatus.FILLED;
      return this;
    }
    
    public bool HasMarginRate {
      get { return result.hasMarginRate; }
    }
    public double MarginRate {
      get { return result.MarginRate; }
      set { SetMarginRate(value); }
    }
    public Builder SetMarginRate(double value) {
      PrepareBuilder();
      result.hasMarginRate = true;
      result.marginRate_ = value;
      return this;
    }
    public Builder ClearMarginRate() {
      PrepareBuilder();
      result.hasMarginRate = false;
      result.marginRate_ = 0D;
      return this;
    }
    
    public bool HasCommission {
      get { return result.hasCommission; }
    }
    public long Commission {
      get { return result.Commission; }
      set { SetCommission(value); }
    }
    public Builder SetCommission(long value) {
      PrepareBuilder();
      result.hasCommission = true;
      result.commission_ = value;
      return this;
    }
    public Builder ClearCommission() {
      PrepareBuilder();
      result.hasCommission = false;
      result.commission_ = 0L;
      return this;
    }
    
    public bool HasBaseToUsdConversionRate {
      get { return result.hasBaseToUsdConversionRate; }
    }
    public double BaseToUsdConversionRate {
      get { return result.BaseToUsdConversionRate; }
      set { SetBaseToUsdConversionRate(value); }
    }
    public Builder SetBaseToUsdConversionRate(double value) {
      PrepareBuilder();
      result.hasBaseToUsdConversionRate = true;
      result.baseToUsdConversionRate_ = value;
      return this;
    }
    public Builder ClearBaseToUsdConversionRate() {
      PrepareBuilder();
      result.hasBaseToUsdConversionRate = false;
      result.baseToUsdConversionRate_ = 0D;
      return this;
    }
    
    public bool HasClosePositionDetail {
     get { return result.hasClosePositionDetail; }
    }
    public global::ProtoOAClosePositionDetail ClosePositionDetail {
      get { return result.ClosePositionDetail; }
      set { SetClosePositionDetail(value); }
    }
    public Builder SetClosePositionDetail(global::ProtoOAClosePositionDetail value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasClosePositionDetail = true;
      result.closePositionDetail_ = value;
      return this;
    }
    public Builder SetClosePositionDetail(global::ProtoOAClosePositionDetail.Builder builderForValue) {
      pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
      PrepareBuilder();
      result.hasClosePositionDetail = true;
      result.closePositionDetail_ = builderForValue.Build();
      return this;
    }
    public Builder MergeClosePositionDetail(global::ProtoOAClosePositionDetail value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      if (result.hasClosePositionDetail &&
          result.closePositionDetail_ != global::ProtoOAClosePositionDetail.DefaultInstance) {
          result.closePositionDetail_ = global::ProtoOAClosePositionDetail.CreateBuilder(result.closePositionDetail_).MergeFrom(value).BuildPartial();
      } else {
        result.closePositionDetail_ = value;
      }
      result.hasClosePositionDetail = true;
      return this;
    }
    public Builder ClearClosePositionDetail() {
      PrepareBuilder();
      result.hasClosePositionDetail = false;
      result.closePositionDetail_ = null;
      return this;
    }
  }
  static ProtoOADeal() {
    object.ReferenceEquals(global::OpenApiModelMessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class ProtoOAClosePositionDetail : pb::GeneratedMessage<ProtoOAClosePositionDetail, ProtoOAClosePositionDetail.Builder> {
  private ProtoOAClosePositionDetail() { }
  private static readonly ProtoOAClosePositionDetail defaultInstance = new ProtoOAClosePositionDetail().MakeReadOnly();
  private static readonly string[] _protoOAClosePositionDetailFieldNames = new string[] { "balance", "balanceVersion", "closedVolume", "commission", "entryPrice", "grossProfit", "quoteToDepositConversionRate", "swap" };
  private static readonly uint[] _protoOAClosePositionDetailFieldTags = new uint[] { 40, 64, 56, 32, 9, 16, 49, 24 };
  public static ProtoOAClosePositionDetail DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override ProtoOAClosePositionDetail DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override ProtoOAClosePositionDetail ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::OpenApiModelMessages.internal__static_ProtoOAClosePositionDetail__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<ProtoOAClosePositionDetail, ProtoOAClosePositionDetail.Builder> InternalFieldAccessors {
    get { return global::OpenApiModelMessages.internal__static_ProtoOAClosePositionDetail__FieldAccessorTable; }
  }
  
  public const int EntryPriceFieldNumber = 1;
  private bool hasEntryPrice;
  private double entryPrice_;
  public bool HasEntryPrice {
    get { return hasEntryPrice; }
  }
  public double EntryPrice {
    get { return entryPrice_; }
  }
  
  public const int GrossProfitFieldNumber = 2;
  private bool hasGrossProfit;
  private long grossProfit_;
  public bool HasGrossProfit {
    get { return hasGrossProfit; }
  }
  public long GrossProfit {
    get { return grossProfit_; }
  }
  
  public const int SwapFieldNumber = 3;
  private bool hasSwap;
  private long swap_;
  public bool HasSwap {
    get { return hasSwap; }
  }
  public long Swap {
    get { return swap_; }
  }
  
  public const int CommissionFieldNumber = 4;
  private bool hasCommission;
  private long commission_;
  public bool HasCommission {
    get { return hasCommission; }
  }
  public long Commission {
    get { return commission_; }
  }
  
  public const int BalanceFieldNumber = 5;
  private bool hasBalance;
  private long balance_;
  public bool HasBalance {
    get { return hasBalance; }
  }
  public long Balance {
    get { return balance_; }
  }
  
  public const int QuoteToDepositConversionRateFieldNumber = 6;
  private bool hasQuoteToDepositConversionRate;
  private double quoteToDepositConversionRate_;
  public bool HasQuoteToDepositConversionRate {
    get { return hasQuoteToDepositConversionRate; }
  }
  public double QuoteToDepositConversionRate {
    get { return quoteToDepositConversionRate_; }
  }
  
  public const int ClosedVolumeFieldNumber = 7;
  private bool hasClosedVolume;
  private long closedVolume_;
  public bool HasClosedVolume {
    get { return hasClosedVolume; }
  }
  public long ClosedVolume {
    get { return closedVolume_; }
  }
  
  public const int BalanceVersionFieldNumber = 8;
  private bool hasBalanceVersion;
  private long balanceVersion_;
  public bool HasBalanceVersion {
    get { return hasBalanceVersion; }
  }
  public long BalanceVersion {
    get { return balanceVersion_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasEntryPrice) return false;
      if (!hasGrossProfit) return false;
      if (!hasSwap) return false;
      if (!hasCommission) return false;
      if (!hasBalance) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _protoOAClosePositionDetailFieldNames;
    if (hasEntryPrice) {
      output.WriteDouble(1, field_names[4], EntryPrice);
    }
    if (hasGrossProfit) {
      output.WriteInt64(2, field_names[5], GrossProfit);
    }
    if (hasSwap) {
      output.WriteInt64(3, field_names[7], Swap);
    }
    if (hasCommission) {
      output.WriteInt64(4, field_names[3], Commission);
    }
    if (hasBalance) {
      output.WriteInt64(5, field_names[0], Balance);
    }
    if (hasQuoteToDepositConversionRate) {
      output.WriteDouble(6, field_names[6], QuoteToDepositConversionRate);
    }
    if (hasClosedVolume) {
      output.WriteInt64(7, field_names[2], ClosedVolume);
    }
    if (hasBalanceVersion) {
      output.WriteInt64(8, field_names[1], BalanceVersion);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasEntryPrice) {
      size += pb::CodedOutputStream.ComputeDoubleSize(1, EntryPrice);
    }
    if (hasGrossProfit) {
      size += pb::CodedOutputStream.ComputeInt64Size(2, GrossProfit);
    }
    if (hasSwap) {
      size += pb::CodedOutputStream.ComputeInt64Size(3, Swap);
    }
    if (hasCommission) {
      size += pb::CodedOutputStream.ComputeInt64Size(4, Commission);
    }
    if (hasBalance) {
      size += pb::CodedOutputStream.ComputeInt64Size(5, Balance);
    }
    if (hasQuoteToDepositConversionRate) {
      size += pb::CodedOutputStream.ComputeDoubleSize(6, QuoteToDepositConversionRate);
    }
    if (hasClosedVolume) {
      size += pb::CodedOutputStream.ComputeInt64Size(7, ClosedVolume);
    }
    if (hasBalanceVersion) {
      size += pb::CodedOutputStream.ComputeInt64Size(8, BalanceVersion);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static ProtoOAClosePositionDetail ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOAClosePositionDetail ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOAClosePositionDetail ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOAClosePositionDetail ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOAClosePositionDetail ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOAClosePositionDetail ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static ProtoOAClosePositionDetail ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static ProtoOAClosePositionDetail ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static ProtoOAClosePositionDetail ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOAClosePositionDetail ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private ProtoOAClosePositionDetail MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(ProtoOAClosePositionDetail prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<ProtoOAClosePositionDetail, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(ProtoOAClosePositionDetail cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private ProtoOAClosePositionDetail result;
    
    private ProtoOAClosePositionDetail PrepareBuilder() {
      if (resultIsReadOnly) {
        ProtoOAClosePositionDetail original = result;
        result = new ProtoOAClosePositionDetail();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override ProtoOAClosePositionDetail MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::ProtoOAClosePositionDetail.Descriptor; }
    }
    
    public override ProtoOAClosePositionDetail DefaultInstanceForType {
      get { return global::ProtoOAClosePositionDetail.DefaultInstance; }
    }
    
    public override ProtoOAClosePositionDetail BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is ProtoOAClosePositionDetail) {
        return MergeFrom((ProtoOAClosePositionDetail) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(ProtoOAClosePositionDetail other) {
      if (other == global::ProtoOAClosePositionDetail.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasEntryPrice) {
        EntryPrice = other.EntryPrice;
      }
      if (other.HasGrossProfit) {
        GrossProfit = other.GrossProfit;
      }
      if (other.HasSwap) {
        Swap = other.Swap;
      }
      if (other.HasCommission) {
        Commission = other.Commission;
      }
      if (other.HasBalance) {
        Balance = other.Balance;
      }
      if (other.HasQuoteToDepositConversionRate) {
        QuoteToDepositConversionRate = other.QuoteToDepositConversionRate;
      }
      if (other.HasClosedVolume) {
        ClosedVolume = other.ClosedVolume;
      }
      if (other.HasBalanceVersion) {
        BalanceVersion = other.BalanceVersion;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_protoOAClosePositionDetailFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _protoOAClosePositionDetailFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 9: {
            result.hasEntryPrice = input.ReadDouble(ref result.entryPrice_);
            break;
          }
          case 16: {
            result.hasGrossProfit = input.ReadInt64(ref result.grossProfit_);
            break;
          }
          case 24: {
            result.hasSwap = input.ReadInt64(ref result.swap_);
            break;
          }
          case 32: {
            result.hasCommission = input.ReadInt64(ref result.commission_);
            break;
          }
          case 40: {
            result.hasBalance = input.ReadInt64(ref result.balance_);
            break;
          }
          case 49: {
            result.hasQuoteToDepositConversionRate = input.ReadDouble(ref result.quoteToDepositConversionRate_);
            break;
          }
          case 56: {
            result.hasClosedVolume = input.ReadInt64(ref result.closedVolume_);
            break;
          }
          case 64: {
            result.hasBalanceVersion = input.ReadInt64(ref result.balanceVersion_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasEntryPrice {
      get { return result.hasEntryPrice; }
    }
    public double EntryPrice {
      get { return result.EntryPrice; }
      set { SetEntryPrice(value); }
    }
    public Builder SetEntryPrice(double value) {
      PrepareBuilder();
      result.hasEntryPrice = true;
      result.entryPrice_ = value;
      return this;
    }
    public Builder ClearEntryPrice() {
      PrepareBuilder();
      result.hasEntryPrice = false;
      result.entryPrice_ = 0D;
      return this;
    }
    
    public bool HasGrossProfit {
      get { return result.hasGrossProfit; }
    }
    public long GrossProfit {
      get { return result.GrossProfit; }
      set { SetGrossProfit(value); }
    }
    public Builder SetGrossProfit(long value) {
      PrepareBuilder();
      result.hasGrossProfit = true;
      result.grossProfit_ = value;
      return this;
    }
    public Builder ClearGrossProfit() {
      PrepareBuilder();
      result.hasGrossProfit = false;
      result.grossProfit_ = 0L;
      return this;
    }
    
    public bool HasSwap {
      get { return result.hasSwap; }
    }
    public long Swap {
      get { return result.Swap; }
      set { SetSwap(value); }
    }
    public Builder SetSwap(long value) {
      PrepareBuilder();
      result.hasSwap = true;
      result.swap_ = value;
      return this;
    }
    public Builder ClearSwap() {
      PrepareBuilder();
      result.hasSwap = false;
      result.swap_ = 0L;
      return this;
    }
    
    public bool HasCommission {
      get { return result.hasCommission; }
    }
    public long Commission {
      get { return result.Commission; }
      set { SetCommission(value); }
    }
    public Builder SetCommission(long value) {
      PrepareBuilder();
      result.hasCommission = true;
      result.commission_ = value;
      return this;
    }
    public Builder ClearCommission() {
      PrepareBuilder();
      result.hasCommission = false;
      result.commission_ = 0L;
      return this;
    }
    
    public bool HasBalance {
      get { return result.hasBalance; }
    }
    public long Balance {
      get { return result.Balance; }
      set { SetBalance(value); }
    }
    public Builder SetBalance(long value) {
      PrepareBuilder();
      result.hasBalance = true;
      result.balance_ = value;
      return this;
    }
    public Builder ClearBalance() {
      PrepareBuilder();
      result.hasBalance = false;
      result.balance_ = 0L;
      return this;
    }
    
    public bool HasQuoteToDepositConversionRate {
      get { return result.hasQuoteToDepositConversionRate; }
    }
    public double QuoteToDepositConversionRate {
      get { return result.QuoteToDepositConversionRate; }
      set { SetQuoteToDepositConversionRate(value); }
    }
    public Builder SetQuoteToDepositConversionRate(double value) {
      PrepareBuilder();
      result.hasQuoteToDepositConversionRate = true;
      result.quoteToDepositConversionRate_ = value;
      return this;
    }
    public Builder ClearQuoteToDepositConversionRate() {
      PrepareBuilder();
      result.hasQuoteToDepositConversionRate = false;
      result.quoteToDepositConversionRate_ = 0D;
      return this;
    }
    
    public bool HasClosedVolume {
      get { return result.hasClosedVolume; }
    }
    public long ClosedVolume {
      get { return result.ClosedVolume; }
      set { SetClosedVolume(value); }
    }
    public Builder SetClosedVolume(long value) {
      PrepareBuilder();
      result.hasClosedVolume = true;
      result.closedVolume_ = value;
      return this;
    }
    public Builder ClearClosedVolume() {
      PrepareBuilder();
      result.hasClosedVolume = false;
      result.closedVolume_ = 0L;
      return this;
    }
    
    public bool HasBalanceVersion {
      get { return result.hasBalanceVersion; }
    }
    public long BalanceVersion {
      get { return result.BalanceVersion; }
      set { SetBalanceVersion(value); }
    }
    public Builder SetBalanceVersion(long value) {
      PrepareBuilder();
      result.hasBalanceVersion = true;
      result.balanceVersion_ = value;
      return this;
    }
    public Builder ClearBalanceVersion() {
      PrepareBuilder();
      result.hasBalanceVersion = false;
      result.balanceVersion_ = 0L;
      return this;
    }
  }
  static ProtoOAClosePositionDetail() {
    object.ReferenceEquals(global::OpenApiModelMessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class ProtoOATrendbar : pb::GeneratedMessage<ProtoOATrendbar, ProtoOATrendbar.Builder> {
  private ProtoOATrendbar() { }
  private static readonly ProtoOATrendbar defaultInstance = new ProtoOATrendbar().MakeReadOnly();
  private static readonly string[] _protoOATrendbarFieldNames = new string[] { "deltaClose", "deltaHigh", "deltaOpen", "low", "period", "utcTimestampInMinutes", "volume" };
  private static readonly uint[] _protoOATrendbarFieldTags = new uint[] { 56, 64, 48, 40, 32, 72, 24 };
  public static ProtoOATrendbar DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override ProtoOATrendbar DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override ProtoOATrendbar ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::OpenApiModelMessages.internal__static_ProtoOATrendbar__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<ProtoOATrendbar, ProtoOATrendbar.Builder> InternalFieldAccessors {
    get { return global::OpenApiModelMessages.internal__static_ProtoOATrendbar__FieldAccessorTable; }
  }
  
  public const int VolumeFieldNumber = 3;
  private bool hasVolume;
  private long volume_;
  public bool HasVolume {
    get { return hasVolume; }
  }
  public long Volume {
    get { return volume_; }
  }
  
  public const int PeriodFieldNumber = 4;
  private bool hasPeriod;
  private global::ProtoOATrendbarPeriod period_ = global::ProtoOATrendbarPeriod.M1;
  public bool HasPeriod {
    get { return hasPeriod; }
  }
  public global::ProtoOATrendbarPeriod Period {
    get { return period_; }
  }
  
  public const int LowFieldNumber = 5;
  private bool hasLow;
  private long low_;
  public bool HasLow {
    get { return hasLow; }
  }
  public long Low {
    get { return low_; }
  }
  
  public const int DeltaOpenFieldNumber = 6;
  private bool hasDeltaOpen;
  private ulong deltaOpen_;
  public bool HasDeltaOpen {
    get { return hasDeltaOpen; }
  }
  [global::System.CLSCompliant(false)]
  public ulong DeltaOpen {
    get { return deltaOpen_; }
  }
  
  public const int DeltaCloseFieldNumber = 7;
  private bool hasDeltaClose;
  private ulong deltaClose_;
  public bool HasDeltaClose {
    get { return hasDeltaClose; }
  }
  [global::System.CLSCompliant(false)]
  public ulong DeltaClose {
    get { return deltaClose_; }
  }
  
  public const int DeltaHighFieldNumber = 8;
  private bool hasDeltaHigh;
  private ulong deltaHigh_;
  public bool HasDeltaHigh {
    get { return hasDeltaHigh; }
  }
  [global::System.CLSCompliant(false)]
  public ulong DeltaHigh {
    get { return deltaHigh_; }
  }
  
  public const int UtcTimestampInMinutesFieldNumber = 9;
  private bool hasUtcTimestampInMinutes;
  private uint utcTimestampInMinutes_;
  public bool HasUtcTimestampInMinutes {
    get { return hasUtcTimestampInMinutes; }
  }
  [global::System.CLSCompliant(false)]
  public uint UtcTimestampInMinutes {
    get { return utcTimestampInMinutes_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasVolume) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _protoOATrendbarFieldNames;
    if (hasVolume) {
      output.WriteInt64(3, field_names[6], Volume);
    }
    if (hasPeriod) {
      output.WriteEnum(4, field_names[4], (int) Period, Period);
    }
    if (hasLow) {
      output.WriteInt64(5, field_names[3], Low);
    }
    if (hasDeltaOpen) {
      output.WriteUInt64(6, field_names[2], DeltaOpen);
    }
    if (hasDeltaClose) {
      output.WriteUInt64(7, field_names[0], DeltaClose);
    }
    if (hasDeltaHigh) {
      output.WriteUInt64(8, field_names[1], DeltaHigh);
    }
    if (hasUtcTimestampInMinutes) {
      output.WriteUInt32(9, field_names[5], UtcTimestampInMinutes);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasVolume) {
      size += pb::CodedOutputStream.ComputeInt64Size(3, Volume);
    }
    if (hasPeriod) {
      size += pb::CodedOutputStream.ComputeEnumSize(4, (int) Period);
    }
    if (hasLow) {
      size += pb::CodedOutputStream.ComputeInt64Size(5, Low);
    }
    if (hasDeltaOpen) {
      size += pb::CodedOutputStream.ComputeUInt64Size(6, DeltaOpen);
    }
    if (hasDeltaClose) {
      size += pb::CodedOutputStream.ComputeUInt64Size(7, DeltaClose);
    }
    if (hasDeltaHigh) {
      size += pb::CodedOutputStream.ComputeUInt64Size(8, DeltaHigh);
    }
    if (hasUtcTimestampInMinutes) {
      size += pb::CodedOutputStream.ComputeUInt32Size(9, UtcTimestampInMinutes);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static ProtoOATrendbar ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOATrendbar ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOATrendbar ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOATrendbar ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOATrendbar ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOATrendbar ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static ProtoOATrendbar ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static ProtoOATrendbar ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static ProtoOATrendbar ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOATrendbar ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private ProtoOATrendbar MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(ProtoOATrendbar prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<ProtoOATrendbar, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(ProtoOATrendbar cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private ProtoOATrendbar result;
    
    private ProtoOATrendbar PrepareBuilder() {
      if (resultIsReadOnly) {
        ProtoOATrendbar original = result;
        result = new ProtoOATrendbar();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override ProtoOATrendbar MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::ProtoOATrendbar.Descriptor; }
    }
    
    public override ProtoOATrendbar DefaultInstanceForType {
      get { return global::ProtoOATrendbar.DefaultInstance; }
    }
    
    public override ProtoOATrendbar BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is ProtoOATrendbar) {
        return MergeFrom((ProtoOATrendbar) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(ProtoOATrendbar other) {
      if (other == global::ProtoOATrendbar.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasVolume) {
        Volume = other.Volume;
      }
      if (other.HasPeriod) {
        Period = other.Period;
      }
      if (other.HasLow) {
        Low = other.Low;
      }
      if (other.HasDeltaOpen) {
        DeltaOpen = other.DeltaOpen;
      }
      if (other.HasDeltaClose) {
        DeltaClose = other.DeltaClose;
      }
      if (other.HasDeltaHigh) {
        DeltaHigh = other.DeltaHigh;
      }
      if (other.HasUtcTimestampInMinutes) {
        UtcTimestampInMinutes = other.UtcTimestampInMinutes;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_protoOATrendbarFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _protoOATrendbarFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 24: {
            result.hasVolume = input.ReadInt64(ref result.volume_);
            break;
          }
          case 32: {
            object unknown;
            if(input.ReadEnum(ref result.period_, out unknown)) {
              result.hasPeriod = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(4, (ulong)(int)unknown);
            }
            break;
          }
          case 40: {
            result.hasLow = input.ReadInt64(ref result.low_);
            break;
          }
          case 48: {
            result.hasDeltaOpen = input.ReadUInt64(ref result.deltaOpen_);
            break;
          }
          case 56: {
            result.hasDeltaClose = input.ReadUInt64(ref result.deltaClose_);
            break;
          }
          case 64: {
            result.hasDeltaHigh = input.ReadUInt64(ref result.deltaHigh_);
            break;
          }
          case 72: {
            result.hasUtcTimestampInMinutes = input.ReadUInt32(ref result.utcTimestampInMinutes_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasVolume {
      get { return result.hasVolume; }
    }
    public long Volume {
      get { return result.Volume; }
      set { SetVolume(value); }
    }
    public Builder SetVolume(long value) {
      PrepareBuilder();
      result.hasVolume = true;
      result.volume_ = value;
      return this;
    }
    public Builder ClearVolume() {
      PrepareBuilder();
      result.hasVolume = false;
      result.volume_ = 0L;
      return this;
    }
    
    public bool HasPeriod {
     get { return result.hasPeriod; }
    }
    public global::ProtoOATrendbarPeriod Period {
      get { return result.Period; }
      set { SetPeriod(value); }
    }
    public Builder SetPeriod(global::ProtoOATrendbarPeriod value) {
      PrepareBuilder();
      result.hasPeriod = true;
      result.period_ = value;
      return this;
    }
    public Builder ClearPeriod() {
      PrepareBuilder();
      result.hasPeriod = false;
      result.period_ = global::ProtoOATrendbarPeriod.M1;
      return this;
    }
    
    public bool HasLow {
      get { return result.hasLow; }
    }
    public long Low {
      get { return result.Low; }
      set { SetLow(value); }
    }
    public Builder SetLow(long value) {
      PrepareBuilder();
      result.hasLow = true;
      result.low_ = value;
      return this;
    }
    public Builder ClearLow() {
      PrepareBuilder();
      result.hasLow = false;
      result.low_ = 0L;
      return this;
    }
    
    public bool HasDeltaOpen {
      get { return result.hasDeltaOpen; }
    }
    [global::System.CLSCompliant(false)]
    public ulong DeltaOpen {
      get { return result.DeltaOpen; }
      set { SetDeltaOpen(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetDeltaOpen(ulong value) {
      PrepareBuilder();
      result.hasDeltaOpen = true;
      result.deltaOpen_ = value;
      return this;
    }
    public Builder ClearDeltaOpen() {
      PrepareBuilder();
      result.hasDeltaOpen = false;
      result.deltaOpen_ = 0UL;
      return this;
    }
    
    public bool HasDeltaClose {
      get { return result.hasDeltaClose; }
    }
    [global::System.CLSCompliant(false)]
    public ulong DeltaClose {
      get { return result.DeltaClose; }
      set { SetDeltaClose(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetDeltaClose(ulong value) {
      PrepareBuilder();
      result.hasDeltaClose = true;
      result.deltaClose_ = value;
      return this;
    }
    public Builder ClearDeltaClose() {
      PrepareBuilder();
      result.hasDeltaClose = false;
      result.deltaClose_ = 0UL;
      return this;
    }
    
    public bool HasDeltaHigh {
      get { return result.hasDeltaHigh; }
    }
    [global::System.CLSCompliant(false)]
    public ulong DeltaHigh {
      get { return result.DeltaHigh; }
      set { SetDeltaHigh(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetDeltaHigh(ulong value) {
      PrepareBuilder();
      result.hasDeltaHigh = true;
      result.deltaHigh_ = value;
      return this;
    }
    public Builder ClearDeltaHigh() {
      PrepareBuilder();
      result.hasDeltaHigh = false;
      result.deltaHigh_ = 0UL;
      return this;
    }
    
    public bool HasUtcTimestampInMinutes {
      get { return result.hasUtcTimestampInMinutes; }
    }
    [global::System.CLSCompliant(false)]
    public uint UtcTimestampInMinutes {
      get { return result.UtcTimestampInMinutes; }
      set { SetUtcTimestampInMinutes(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetUtcTimestampInMinutes(uint value) {
      PrepareBuilder();
      result.hasUtcTimestampInMinutes = true;
      result.utcTimestampInMinutes_ = value;
      return this;
    }
    public Builder ClearUtcTimestampInMinutes() {
      PrepareBuilder();
      result.hasUtcTimestampInMinutes = false;
      result.utcTimestampInMinutes_ = 0;
      return this;
    }
  }
  static ProtoOATrendbar() {
    object.ReferenceEquals(global::OpenApiModelMessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class ProtoOAExpectedMargin : pb::GeneratedMessage<ProtoOAExpectedMargin, ProtoOAExpectedMargin.Builder> {
  private ProtoOAExpectedMargin() { }
  private static readonly ProtoOAExpectedMargin defaultInstance = new ProtoOAExpectedMargin().MakeReadOnly();
  private static readonly string[] _protoOAExpectedMarginFieldNames = new string[] { "buyMargin", "sellMargin", "volume" };
  private static readonly uint[] _protoOAExpectedMarginFieldTags = new uint[] { 16, 24, 8 };
  public static ProtoOAExpectedMargin DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override ProtoOAExpectedMargin DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override ProtoOAExpectedMargin ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::OpenApiModelMessages.internal__static_ProtoOAExpectedMargin__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<ProtoOAExpectedMargin, ProtoOAExpectedMargin.Builder> InternalFieldAccessors {
    get { return global::OpenApiModelMessages.internal__static_ProtoOAExpectedMargin__FieldAccessorTable; }
  }
  
  public const int VolumeFieldNumber = 1;
  private bool hasVolume;
  private long volume_;
  public bool HasVolume {
    get { return hasVolume; }
  }
  public long Volume {
    get { return volume_; }
  }
  
  public const int BuyMarginFieldNumber = 2;
  private bool hasBuyMargin;
  private long buyMargin_;
  public bool HasBuyMargin {
    get { return hasBuyMargin; }
  }
  public long BuyMargin {
    get { return buyMargin_; }
  }
  
  public const int SellMarginFieldNumber = 3;
  private bool hasSellMargin;
  private long sellMargin_;
  public bool HasSellMargin {
    get { return hasSellMargin; }
  }
  public long SellMargin {
    get { return sellMargin_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasVolume) return false;
      if (!hasBuyMargin) return false;
      if (!hasSellMargin) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _protoOAExpectedMarginFieldNames;
    if (hasVolume) {
      output.WriteInt64(1, field_names[2], Volume);
    }
    if (hasBuyMargin) {
      output.WriteInt64(2, field_names[0], BuyMargin);
    }
    if (hasSellMargin) {
      output.WriteInt64(3, field_names[1], SellMargin);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasVolume) {
      size += pb::CodedOutputStream.ComputeInt64Size(1, Volume);
    }
    if (hasBuyMargin) {
      size += pb::CodedOutputStream.ComputeInt64Size(2, BuyMargin);
    }
    if (hasSellMargin) {
      size += pb::CodedOutputStream.ComputeInt64Size(3, SellMargin);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static ProtoOAExpectedMargin ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOAExpectedMargin ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOAExpectedMargin ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOAExpectedMargin ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOAExpectedMargin ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOAExpectedMargin ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static ProtoOAExpectedMargin ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static ProtoOAExpectedMargin ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static ProtoOAExpectedMargin ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOAExpectedMargin ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private ProtoOAExpectedMargin MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(ProtoOAExpectedMargin prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<ProtoOAExpectedMargin, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(ProtoOAExpectedMargin cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private ProtoOAExpectedMargin result;
    
    private ProtoOAExpectedMargin PrepareBuilder() {
      if (resultIsReadOnly) {
        ProtoOAExpectedMargin original = result;
        result = new ProtoOAExpectedMargin();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override ProtoOAExpectedMargin MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::ProtoOAExpectedMargin.Descriptor; }
    }
    
    public override ProtoOAExpectedMargin DefaultInstanceForType {
      get { return global::ProtoOAExpectedMargin.DefaultInstance; }
    }
    
    public override ProtoOAExpectedMargin BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is ProtoOAExpectedMargin) {
        return MergeFrom((ProtoOAExpectedMargin) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(ProtoOAExpectedMargin other) {
      if (other == global::ProtoOAExpectedMargin.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasVolume) {
        Volume = other.Volume;
      }
      if (other.HasBuyMargin) {
        BuyMargin = other.BuyMargin;
      }
      if (other.HasSellMargin) {
        SellMargin = other.SellMargin;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_protoOAExpectedMarginFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _protoOAExpectedMarginFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasVolume = input.ReadInt64(ref result.volume_);
            break;
          }
          case 16: {
            result.hasBuyMargin = input.ReadInt64(ref result.buyMargin_);
            break;
          }
          case 24: {
            result.hasSellMargin = input.ReadInt64(ref result.sellMargin_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasVolume {
      get { return result.hasVolume; }
    }
    public long Volume {
      get { return result.Volume; }
      set { SetVolume(value); }
    }
    public Builder SetVolume(long value) {
      PrepareBuilder();
      result.hasVolume = true;
      result.volume_ = value;
      return this;
    }
    public Builder ClearVolume() {
      PrepareBuilder();
      result.hasVolume = false;
      result.volume_ = 0L;
      return this;
    }
    
    public bool HasBuyMargin {
      get { return result.hasBuyMargin; }
    }
    public long BuyMargin {
      get { return result.BuyMargin; }
      set { SetBuyMargin(value); }
    }
    public Builder SetBuyMargin(long value) {
      PrepareBuilder();
      result.hasBuyMargin = true;
      result.buyMargin_ = value;
      return this;
    }
    public Builder ClearBuyMargin() {
      PrepareBuilder();
      result.hasBuyMargin = false;
      result.buyMargin_ = 0L;
      return this;
    }
    
    public bool HasSellMargin {
      get { return result.hasSellMargin; }
    }
    public long SellMargin {
      get { return result.SellMargin; }
      set { SetSellMargin(value); }
    }
    public Builder SetSellMargin(long value) {
      PrepareBuilder();
      result.hasSellMargin = true;
      result.sellMargin_ = value;
      return this;
    }
    public Builder ClearSellMargin() {
      PrepareBuilder();
      result.hasSellMargin = false;
      result.sellMargin_ = 0L;
      return this;
    }
  }
  static ProtoOAExpectedMargin() {
    object.ReferenceEquals(global::OpenApiModelMessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class ProtoOATickData : pb::GeneratedMessage<ProtoOATickData, ProtoOATickData.Builder> {
  private ProtoOATickData() { }
  private static readonly ProtoOATickData defaultInstance = new ProtoOATickData().MakeReadOnly();
  private static readonly string[] _protoOATickDataFieldNames = new string[] { "tick", "timestamp" };
  private static readonly uint[] _protoOATickDataFieldTags = new uint[] { 16, 8 };
  public static ProtoOATickData DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override ProtoOATickData DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override ProtoOATickData ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::OpenApiModelMessages.internal__static_ProtoOATickData__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<ProtoOATickData, ProtoOATickData.Builder> InternalFieldAccessors {
    get { return global::OpenApiModelMessages.internal__static_ProtoOATickData__FieldAccessorTable; }
  }
  
  public const int TimestampFieldNumber = 1;
  private bool hasTimestamp;
  private long timestamp_;
  public bool HasTimestamp {
    get { return hasTimestamp; }
  }
  public long Timestamp {
    get { return timestamp_; }
  }
  
  public const int TickFieldNumber = 2;
  private bool hasTick;
  private long tick_;
  public bool HasTick {
    get { return hasTick; }
  }
  public long Tick {
    get { return tick_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasTimestamp) return false;
      if (!hasTick) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _protoOATickDataFieldNames;
    if (hasTimestamp) {
      output.WriteInt64(1, field_names[1], Timestamp);
    }
    if (hasTick) {
      output.WriteInt64(2, field_names[0], Tick);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasTimestamp) {
      size += pb::CodedOutputStream.ComputeInt64Size(1, Timestamp);
    }
    if (hasTick) {
      size += pb::CodedOutputStream.ComputeInt64Size(2, Tick);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static ProtoOATickData ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOATickData ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOATickData ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOATickData ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOATickData ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOATickData ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static ProtoOATickData ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static ProtoOATickData ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static ProtoOATickData ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOATickData ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private ProtoOATickData MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(ProtoOATickData prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<ProtoOATickData, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(ProtoOATickData cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private ProtoOATickData result;
    
    private ProtoOATickData PrepareBuilder() {
      if (resultIsReadOnly) {
        ProtoOATickData original = result;
        result = new ProtoOATickData();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override ProtoOATickData MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::ProtoOATickData.Descriptor; }
    }
    
    public override ProtoOATickData DefaultInstanceForType {
      get { return global::ProtoOATickData.DefaultInstance; }
    }
    
    public override ProtoOATickData BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is ProtoOATickData) {
        return MergeFrom((ProtoOATickData) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(ProtoOATickData other) {
      if (other == global::ProtoOATickData.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasTimestamp) {
        Timestamp = other.Timestamp;
      }
      if (other.HasTick) {
        Tick = other.Tick;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_protoOATickDataFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _protoOATickDataFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasTimestamp = input.ReadInt64(ref result.timestamp_);
            break;
          }
          case 16: {
            result.hasTick = input.ReadInt64(ref result.tick_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasTimestamp {
      get { return result.hasTimestamp; }
    }
    public long Timestamp {
      get { return result.Timestamp; }
      set { SetTimestamp(value); }
    }
    public Builder SetTimestamp(long value) {
      PrepareBuilder();
      result.hasTimestamp = true;
      result.timestamp_ = value;
      return this;
    }
    public Builder ClearTimestamp() {
      PrepareBuilder();
      result.hasTimestamp = false;
      result.timestamp_ = 0L;
      return this;
    }
    
    public bool HasTick {
      get { return result.hasTick; }
    }
    public long Tick {
      get { return result.Tick; }
      set { SetTick(value); }
    }
    public Builder SetTick(long value) {
      PrepareBuilder();
      result.hasTick = true;
      result.tick_ = value;
      return this;
    }
    public Builder ClearTick() {
      PrepareBuilder();
      result.hasTick = false;
      result.tick_ = 0L;
      return this;
    }
  }
  static ProtoOATickData() {
    object.ReferenceEquals(global::OpenApiModelMessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class ProtoOACtidProfile : pb::GeneratedMessage<ProtoOACtidProfile, ProtoOACtidProfile.Builder> {
  private ProtoOACtidProfile() { }
  private static readonly ProtoOACtidProfile defaultInstance = new ProtoOACtidProfile().MakeReadOnly();
  private static readonly string[] _protoOACtidProfileFieldNames = new string[] { "userId" };
  private static readonly uint[] _protoOACtidProfileFieldTags = new uint[] { 8 };
  public static ProtoOACtidProfile DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override ProtoOACtidProfile DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override ProtoOACtidProfile ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::OpenApiModelMessages.internal__static_ProtoOACtidProfile__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<ProtoOACtidProfile, ProtoOACtidProfile.Builder> InternalFieldAccessors {
    get { return global::OpenApiModelMessages.internal__static_ProtoOACtidProfile__FieldAccessorTable; }
  }
  
  public const int UserIdFieldNumber = 1;
  private bool hasUserId;
  private long userId_;
  public bool HasUserId {
    get { return hasUserId; }
  }
  public long UserId {
    get { return userId_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasUserId) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _protoOACtidProfileFieldNames;
    if (hasUserId) {
      output.WriteInt64(1, field_names[0], UserId);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasUserId) {
      size += pb::CodedOutputStream.ComputeInt64Size(1, UserId);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static ProtoOACtidProfile ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOACtidProfile ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOACtidProfile ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOACtidProfile ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOACtidProfile ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOACtidProfile ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static ProtoOACtidProfile ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static ProtoOACtidProfile ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static ProtoOACtidProfile ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOACtidProfile ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private ProtoOACtidProfile MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(ProtoOACtidProfile prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<ProtoOACtidProfile, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(ProtoOACtidProfile cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private ProtoOACtidProfile result;
    
    private ProtoOACtidProfile PrepareBuilder() {
      if (resultIsReadOnly) {
        ProtoOACtidProfile original = result;
        result = new ProtoOACtidProfile();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override ProtoOACtidProfile MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::ProtoOACtidProfile.Descriptor; }
    }
    
    public override ProtoOACtidProfile DefaultInstanceForType {
      get { return global::ProtoOACtidProfile.DefaultInstance; }
    }
    
    public override ProtoOACtidProfile BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is ProtoOACtidProfile) {
        return MergeFrom((ProtoOACtidProfile) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(ProtoOACtidProfile other) {
      if (other == global::ProtoOACtidProfile.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasUserId) {
        UserId = other.UserId;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_protoOACtidProfileFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _protoOACtidProfileFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasUserId = input.ReadInt64(ref result.userId_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasUserId {
      get { return result.hasUserId; }
    }
    public long UserId {
      get { return result.UserId; }
      set { SetUserId(value); }
    }
    public Builder SetUserId(long value) {
      PrepareBuilder();
      result.hasUserId = true;
      result.userId_ = value;
      return this;
    }
    public Builder ClearUserId() {
      PrepareBuilder();
      result.hasUserId = false;
      result.userId_ = 0L;
      return this;
    }
  }
  static ProtoOACtidProfile() {
    object.ReferenceEquals(global::OpenApiModelMessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class ProtoOACtidTraderAccount : pb::GeneratedMessage<ProtoOACtidTraderAccount, ProtoOACtidTraderAccount.Builder> {
  private ProtoOACtidTraderAccount() { }
  private static readonly ProtoOACtidTraderAccount defaultInstance = new ProtoOACtidTraderAccount().MakeReadOnly();
  private static readonly string[] _protoOACtidTraderAccountFieldNames = new string[] { "ctidTraderAccountId", "isLive", "traderLogin" };
  private static readonly uint[] _protoOACtidTraderAccountFieldTags = new uint[] { 8, 16, 24 };
  public static ProtoOACtidTraderAccount DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override ProtoOACtidTraderAccount DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override ProtoOACtidTraderAccount ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::OpenApiModelMessages.internal__static_ProtoOACtidTraderAccount__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<ProtoOACtidTraderAccount, ProtoOACtidTraderAccount.Builder> InternalFieldAccessors {
    get { return global::OpenApiModelMessages.internal__static_ProtoOACtidTraderAccount__FieldAccessorTable; }
  }
  
  public const int CtidTraderAccountIdFieldNumber = 1;
  private bool hasCtidTraderAccountId;
  private ulong ctidTraderAccountId_;
  public bool HasCtidTraderAccountId {
    get { return hasCtidTraderAccountId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong CtidTraderAccountId {
    get { return ctidTraderAccountId_; }
  }
  
  public const int IsLiveFieldNumber = 2;
  private bool hasIsLive;
  private bool isLive_;
  public bool HasIsLive {
    get { return hasIsLive; }
  }
  public bool IsLive {
    get { return isLive_; }
  }
  
  public const int TraderLoginFieldNumber = 3;
  private bool hasTraderLogin;
  private long traderLogin_;
  public bool HasTraderLogin {
    get { return hasTraderLogin; }
  }
  public long TraderLogin {
    get { return traderLogin_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasCtidTraderAccountId) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _protoOACtidTraderAccountFieldNames;
    if (hasCtidTraderAccountId) {
      output.WriteUInt64(1, field_names[0], CtidTraderAccountId);
    }
    if (hasIsLive) {
      output.WriteBool(2, field_names[1], IsLive);
    }
    if (hasTraderLogin) {
      output.WriteInt64(3, field_names[2], TraderLogin);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasCtidTraderAccountId) {
      size += pb::CodedOutputStream.ComputeUInt64Size(1, CtidTraderAccountId);
    }
    if (hasIsLive) {
      size += pb::CodedOutputStream.ComputeBoolSize(2, IsLive);
    }
    if (hasTraderLogin) {
      size += pb::CodedOutputStream.ComputeInt64Size(3, TraderLogin);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static ProtoOACtidTraderAccount ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOACtidTraderAccount ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOACtidTraderAccount ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOACtidTraderAccount ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOACtidTraderAccount ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOACtidTraderAccount ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static ProtoOACtidTraderAccount ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static ProtoOACtidTraderAccount ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static ProtoOACtidTraderAccount ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOACtidTraderAccount ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private ProtoOACtidTraderAccount MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(ProtoOACtidTraderAccount prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<ProtoOACtidTraderAccount, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(ProtoOACtidTraderAccount cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private ProtoOACtidTraderAccount result;
    
    private ProtoOACtidTraderAccount PrepareBuilder() {
      if (resultIsReadOnly) {
        ProtoOACtidTraderAccount original = result;
        result = new ProtoOACtidTraderAccount();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override ProtoOACtidTraderAccount MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::ProtoOACtidTraderAccount.Descriptor; }
    }
    
    public override ProtoOACtidTraderAccount DefaultInstanceForType {
      get { return global::ProtoOACtidTraderAccount.DefaultInstance; }
    }
    
    public override ProtoOACtidTraderAccount BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is ProtoOACtidTraderAccount) {
        return MergeFrom((ProtoOACtidTraderAccount) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(ProtoOACtidTraderAccount other) {
      if (other == global::ProtoOACtidTraderAccount.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasCtidTraderAccountId) {
        CtidTraderAccountId = other.CtidTraderAccountId;
      }
      if (other.HasIsLive) {
        IsLive = other.IsLive;
      }
      if (other.HasTraderLogin) {
        TraderLogin = other.TraderLogin;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_protoOACtidTraderAccountFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _protoOACtidTraderAccountFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasCtidTraderAccountId = input.ReadUInt64(ref result.ctidTraderAccountId_);
            break;
          }
          case 16: {
            result.hasIsLive = input.ReadBool(ref result.isLive_);
            break;
          }
          case 24: {
            result.hasTraderLogin = input.ReadInt64(ref result.traderLogin_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasCtidTraderAccountId {
      get { return result.hasCtidTraderAccountId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong CtidTraderAccountId {
      get { return result.CtidTraderAccountId; }
      set { SetCtidTraderAccountId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetCtidTraderAccountId(ulong value) {
      PrepareBuilder();
      result.hasCtidTraderAccountId = true;
      result.ctidTraderAccountId_ = value;
      return this;
    }
    public Builder ClearCtidTraderAccountId() {
      PrepareBuilder();
      result.hasCtidTraderAccountId = false;
      result.ctidTraderAccountId_ = 0UL;
      return this;
    }
    
    public bool HasIsLive {
      get { return result.hasIsLive; }
    }
    public bool IsLive {
      get { return result.IsLive; }
      set { SetIsLive(value); }
    }
    public Builder SetIsLive(bool value) {
      PrepareBuilder();
      result.hasIsLive = true;
      result.isLive_ = value;
      return this;
    }
    public Builder ClearIsLive() {
      PrepareBuilder();
      result.hasIsLive = false;
      result.isLive_ = false;
      return this;
    }
    
    public bool HasTraderLogin {
      get { return result.hasTraderLogin; }
    }
    public long TraderLogin {
      get { return result.TraderLogin; }
      set { SetTraderLogin(value); }
    }
    public Builder SetTraderLogin(long value) {
      PrepareBuilder();
      result.hasTraderLogin = true;
      result.traderLogin_ = value;
      return this;
    }
    public Builder ClearTraderLogin() {
      PrepareBuilder();
      result.hasTraderLogin = false;
      result.traderLogin_ = 0L;
      return this;
    }
  }
  static ProtoOACtidTraderAccount() {
    object.ReferenceEquals(global::OpenApiModelMessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class ProtoOAAssetClass : pb::GeneratedMessage<ProtoOAAssetClass, ProtoOAAssetClass.Builder> {
  private ProtoOAAssetClass() { }
  private static readonly ProtoOAAssetClass defaultInstance = new ProtoOAAssetClass().MakeReadOnly();
  private static readonly string[] _protoOAAssetClassFieldNames = new string[] { "id", "name" };
  private static readonly uint[] _protoOAAssetClassFieldTags = new uint[] { 8, 18 };
  public static ProtoOAAssetClass DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override ProtoOAAssetClass DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override ProtoOAAssetClass ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::OpenApiModelMessages.internal__static_ProtoOAAssetClass__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<ProtoOAAssetClass, ProtoOAAssetClass.Builder> InternalFieldAccessors {
    get { return global::OpenApiModelMessages.internal__static_ProtoOAAssetClass__FieldAccessorTable; }
  }
  
  public const int IdFieldNumber = 1;
  private bool hasId;
  private long id_;
  public bool HasId {
    get { return hasId; }
  }
  public long Id {
    get { return id_; }
  }
  
  public const int NameFieldNumber = 2;
  private bool hasName;
  private string name_ = "";
  public bool HasName {
    get { return hasName; }
  }
  public string Name {
    get { return name_; }
  }
  
  public override bool IsInitialized {
    get {
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _protoOAAssetClassFieldNames;
    if (hasId) {
      output.WriteInt64(1, field_names[0], Id);
    }
    if (hasName) {
      output.WriteString(2, field_names[1], Name);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasId) {
      size += pb::CodedOutputStream.ComputeInt64Size(1, Id);
    }
    if (hasName) {
      size += pb::CodedOutputStream.ComputeStringSize(2, Name);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static ProtoOAAssetClass ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOAAssetClass ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOAAssetClass ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOAAssetClass ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOAAssetClass ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOAAssetClass ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static ProtoOAAssetClass ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static ProtoOAAssetClass ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static ProtoOAAssetClass ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOAAssetClass ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private ProtoOAAssetClass MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(ProtoOAAssetClass prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<ProtoOAAssetClass, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(ProtoOAAssetClass cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private ProtoOAAssetClass result;
    
    private ProtoOAAssetClass PrepareBuilder() {
      if (resultIsReadOnly) {
        ProtoOAAssetClass original = result;
        result = new ProtoOAAssetClass();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override ProtoOAAssetClass MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::ProtoOAAssetClass.Descriptor; }
    }
    
    public override ProtoOAAssetClass DefaultInstanceForType {
      get { return global::ProtoOAAssetClass.DefaultInstance; }
    }
    
    public override ProtoOAAssetClass BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is ProtoOAAssetClass) {
        return MergeFrom((ProtoOAAssetClass) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(ProtoOAAssetClass other) {
      if (other == global::ProtoOAAssetClass.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasName) {
        Name = other.Name;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_protoOAAssetClassFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _protoOAAssetClassFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasId = input.ReadInt64(ref result.id_);
            break;
          }
          case 18: {
            result.hasName = input.ReadString(ref result.name_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasId {
      get { return result.hasId; }
    }
    public long Id {
      get { return result.Id; }
      set { SetId(value); }
    }
    public Builder SetId(long value) {
      PrepareBuilder();
      result.hasId = true;
      result.id_ = value;
      return this;
    }
    public Builder ClearId() {
      PrepareBuilder();
      result.hasId = false;
      result.id_ = 0L;
      return this;
    }
    
    public bool HasName {
      get { return result.hasName; }
    }
    public string Name {
      get { return result.Name; }
      set { SetName(value); }
    }
    public Builder SetName(string value) {
      pb::ThrowHelper.ThrowIfNull(value, "value");
      PrepareBuilder();
      result.hasName = true;
      result.name_ = value;
      return this;
    }
    public Builder ClearName() {
      PrepareBuilder();
      result.hasName = false;
      result.name_ = "";
      return this;
    }
  }
  static ProtoOAAssetClass() {
    object.ReferenceEquals(global::OpenApiModelMessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class ProtoOADepthQuote : pb::GeneratedMessage<ProtoOADepthQuote, ProtoOADepthQuote.Builder> {
  private ProtoOADepthQuote() { }
  private static readonly ProtoOADepthQuote defaultInstance = new ProtoOADepthQuote().MakeReadOnly();
  private static readonly string[] _protoOADepthQuoteFieldNames = new string[] { "ask", "bid", "id", "size" };
  private static readonly uint[] _protoOADepthQuoteFieldTags = new uint[] { 40, 32, 8, 24 };
  public static ProtoOADepthQuote DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override ProtoOADepthQuote DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override ProtoOADepthQuote ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::OpenApiModelMessages.internal__static_ProtoOADepthQuote__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<ProtoOADepthQuote, ProtoOADepthQuote.Builder> InternalFieldAccessors {
    get { return global::OpenApiModelMessages.internal__static_ProtoOADepthQuote__FieldAccessorTable; }
  }
  
  public const int IdFieldNumber = 1;
  private bool hasId;
  private ulong id_;
  public bool HasId {
    get { return hasId; }
  }
  [global::System.CLSCompliant(false)]
  public ulong Id {
    get { return id_; }
  }
  
  public const int SizeFieldNumber = 3;
  private bool hasSize;
  private ulong size_;
  public bool HasSize {
    get { return hasSize; }
  }
  [global::System.CLSCompliant(false)]
  public ulong Size {
    get { return size_; }
  }
  
  public const int BidFieldNumber = 4;
  private bool hasBid;
  private ulong bid_;
  public bool HasBid {
    get { return hasBid; }
  }
  [global::System.CLSCompliant(false)]
  public ulong Bid {
    get { return bid_; }
  }
  
  public const int AskFieldNumber = 5;
  private bool hasAsk;
  private ulong ask_;
  public bool HasAsk {
    get { return hasAsk; }
  }
  [global::System.CLSCompliant(false)]
  public ulong Ask {
    get { return ask_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasId) return false;
      if (!hasSize) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _protoOADepthQuoteFieldNames;
    if (hasId) {
      output.WriteUInt64(1, field_names[2], Id);
    }
    if (hasSize) {
      output.WriteUInt64(3, field_names[3], Size);
    }
    if (hasBid) {
      output.WriteUInt64(4, field_names[1], Bid);
    }
    if (hasAsk) {
      output.WriteUInt64(5, field_names[0], Ask);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasId) {
      size += pb::CodedOutputStream.ComputeUInt64Size(1, Id);
    }
    if (hasSize) {
      size += pb::CodedOutputStream.ComputeUInt64Size(3, Size);
    }
    if (hasBid) {
      size += pb::CodedOutputStream.ComputeUInt64Size(4, Bid);
    }
    if (hasAsk) {
      size += pb::CodedOutputStream.ComputeUInt64Size(5, Ask);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static ProtoOADepthQuote ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOADepthQuote ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOADepthQuote ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOADepthQuote ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOADepthQuote ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOADepthQuote ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static ProtoOADepthQuote ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static ProtoOADepthQuote ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static ProtoOADepthQuote ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOADepthQuote ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private ProtoOADepthQuote MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(ProtoOADepthQuote prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<ProtoOADepthQuote, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(ProtoOADepthQuote cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private ProtoOADepthQuote result;
    
    private ProtoOADepthQuote PrepareBuilder() {
      if (resultIsReadOnly) {
        ProtoOADepthQuote original = result;
        result = new ProtoOADepthQuote();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override ProtoOADepthQuote MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::ProtoOADepthQuote.Descriptor; }
    }
    
    public override ProtoOADepthQuote DefaultInstanceForType {
      get { return global::ProtoOADepthQuote.DefaultInstance; }
    }
    
    public override ProtoOADepthQuote BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is ProtoOADepthQuote) {
        return MergeFrom((ProtoOADepthQuote) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(ProtoOADepthQuote other) {
      if (other == global::ProtoOADepthQuote.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.HasSize) {
        Size = other.Size;
      }
      if (other.HasBid) {
        Bid = other.Bid;
      }
      if (other.HasAsk) {
        Ask = other.Ask;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_protoOADepthQuoteFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _protoOADepthQuoteFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            result.hasId = input.ReadUInt64(ref result.id_);
            break;
          }
          case 24: {
            result.hasSize = input.ReadUInt64(ref result.size_);
            break;
          }
          case 32: {
            result.hasBid = input.ReadUInt64(ref result.bid_);
            break;
          }
          case 40: {
            result.hasAsk = input.ReadUInt64(ref result.ask_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasId {
      get { return result.hasId; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Id {
      get { return result.Id; }
      set { SetId(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetId(ulong value) {
      PrepareBuilder();
      result.hasId = true;
      result.id_ = value;
      return this;
    }
    public Builder ClearId() {
      PrepareBuilder();
      result.hasId = false;
      result.id_ = 0UL;
      return this;
    }
    
    public bool HasSize {
      get { return result.hasSize; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Size {
      get { return result.Size; }
      set { SetSize(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetSize(ulong value) {
      PrepareBuilder();
      result.hasSize = true;
      result.size_ = value;
      return this;
    }
    public Builder ClearSize() {
      PrepareBuilder();
      result.hasSize = false;
      result.size_ = 0UL;
      return this;
    }
    
    public bool HasBid {
      get { return result.hasBid; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Bid {
      get { return result.Bid; }
      set { SetBid(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetBid(ulong value) {
      PrepareBuilder();
      result.hasBid = true;
      result.bid_ = value;
      return this;
    }
    public Builder ClearBid() {
      PrepareBuilder();
      result.hasBid = false;
      result.bid_ = 0UL;
      return this;
    }
    
    public bool HasAsk {
      get { return result.hasAsk; }
    }
    [global::System.CLSCompliant(false)]
    public ulong Ask {
      get { return result.Ask; }
      set { SetAsk(value); }
    }
    [global::System.CLSCompliant(false)]
    public Builder SetAsk(ulong value) {
      PrepareBuilder();
      result.hasAsk = true;
      result.ask_ = value;
      return this;
    }
    public Builder ClearAsk() {
      PrepareBuilder();
      result.hasAsk = false;
      result.ask_ = 0UL;
      return this;
    }
  }
  static ProtoOADepthQuote() {
    object.ReferenceEquals(global::OpenApiModelMessages.Descriptor, null);
  }
}

[global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
public sealed partial class ProtoOAMarginCall : pb::GeneratedMessage<ProtoOAMarginCall, ProtoOAMarginCall.Builder> {
  private ProtoOAMarginCall() { }
  private static readonly ProtoOAMarginCall defaultInstance = new ProtoOAMarginCall().MakeReadOnly();
  private static readonly string[] _protoOAMarginCallFieldNames = new string[] { "marginCallType", "marginLevelThreshold", "utcLastUpdateTimestamp" };
  private static readonly uint[] _protoOAMarginCallFieldTags = new uint[] { 8, 17, 24 };
  public static ProtoOAMarginCall DefaultInstance {
    get { return defaultInstance; }
  }
  
  public override ProtoOAMarginCall DefaultInstanceForType {
    get { return DefaultInstance; }
  }
  
  protected override ProtoOAMarginCall ThisMessage {
    get { return this; }
  }
  
  public static pbd::MessageDescriptor Descriptor {
    get { return global::OpenApiModelMessages.internal__static_ProtoOAMarginCall__Descriptor; }
  }
  
  protected override pb::FieldAccess.FieldAccessorTable<ProtoOAMarginCall, ProtoOAMarginCall.Builder> InternalFieldAccessors {
    get { return global::OpenApiModelMessages.internal__static_ProtoOAMarginCall__FieldAccessorTable; }
  }
  
  public const int MarginCallTypeFieldNumber = 1;
  private bool hasMarginCallType;
  private global::ProtoOANotificationType marginCallType_ = global::ProtoOANotificationType.MARGIN_LEVEL_THRESHOLD_1;
  public bool HasMarginCallType {
    get { return hasMarginCallType; }
  }
  public global::ProtoOANotificationType MarginCallType {
    get { return marginCallType_; }
  }
  
  public const int MarginLevelThresholdFieldNumber = 2;
  private bool hasMarginLevelThreshold;
  private double marginLevelThreshold_;
  public bool HasMarginLevelThreshold {
    get { return hasMarginLevelThreshold; }
  }
  public double MarginLevelThreshold {
    get { return marginLevelThreshold_; }
  }
  
  public const int UtcLastUpdateTimestampFieldNumber = 3;
  private bool hasUtcLastUpdateTimestamp;
  private long utcLastUpdateTimestamp_;
  public bool HasUtcLastUpdateTimestamp {
    get { return hasUtcLastUpdateTimestamp; }
  }
  public long UtcLastUpdateTimestamp {
    get { return utcLastUpdateTimestamp_; }
  }
  
  public override bool IsInitialized {
    get {
      if (!hasMarginCallType) return false;
      if (!hasMarginLevelThreshold) return false;
      return true;
    }
  }
  
  public override void WriteTo(pb::ICodedOutputStream output) {
    CalcSerializedSize();
    string[] field_names = _protoOAMarginCallFieldNames;
    if (hasMarginCallType) {
      output.WriteEnum(1, field_names[0], (int) MarginCallType, MarginCallType);
    }
    if (hasMarginLevelThreshold) {
      output.WriteDouble(2, field_names[1], MarginLevelThreshold);
    }
    if (hasUtcLastUpdateTimestamp) {
      output.WriteInt64(3, field_names[2], UtcLastUpdateTimestamp);
    }
    UnknownFields.WriteTo(output);
  }
  
  private int memoizedSerializedSize = -1;
  public override int SerializedSize {
    get {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
      return CalcSerializedSize();
    }
  }
  
  private int CalcSerializedSize() {
    int size = memoizedSerializedSize;
    if (size != -1) return size;
    
    size = 0;
    if (hasMarginCallType) {
      size += pb::CodedOutputStream.ComputeEnumSize(1, (int) MarginCallType);
    }
    if (hasMarginLevelThreshold) {
      size += pb::CodedOutputStream.ComputeDoubleSize(2, MarginLevelThreshold);
    }
    if (hasUtcLastUpdateTimestamp) {
      size += pb::CodedOutputStream.ComputeInt64Size(3, UtcLastUpdateTimestamp);
    }
    size += UnknownFields.SerializedSize;
    memoizedSerializedSize = size;
    return size;
  }
  public static ProtoOAMarginCall ParseFrom(pb::ByteString data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOAMarginCall ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOAMarginCall ParseFrom(byte[] data) {
    return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
  }
  public static ProtoOAMarginCall ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
  }
  public static ProtoOAMarginCall ParseFrom(global::System.IO.Stream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOAMarginCall ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  public static ProtoOAMarginCall ParseDelimitedFrom(global::System.IO.Stream input) {
    return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
  }
  public static ProtoOAMarginCall ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
    return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
  }
  public static ProtoOAMarginCall ParseFrom(pb::ICodedInputStream input) {
    return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
  }
  public static ProtoOAMarginCall ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
    return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
  }
  private ProtoOAMarginCall MakeReadOnly() {
    return this;
  }
  
  public static Builder CreateBuilder() { return new Builder(); }
  public override Builder ToBuilder() { return CreateBuilder(this); }
  public override Builder CreateBuilderForType() { return new Builder(); }
  public static Builder CreateBuilder(ProtoOAMarginCall prototype) {
    return new Builder(prototype);
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class Builder : pb::GeneratedBuilder<ProtoOAMarginCall, Builder> {
    protected override Builder ThisBuilder {
      get { return this; }
    }
    public Builder() {
      result = DefaultInstance;
      resultIsReadOnly = true;
    }
    internal Builder(ProtoOAMarginCall cloneFrom) {
      result = cloneFrom;
      resultIsReadOnly = true;
    }
    
    private bool resultIsReadOnly;
    private ProtoOAMarginCall result;
    
    private ProtoOAMarginCall PrepareBuilder() {
      if (resultIsReadOnly) {
        ProtoOAMarginCall original = result;
        result = new ProtoOAMarginCall();
        resultIsReadOnly = false;
        MergeFrom(original);
      }
      return result;
    }
    
    public override bool IsInitialized {
      get { return result.IsInitialized; }
    }
    
    protected override ProtoOAMarginCall MessageBeingBuilt {
      get { return PrepareBuilder(); }
    }
    
    public override Builder Clear() {
      result = DefaultInstance;
      resultIsReadOnly = true;
      return this;
    }
    
    public override Builder Clone() {
      if (resultIsReadOnly) {
        return new Builder(result);
      } else {
        return new Builder().MergeFrom(result);
      }
    }
    
    public override pbd::MessageDescriptor DescriptorForType {
      get { return global::ProtoOAMarginCall.Descriptor; }
    }
    
    public override ProtoOAMarginCall DefaultInstanceForType {
      get { return global::ProtoOAMarginCall.DefaultInstance; }
    }
    
    public override ProtoOAMarginCall BuildPartial() {
      if (resultIsReadOnly) {
        return result;
      }
      resultIsReadOnly = true;
      return result.MakeReadOnly();
    }
    
    public override Builder MergeFrom(pb::IMessage other) {
      if (other is ProtoOAMarginCall) {
        return MergeFrom((ProtoOAMarginCall) other);
      } else {
        base.MergeFrom(other);
        return this;
      }
    }
    
    public override Builder MergeFrom(ProtoOAMarginCall other) {
      if (other == global::ProtoOAMarginCall.DefaultInstance) return this;
      PrepareBuilder();
      if (other.HasMarginCallType) {
        MarginCallType = other.MarginCallType;
      }
      if (other.HasMarginLevelThreshold) {
        MarginLevelThreshold = other.MarginLevelThreshold;
      }
      if (other.HasUtcLastUpdateTimestamp) {
        UtcLastUpdateTimestamp = other.UtcLastUpdateTimestamp;
      }
      this.MergeUnknownFields(other.UnknownFields);
      return this;
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input) {
      return MergeFrom(input, pb::ExtensionRegistry.Empty);
    }
    
    public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      PrepareBuilder();
      pb::UnknownFieldSet.Builder unknownFields = null;
      uint tag;
      string field_name;
      while (input.ReadTag(out tag, out field_name)) {
        if(tag == 0 && field_name != null) {
          int field_ordinal = global::System.Array.BinarySearch(_protoOAMarginCallFieldNames, field_name, global::System.StringComparer.Ordinal);
          if(field_ordinal >= 0)
            tag = _protoOAMarginCallFieldTags[field_ordinal];
          else {
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            continue;
          }
        }
        switch (tag) {
          case 0: {
            throw pb::InvalidProtocolBufferException.InvalidTag();
          }
          default: {
            if (pb::WireFormat.IsEndGroupTag(tag)) {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            if (unknownFields == null) {
              unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
            }
            ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
            break;
          }
          case 8: {
            object unknown;
            if(input.ReadEnum(ref result.marginCallType_, out unknown)) {
              result.hasMarginCallType = true;
            } else if(unknown is int) {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              unknownFields.MergeVarintField(1, (ulong)(int)unknown);
            }
            break;
          }
          case 17: {
            result.hasMarginLevelThreshold = input.ReadDouble(ref result.marginLevelThreshold_);
            break;
          }
          case 24: {
            result.hasUtcLastUpdateTimestamp = input.ReadInt64(ref result.utcLastUpdateTimestamp_);
            break;
          }
        }
      }
      
      if (unknownFields != null) {
        this.UnknownFields = unknownFields.Build();
      }
      return this;
    }
    
    
    public bool HasMarginCallType {
     get { return result.hasMarginCallType; }
    }
    public global::ProtoOANotificationType MarginCallType {
      get { return result.MarginCallType; }
      set { SetMarginCallType(value); }
    }
    public Builder SetMarginCallType(global::ProtoOANotificationType value) {
      PrepareBuilder();
      result.hasMarginCallType = true;
      result.marginCallType_ = value;
      return this;
    }
    public Builder ClearMarginCallType() {
      PrepareBuilder();
      result.hasMarginCallType = false;
      result.marginCallType_ = global::ProtoOANotificationType.MARGIN_LEVEL_THRESHOLD_1;
      return this;
    }
    
    public bool HasMarginLevelThreshold {
      get { return result.hasMarginLevelThreshold; }
    }
    public double MarginLevelThreshold {
      get { return result.MarginLevelThreshold; }
      set { SetMarginLevelThreshold(value); }
    }
    public Builder SetMarginLevelThreshold(double value) {
      PrepareBuilder();
      result.hasMarginLevelThreshold = true;
      result.marginLevelThreshold_ = value;
      return this;
    }
    public Builder ClearMarginLevelThreshold() {
      PrepareBuilder();
      result.hasMarginLevelThreshold = false;
      result.marginLevelThreshold_ = 0D;
      return this;
    }
    
    public bool HasUtcLastUpdateTimestamp {
      get { return result.hasUtcLastUpdateTimestamp; }
    }
    public long UtcLastUpdateTimestamp {
      get { return result.UtcLastUpdateTimestamp; }
      set { SetUtcLastUpdateTimestamp(value); }
    }
    public Builder SetUtcLastUpdateTimestamp(long value) {
      PrepareBuilder();
      result.hasUtcLastUpdateTimestamp = true;
      result.utcLastUpdateTimestamp_ = value;
      return this;
    }
    public Builder ClearUtcLastUpdateTimestamp() {
      PrepareBuilder();
      result.hasUtcLastUpdateTimestamp = false;
      result.utcLastUpdateTimestamp_ = 0L;
      return this;
    }
  }
  static ProtoOAMarginCall() {
    object.ReferenceEquals(global::OpenApiModelMessages.Descriptor, null);
  }
}

#endregion


#endregion Designer generated code
